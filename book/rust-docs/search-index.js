var searchIndex = JSON.parse('{\
"autofill":{"doc":"","t":[2,2,2,2,0,0,0,5,5,5,5,2,0,14,14,3,0,11,11,11,0,11,11,11,11,0,11,11,0,0,11,11,11,11,12,5,5,5,5,5,3,0,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,3,3,3,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,17,17,11,11,5,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,11,5,11,5,11,11,11,11,11,11,11,6,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,4,13,8,8,16,16,8,0,11,11,11,11,10,0,0,10,10,10,10,11,11,11,11,10,10,10,11,11,10,10,10,10,10,10,10,11,11,11,11,11,11,10,11,11,12,12,3,11,11,11,11,11,0,11,0,11,11,11,11,11,0,0,17,3,3,17,17,8,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11],"n":["ApiResult","AutofillApiError","Error","Result","db","encryption","error","ffi_autofill_c1ea_rustbuffer_alloc","ffi_autofill_c1ea_rustbuffer_free","ffi_autofill_c1ea_rustbuffer_from_bytes","ffi_autofill_c1ea_rustbuffer_reserve","get_registered_sync_engine","sync","sync_merge_field_check","uniffi_reexport_scaffolding","AutofillDb","addresses","begin_interrupt_scope","borrow","borrow_mut","credit_cards","deref","deref_mut","from","into","models","new","new_memory","schema","store","try_from","try_into","type_id","vzip","writer","touch","delete_credit_card","scrub_encrypted_credit_card_data","touch","update_credit_card","Metadata","address","borrow","borrow_mut","clone","clone_into","credit_card","default","eq","fmt","from","into","merge","sync_change_counter","time_created","time_last_modified","time_last_used","times_used","to_owned","try_from","try_into","type_id","vzip","Address","InternalAddress","UpdatableAddressFields","additional_name","additional_name","additional_name","address_level1","address_level1","address_level1","address_level2","address_level2","address_level2","address_level3","address_level3","address_level3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","country","country","country","default","default","default","email","email","email","eq","family_name","family_name","family_name","fmt","fmt","fmt","from","from","from","from","from_row","get_hash","given_name","given_name","given_name","guid","guid","hash","id","into","into","into","merge","metadata","metadata","metadata_mut","organization","organization","organization","postal_code","postal_code","postal_code","record_name","street_address","street_address","street_address","tel","tel","tel","time_created","time_last_modified","time_last_used","times_used","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CreditCard","InternalCreditCard","UpdatableCreditCardFields","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cc_exp_month","cc_exp_month","cc_exp_month","cc_exp_year","cc_exp_year","cc_exp_year","cc_name","cc_name","cc_name","cc_number_enc","cc_number_enc","cc_number_enc","cc_number_last_4","cc_number_last_4","cc_number_last_4","cc_type","cc_type","cc_type","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","fmt","fmt","fmt","from","from","from","from","from_row","guid","guid","has_scrubbed_data","id","into","into","into","merge","metadata","metadata","metadata_mut","record_name","time_created","time_last_modified","time_last_used","times_used","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ADDRESS_COMMON_COLS","ADDRESS_COMMON_VALS","AutofillConnectionInitializer","CREDIT_CARD_COMMON_COLS","CREDIT_CARD_COMMON_VALS","borrow","borrow_mut","create_empty_sync_temp_tables","finish","from","init","into","prepare","try_from","try_into","type_id","upgrade_from","vzip","Store","add_address","add_credit_card","borrow","borrow_mut","create_addresses_sync_engine","create_credit_cards_sync_engine","delete_address","delete_credit_card","from","get_address","get_all_addresses","get_all_credit_cards","get_credit_card","get_registered_sync_engine","into","new","new_shared_memory","register_with_sync_manager","scrub_encrypted_data","touch_address","touch_credit_card","try_from","try_into","type_id","update_address","update_credit_card","vzip","EncryptorDecryptor","borrow","borrow_mut","create_key","decrypt","decrypt_string","encrypt","encrypt_string","from","into","new","try_from","try_into","type_id","vzip","ApiResult","AutofillApiError","CryptoError","CryptoError","EmptyCyphertext","Error","IllegalDatabasePath","InterruptedError","InterruptedError","InvalidSyncPayload","IoError","JsonError","MissingEncryptionKey","NoSuchRecord","NoSuchRecord","OpenDatabaseError","Result","SqlError","SqlError","UnexpectedAutofillApiError","Utf8Error","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_error_handling","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","guid","reason","reason","reason","0","0","0","0","0","0","0","0","0","0","Forked","IncomingState","MergeResult","Merged","ProcessIncomingRecordImpl","ProcessOutgoingRecordImpl","Record","Record","SyncRecord","address","borrow","borrow","borrow_mut","borrow_mut","change_local_guid","credit_card","engine","fetch_incoming_states","fetch_outgoing_records","finish_incoming","finish_synced_items","fmt","fmt","from","from","get_local_dupe","id","insert_local_record","into","into","merge","metadata","metadata_mut","record_name","remove_record","remove_tombstone","stage_incoming","try_from","try_from","try_into","try_into","type_id","type_id","update_local_record","vzip","vzip","forked","merged","AddressPayload","borrow","borrow_mut","default","deserialize","from","incoming","into","outgoing","serialize","try_from","try_into","type_id","vzip","incoming","outgoing","COLLECTION_SYNCID_META_KEY","ConfigSyncEngine","EngineConfig","GLOBAL_SYNCID_META_KEY","LAST_SYNC_META_KEY","SyncEngineStorageImpl","apply_incoming","borrow","borrow","borrow_mut","borrow_mut","collection_name","from","from","get_collection_requests","get_incoming_impl","get_outgoing_impl","get_sync_assoc","into","into","new","reset","reset_local_sync_data","reset_storage","set_local_encryption_key","sync_finished","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wipe"],"q":["autofill","","","","","","","","","","","","","","","autofill::db","","","","","","","","","","","","","","","","","","","","autofill::db::addresses","autofill::db::credit_cards","","","","autofill::db::models","","","","","","","","","","","","","","","","","","","","","","","autofill::db::models::address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","autofill::db::models::credit_card","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","autofill::db::schema","","","","","","","","","","","","","","","","","","autofill::db::store","","","","","","","","","","","","","","","","","","","","","","","","","","","","autofill::encryption","","","","","","","","","","","","","","","autofill::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","autofill::error::AutofillApiError","","","","autofill::error::Error","","","","","","","","","","autofill::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","autofill::sync::MergeResult","","autofill::sync::address","","","","","","","","","","","","","","autofill::sync::credit_card","","autofill::sync::engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Metadata that’s common between the records.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Merge the metadata from <code>other</code>, and possibly <code>mirror</code>, into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs a three-way merge between an incoming, local, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs a three-way merge between an incoming, local, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Called by the sync manager to get a sync engine via the …","Calls <code>U::from(self)</code>.","","Creates a store backed by an in-memory database that …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Result enum for the public API","","","","","","","","","","","","","","","","Result enum for internal functions","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish the incoming phase. This will typically caused …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a local record that has the same values as the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,5,5,5,5,0,5,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,22,21,22,23,21,22,23,21,22,22,23,23,22,21,22,23,22,23,22,23,21,22,23,23,23,23,23,21,22,23,21,22,23,23,21,22,23,21,22,23,22,22,22,22,21,22,23,21,22,23,21,22,23,21,22,23,21,22,23,0,0,0,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,16,28,28,29,29,28,29,29,29,16,28,29,29,29,29,29,29,28,28,28,28,16,28,29,16,28,29,16,28,29,16,28,29,16,28,29,0,0,0,0,0,31,31,0,31,31,31,31,31,31,31,31,31,31,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,42,42,0,42,0,42,0,42,42,42,42,42,42,42,0,0,43,44,44,0,44,43,44,44,44,44,44,43,44,44,0,43,44,43,44,43,44,43,44,43,43,44,44,43,44,44,44,44,44,44,44,44,44,43,44,43,44,44,43,44,43,44,43,44,43,44,43,44,73,74,75,76,77,78,79,80,81,82,83,84,85,86,27,0,0,27,0,0,68,69,0,0,27,54,27,54,68,0,0,68,69,68,69,27,54,27,54,68,62,68,27,54,62,62,62,62,68,68,68,27,54,27,54,27,54,68,27,54,87,88,0,61,61,61,61,61,0,61,0,61,61,61,61,61,0,0,0,0,0,0,0,0,63,71,63,71,63,63,71,63,63,72,72,63,71,63,63,63,63,72,63,63,71,63,71,63,71,63,71,63,63],"f":[0,0,0,0,0,0,0,[[1,2],3],[[3,2]],[[4,2],3],[[3,1,2],3],0,0,0,0,0,0,[5,[[7,[6]]]],[[]],[[]],0,[5],[5],[[]],[[]],0,[[[9,[8]]],[[7,[5]]]],[10,[[7,[5]]]],0,0,[[],11],[[],11],[[],12],[[]],0,[[13,14],7],[[13,14],[[7,[15]]]],[13,7],[[13,14],7],[[13,14,16],7],0,0,[[]],[[]],[17,17],[[]],0,[[],17],[[17,17],15],[[17,18],19],[[]],[[]],[[17,17,[20,[17]]]],0,0,0,0,0,[[]],[[],11],[[],11],[[],12],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[22,22],[23,23],[[]],[[]],[[]],0,0,0,[[],21],[[],22],[[],23],0,0,0,[[22,22],15],0,0,0,[[21,18],19],[[22,18],19],[[23,18],19],[[]],[[]],[23,22],[[]],[24,[[11,[23,25]]]],[[],26],0,0,0,0,0,[22],[23,14],[[]],[[]],[[]],[[23,23,20],[[27,[23]]]],[23,17],0,[23,17],0,0,0,0,0,0,[[],10],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],[28,28],[29,29],[[]],[[]],[[]],[[],16],[[],28],[[],29],[[16,18],19],[[28,18],19],[[29,18],19],[[]],[[]],[29,28],[[]],[24,[[11,[29,25]]]],0,0,[29,15],[29,14],[[]],[[]],[[]],[[29,29,20],[[27,[29]]]],[29,17],0,[29,17],[[],10],0,0,0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[13,30],[[31,13],30],[[]],[[31,32],30],[[]],[[31,13,15],30],[[],11],[[],11],[[],12],[[31,32,33],30],[[]],0,[[34,21],[[35,[22]]]],[[34,16],[[35,[28]]]],[[]],[[]],[[[36,[34]]],[[38,[37]]]],[[[36,[34]]],[[38,[37]]]],[[34,39],[[35,[15]]]],[[34,39],[[35,[15]]]],[[]],[[34,39],[[35,[22]]]],[34,[[35,[[40,[22]]]]]],[34,[[35,[[40,[28]]]]]],[[34,39],[[35,[28]]]],[41,[[20,[[38,[37]]]]]],[[]],[[[9,[8]]],[[35,[34]]]],[10,[[35,[34]]]],[[[36,[34]]]],[[[36,[34]]],35],[[34,39],35],[[34,39],35],[[],11],[[],11],[[],12],[[34,39,21],35],[[34,39,16],35],[[]],0,[[]],[[]],[[],[[35,[39]]]],[[42,10],[[7,[39]]]],[[39,39],[[35,[39]]]],[[42,10],[[7,[39]]]],[[39,39],[[35,[39]]]],[[]],[[]],[10,[[7,[42]]]],[[],11],[[],11],[[],12],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[43,18],19],[[43,18],19],[[44,18],19],[[44,18],19],[[]],[45,44],[25,44],[46,44],[47,44],[48,44],[49,44],[[]],[50,44],[44,51],[[]],[[]],[52],[52],[44,[[20,[53]]]],[[],39],[[],39],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[32,14,14],7],0,0,[32,[[7,[[40,[54]]]]]],[[32,39,55],[[57,[56]]]],[32,7],[[32,[40,[14]]],57],[[[27,[58]],18],19],[[[54,[58]],18],19],[[]],[[]],[32,[[7,[20]]]],[[],14],[32,7],[[]],[[]],[20,27],[[],17],[[],17],[[],10],[[32,14],7],[[32,14],7],[[32,[40,[59]],60],7],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[32,15],7],[[]],[[]],0,0,0,[[]],[[]],[[],61],[[],[[11,[61]]]],[[]],0,[[]],0,[61,11],[[],11],[[],11],[[],12],[[]],0,0,0,0,0,0,0,0,[[[63,[[0,[62,58]]]],[40,[64]],65],[[57,[56]]]],[[]],[[]],[[]],[[]],[[[63,[[0,[62,58]]]]],[[66,[10]]]],[[]],[[]],[[[63,[[0,[62,58]]]],55],[[57,[[40,[67]]]]]],[20,[[7,[[38,[68]]]]]],[20,[[7,[[38,[69]]]]]],[[[63,[[0,[62,58]]]]],[[57,[70]]]],[[]],[[]],[[71,[36,[34]],[38,[72]]],63],[[[63,[[0,[62,58]]]],70],57],[63,7],[32,7],[[[63,[[0,[62,58]]]],10],57],[[[63,[[0,[62,58]]]],55,[40,[14]]],57],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[]],[[[63,[[0,[62,58]]]]],57]],"p":[[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"AutofillDb"],[3,"SqlInterruptScope"],[6,"Result"],[3,"Path"],[8,"AsRef"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"Connection"],[3,"Guid"],[15,"bool"],[3,"UpdatableCreditCardFields"],[3,"Metadata"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"UpdatableAddressFields"],[3,"Address"],[3,"InternalAddress"],[3,"Row"],[4,"Error"],[15,"u64"],[4,"MergeResult"],[3,"CreditCard"],[3,"InternalCreditCard"],[6,"Result"],[3,"AutofillConnectionInitializer"],[3,"Transaction"],[15,"u32"],[3,"Store"],[6,"ApiResult"],[3,"Arc"],[8,"SyncEngine"],[3,"Box"],[3,"String"],[3,"Vec"],[4,"SyncEngineId"],[3,"EncryptorDecryptor"],[4,"AutofillApiError"],[4,"Error"],[3,"Error"],[4,"Error"],[4,"JwCryptoError"],[3,"Error"],[3,"Utf8Error"],[3,"Interrupted"],[3,"ErrorHandling"],[3,"Demand"],[8,"Error"],[3,"IncomingState"],[3,"ServerTimestamp"],[6,"OutgoingChangeset"],[6,"Result"],[8,"Debug"],[3,"IncomingBso"],[8,"Interruptee"],[3,"AddressPayload"],[8,"SyncRecord"],[3,"ConfigSyncEngine"],[6,"IncomingChangeset"],[3,"Engine"],[4,"Cow"],[3,"CollectionRequest"],[8,"ProcessIncomingRecordImpl"],[8,"ProcessOutgoingRecordImpl"],[4,"EngineSyncAssociation"],[3,"EngineConfig"],[8,"SyncEngineStorageImpl"],[13,"NoSuchRecord"],[13,"SqlError"],[13,"CryptoError"],[13,"UnexpectedAutofillApiError"],[13,"OpenDatabaseError"],[13,"SqlError"],[13,"IoError"],[13,"InterruptedError"],[13,"IllegalDatabasePath"],[13,"Utf8Error"],[13,"JsonError"],[13,"InvalidSyncPayload"],[13,"CryptoError"],[13,"NoSuchRecord"],[13,"Forked"],[13,"Merged"]]},\
"cli_support":{"doc":"","t":[2,0,5,5,5,0,3,12,11,11,12,11,5,5,5,11,12,12,11,11,11,11,5,5,5],"n":["env_logger","fxa_creds","init_logging","init_logging_with","init_trace_logging","prompt","CliFxa","account","borrow","borrow_mut","client_init","from","get_account_and_token","get_cli_fxa","get_default_fxa_config","into","root_sync_key","tokenserver_url","try_from","try_into","type_id","vzip","prompt_char","prompt_string","prompt_usize"],"q":["cli_support","","","","","","cli_support::fxa_creds","","","","","","","","","","","","","","","","cli_support::prompt","",""],"d":["","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,4,4,4,4,4,0,0,0,4,4,4,4,4,4,4,0,0,0],"f":[0,0,[[]],[1],[[]],0,0,0,[[]],[[]],0,[[]],[[2,1],3],[[2,1],[[3,[4]]]],[[],2],[[]],0,0,[[],5],[[],5],[[],6],[[]],[1,[[8,[7]]]],[[[9,[1]]],[[8,[10]]]],[[[9,[1]]],[[8,[11]]]]],"p":[[15,"str"],[3,"Config"],[6,"Result"],[3,"CliFxa"],[4,"Result"],[3,"TypeId"],[15,"char"],[4,"Option"],[8,"AsRef"],[3,"String"],[15,"usize"]]},\
"crashtest":{"doc":"Crash Test Helper APIs","t":[4,13,11,11,5,5,5,5,11,11,11,11,11,11,5,5,5,11,11,11,14],"n":["CrashTestError","ErrorFromTheRustCode","borrow","borrow_mut","ffi_crashtest_4d35_rustbuffer_alloc","ffi_crashtest_4d35_rustbuffer_free","ffi_crashtest_4d35_rustbuffer_from_bytes","ffi_crashtest_4d35_rustbuffer_reserve","fmt","fmt","from","into","provide","to_string","trigger_rust_abort","trigger_rust_error","trigger_rust_panic","try_from","try_into","type_id","uniffi_reexport_scaffolding"],"q":["crashtest","","","","","","","","","","","","","","","","","","","",""],"d":["An error that can be returned from Rust code.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Trigger a hard abort inside the Rust code.","Trigger an error inside the Rust code.","Trigger a panic inside the Rust code.","","","",""],"i":[0,5,5,5,0,0,0,0,5,5,5,5,5,5,0,0,0,5,5,5,0],"f":[0,0,[[]],[[]],[[1,2],3],[[3,2]],[[4,2],3],[[3,1,2],3],[[5,6],7],[[5,6],7],[[]],[[]],[8],[[],9],[[]],[[],[[10,[5]]]],[[]],[[],10],[[],10],[[],11],0],"p":[[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[4,"CrashTestError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"embedded_uniffi_bindgen":{"doc":"","t":[5],"n":["main"],"q":["embedded_uniffi_bindgen"],"d":[""],"i":[0],"f":[[[],1]],"p":[[6,"Result"]]},\
"error_support":{"doc":"","t":[8,3,3,16,8,0,11,11,11,11,14,11,5,11,14,14,14,12,5,5,5,5,11,11,11,10,14,11,11,11,11,11,5,5,11,5,10,10,11,14,5,12,5,14,11,11,11,11,11,11,14,5,3,11,11,11,11,11,11,11,11],"n":["ApplicationErrorReporter","ErrorHandling","ErrorReporting","ExternalError","GetErrorHandling","backtrace","borrow","borrow","borrow_mut","borrow_mut","breadcrumb","convert","convert_log_report_error","default","define_error","define_error_conversions","define_error_wrapper","err","ffi_errorsupport_a6ca_rustbuffer_alloc","ffi_errorsupport_a6ca_rustbuffer_free","ffi_errorsupport_a6ca_rustbuffer_from_bytes","ffi_errorsupport_a6ca_rustbuffer_reserve","fmt","from","from","get_error_handling","handle_error","into","into","log","log_info","log_warning","redact_compact_jwe","redact_url","report","report_breadcrumb","report_breadcrumb","report_error","report_error","report_error","report_error_to_app","reporting","set_application_error_reporter","trace_error","try_from","try_from","try_into","try_into","type_id","type_id","uniffi_reexport_scaffolding","unset_application_error_reporter","Backtrace","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id"],"q":["error_support","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","error_support::backtrace","","","","","","","",""],"d":["Application error reporting trait","Specifies how an “internal” error is converted to an …","Describes what error reporting action should be taken.","","A trait to define how errors are converted and reported.","A compatibility shim for <code>backtrace</code>.","","","","","Tell the application to log a breadcrumb","Create an ErrorHandling instance with an error conversion.","Handle the specified “internal” error, taking any …","","All the error boilerplate (okay, with a couple exceptions …","Define a set of conversions from external error types into …","XXX - Most of this is now considered deprecated - only FxA …","The external error that should be returned.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Return how to handle our internal errors","Function wrapper macro to convert from a component’s …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Add logging to an ErrorHandling instance","log an info","log a warning","Redact compact jwe string (Five base64 segments, separated …","Redact a URL.","Add reporting to an ErrorHandling instance","","Send a breadcrumb to a Sentry-like error reporting system","Send an error report to a Sentry-like error reporting …","Add reporting to an ErrorHandling instance and also log an …","Tell the application to report an error","","How the error should be reported.","","Log a breadcrumb if we see an <code>Result::Err</code> value","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,0,0,19,0,0,1,2,1,2,0,1,0,2,0,0,0,1,0,0,0,0,2,1,2,19,0,1,2,1,1,1,0,0,1,0,14,14,1,0,0,1,0,0,1,2,1,2,1,2,0,0,0,18,18,18,18,18,18,18,18],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],1],[[]],[[],2],0,0,0,0,[[3,4],5],[[5,4]],[[6,4],5],[[5,3,4],5],[[2,7],8],[[]],[[]],[[],1],0,[[]],[[]],[[1,9],1],[1,1],[1,1],[10,11],[10,11],[[1,[12,[11]]],1],[[11,11,13,13]],[[11,11,13,13]],[[11,11]],[[1,[12,[11]]],1],0,[[11,11]],0,[[[15,[14]]]],0,[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],0,[[]],0,[[]],[[]],[[18,7],8],[[]],[[]],[[],16],[[],16],[[],17]],"p":[[3,"ErrorHandling"],[3,"ErrorReporting"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"Formatter"],[6,"Result"],[4,"Level"],[15,"str"],[3,"String"],[8,"Into"],[15,"u32"],[8,"ApplicationErrorReporter"],[3,"Box"],[4,"Result"],[3,"TypeId"],[3,"Backtrace"],[8,"GetErrorHandling"]]},\
"fxa_client":{"doc":"Firefox Accounts Client","tn":["AccessTokenInfo","AccountAuthStateChanged","AccountDestroyed","AccountEvent","AttachedClient","Authentication","AuthorizationInfo","AuthorizationParameters","CommandReceived","CopySessionToken","Device","DeviceCapability","DeviceConnected","DeviceDisconnected","DevicePushSubscription","FirefoxAccount","FxAMigrationResult","FxaError","IncomingDeviceCommand","MetricsParams","MigrationState","Network","NoExistingAuthFlow","None","Other","Panic","Profile","ProfileUpdated","ReuseSessionToken","ScopedKey","SendTab","SendTabPayload","TabHistoryEntry","TabReceived","WrongAuthFlow","access_type","active","auth_key","authorize_code_using_session_token","avatar","begin_oauth_flow","begin_pairing_flow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","check_authorization_status","clear_access_token_cache","clear_device_name","client_id","client_id","clone","clone_into","code_challenge","code_challenge_method","complete_oauth_flow","created_time","deserialize","device_id","device_type","device_type","disconnect","display_name","display_name","email","endpoint","ensure_capabilities","entries","expires_at","ffi_fxa_client_42fd_rustbuffer_alloc","ffi_fxa_client_42fd_rustbuffer_free","ffi_fxa_client_42fd_rustbuffer_from_bytes","ffi_fxa_client_42fd_rustbuffer_reserve","flow_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json","gather_telemetry","get_access_token","get_attached_clients","get_connection_success_url","get_current_device_id","get_devices","get_manage_account_url","get_manage_devices_url","get_pairing_authority_url","get_profile","get_session_token","get_token_server_endpoint_url","handle_push_message","handle_session_token_change","id","initialize_device","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_current_device","is_current_session","is_default_avatar","is_in_migration_state","k","key","key_bytes","keys_jwk","kid","kty","last_access_time","last_access_time","migrate_from_session_token","name","new","parameters","poll_device_commands","provide","public_key","push_endpoint_expired","push_subscription","retry_migrate_from_session_token","scope","scope","scope","scope","send_single_tab","serialize","set_device_name","set_push_subscription","state","stream_id","title","to_json","to_owned","to_string","token","total_duration","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","uniffi_reexport_scaffolding","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","command","device_id","device_name","is_local_device","payload","sender","Config","FirefoxAccount","IncomingDeviceCommand","TabReceived","authorize_code_using_session_token","begin_oauth_flow","begin_pairing_flow","borrow","borrow","borrow_mut","borrow_mut","check_authorization_status","clear_access_token_cache","clear_device_name","clear_devices_and_attached_clients_cache","clone","clone_into","complete_oauth_flow","config","device","disconnect","ensure_capabilities","error","fmt","from","from","from_json","gather_telemetry","get_access_token","get_attached_clients","get_connection_success_url","get_current_device","get_current_device_id","get_devices","get_manage_account_url","get_manage_devices_url","get_pairing_authority_url","get_profile","get_session_token","get_token_server_endpoint_url","handle_push_message","handle_session_token_change","initialize_device","into","into","is_in_migration_state","migrate_from_session_token","new","poll_device_commands","send_single_tab","set_device_name","set_push_subscription","start_over","to_json","to_owned","try_from","try_from","try_into","try_into","try_migration","type_id","type_id","vzip","vzip","with_config","payload","sender","Config","RemoteConfig","auth_url","auth_url_path","authorization_endpoint","borrow","borrow","borrow_mut","borrow_mut","china","client_config_url","client_id","clone","clone_into","connect_another_device_url","content_url","content_url_path","deserialize","fmt","fmt","from","from","into","into","introspection_endpoint","issuer","jwks_uri","localdev","new","oauth_force_auth_url","oauth_url","oauth_url_path","openid_config_url","override_token_server_url","pair_supp_url","pair_url","profile_url","profile_url_path","redirect_uri","release","serialize","settings_clients_url","settings_url","stable_dev","stage_dev","to_owned","token_endpoint","token_server_endpoint_url","try_from","try_from","try_into","try_into","type_id","type_id","userinfo_endpoint","vzip","vzip","Capability","CommandFetchReason","Device","Location","Poll","Push","PushSubscription","SendTab","auth_key","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","city","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","common","country","deref","deserialize","deserialize","deserialize","deserialize","endpoint","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","get_hash","hash","into","into","into","into","into","is_current_device","last_access_time","location","public_key","serialize","serialize","serialize","serialize","state","state_code","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","AuthCircuitBreakerError","BackoffError","Base64Decode","CryptoError","EceError","Error","ErrorKind","HawkError","HexDecodeError","IllegalState","IntegerConversionError","InvalidBufferLength","JsonError","JwCryptoError","MalformedUrl","MismatchedKeys","MissingUrlParameter","MultipleScopesRequested","NoCachedToken","NoCurrentDeviceId","NoMigrationData","NoRefreshToken","NoScopedKey","NoSessionToken","NullPointer","OriginMismatch","RemoteError","RequestError","Result","ScopeNotAllowed","SendTabDiagnosisError","SyncError","UTF8DecodeError","UnexpectedStatus","UnknownCommand","UnknownOAuthState","UnknownTargetDevice","UnrecoverableServerError","UnsupportedCommand","XorLengthMismatch","backtrace","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","kind","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","code","errno","error","info","message"],"q":["fxa_clientfxa_client::AccountEvent","","","","fxa_client::IncomingDeviceCommand","","fxa_client::internal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fxa_client::internal::IncomingDeviceCommand","","fxa_client::internal::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fxa_client::internal::device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fxa_client::internal::device::CommandFetchReason","fxa_client::internal::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fxa_client::internal::error::ErrorKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An OAuth access token, with its associated keys and …","Sent when when there has been a change in authorization …","Sent when the user deletes their Firefox Account.","An event that happened on the user’s account.","A client connected to the user’s account.","Thrown when there was a problem with the authentication …","Information about the authorization state of the …","Parameters provided in an incoming OAuth request.","Sent when another device has invoked a command for this …","An in-flight migration that will copy the sessionToken.","A device connected to the user’s account.","A “capability” offered by a device.","Sent when a new device connects to the user’s account.","Sent when a device disconnects from the user’s account.","Details of a web-push subscription endpoint.","Object representing the signed-in state of an application.","Statistics about the completion of a migration from legacy …","Generic error type thrown by many <code>FirefoxAccount</code> …","A command invoked by another device.","Additional metrics tracking parameters to include in an …","The current state migration from legacy sign-in data.","Thrown if an operation fails due to network access …","Thrown if the application attempts to complete an OAuth …","No in-flight migration.","A catch-all for other unspecified errors.","Thrown if there is a panic in the underlying Rust code.","Information about the user that controls a Firefox Account.","Sent when the user has modified their account profile …","An in-flight migration that will re-use the sessionToken.","A cryptograpic key associated with an OAuth scope.","","The payload sent when invoking a “send tab” command.","An individual entry in the navigation history of a sent …","Indicates that a tab has been sent to this device.","Thrown if the application attempts to complete an OAuth …","","","","Create a new OAuth authorization code using the stored …","The URL of a profile picture representing the user.","Initiate a web-based OAuth sign-in flow.","Initiate a device-pairing sign-in flow.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check authorization status for this application.","Clear the access token cache in response to an auth …","Clear any custom display name used for this application …","","","","","","","Complete an OAuth flow.","","","","","","Disconnect from the user’s account.","The user’s preferred textual display name.","","The user’s current primary email address.","","Ensure that the device record has a specific set of …","The navigation history of the sent tab.","The expiry time of the token, in seconds.","","","","","A unique identifier to be included in send-tab metrics.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Restore a <code>FirefoxAccount</code> instance from serialized state.","Collect and return telemetry about send-tab attempts.","Get a short-lived OAuth access token for the user’s …","Get the list of all client applications attached to the …","Get a URL which shows a “successfully connceted!” …","Get the device id registered for this application.","Get the list of devices registered on the user’s account.","Get a URL at which the user can manage their account and …","Get a URL at which the user can manage the devices …","Get the URL at which to begin a device-pairing signin flow.","Get profile information for the signed-in user, if any.","Get the session token for the user’s account, if one is …","Get the URL at which to access the user’s sync data.","Process and respond to server-delivered account update …","Update the stored session token for the user’s account.","","Create a new device record for this application.","Internal implementation details for the fxa_client crate.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether the <code>avatar</code> URL represents the default avatar image.","Check for a previously failed migration from legacy …","The key material, as base64-url-encoded bytes.","The client-side encryption key associated with this scope.","","","An opaque unique identifier for this key.","The type of key.","","","Sign in by using legacy session-token state.","","Create a new <code>FirefoxAccount</code> instance, not connected to any …","","Poll the server for any pending device commands.","","","","","Retry a previously failed migration from legacy …","The scope of access granted by token.","","","The OAuth scope with which this key is associated.","Use device commands to send a single tab to another device.","","Update the display name used for this application instance.","Set or update a push subscription endpoint for this device.","","A unique identifier to be included in send-tab metrics.","","Save current state to a JSON string.","","","The access token itself.","The time taken to migrate, in milliseconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user’s account uid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch an OAuth code for a particular client using a …","Initiate an OAuth login flow and return a URL that should …","Initiate a pairing flow and return a URL that should be …","","","","","Check whether user is authorized using our refresh token.","<strong>💾 This method may alter the persisted account state.</strong>","","Clear the attached clients and devices cache","","","Complete an OAuth flow initiated in <code>begin_oauth_flow</code> or …","","","Disconnect from the account and optionally destroy our …","Register a set of device capabilities against the current …","","","Returns the argument unchanged.","Returns the argument unchanged.","Restore a <code>FirefoxAccount</code> instance from a serialized state …","Gathers and resets telemetry for this account instance. …","Fetch a short-lived access token using the saved refresh …","Fetches the list of attached clients connected to the …","Get the “connection succeeded” page URL. It is …","","Retrieve the current device id from state","Fetches the list of devices from the current account …","Get the “manage account” page URL. It is typically …","Get the “manage devices” page URL. It is typically …","Get the pairing URL to navigate to on the Auth side …","Fetch the profile for the user. This method will error-out …","Retrieve the current session token from state","Get the Sync Token Server endpoint URL.","Handle any incoming push message payload coming from the …","Typically called during a password change flow. …","Initalizes our own device, most of the time this will be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if the client is in a pending migration state","Migrate from a logged-in with a sessionToken Firefox …","Create a new <code>FirefoxAccount</code> instance.","Poll and parse any pending available command for our …","Send a single tab to another device designated by its …","","","Clear the whole persisted/cached state of the account, but …","Serialize a <code>FirefoxAccount</code> instance internal state to be …","","","","","","","","","","","Create a new <code>FirefoxAccount</code> instance using a <code>Config</code>.","","","","<code>RemoteConfig</code> struct stores configuration values from the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Override the token server URL that would otherwise be …","","","","","","","","","","","","","","","","","","","","","","","","","The reason we are fetching commands.","","","We are polling in-case we’ve missed some.","We got a push notification with the index of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,21,21,0,0,4,0,0,21,35,0,0,21,21,0,0,0,0,0,0,0,4,4,35,4,4,0,21,35,0,11,0,0,22,4,2,9,20,1,33,1,1,1,9,7,30,2,31,33,35,4,10,19,20,11,21,22,23,24,25,1,9,7,30,2,31,33,35,4,10,19,20,11,21,22,23,24,25,19,1,1,1,2,31,10,10,2,2,1,31,10,31,31,19,1,33,19,33,20,1,23,30,0,0,0,0,23,4,4,10,19,20,11,21,22,23,24,25,1,9,7,30,2,31,33,35,4,4,10,19,20,20,11,11,21,22,23,24,25,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,19,1,0,1,9,7,30,2,31,33,35,4,10,19,20,11,21,22,23,24,25,19,31,33,1,10,30,10,2,10,10,31,19,1,31,1,7,1,4,20,19,19,1,30,2,31,10,1,10,1,1,2,23,24,1,10,4,30,25,1,9,7,30,2,2,31,33,35,4,10,19,19,20,11,21,22,22,23,24,25,1,9,7,30,2,31,33,35,4,10,19,20,11,21,22,23,24,25,1,9,7,30,2,31,33,35,4,10,19,20,11,21,22,23,24,25,33,0,24,1,9,7,30,2,31,33,35,4,10,19,20,11,21,22,23,24,25,65,66,67,66,68,68,0,0,0,41,43,43,43,43,41,43,41,43,43,43,43,41,41,43,0,0,43,43,0,41,43,41,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,41,43,43,43,43,43,43,43,43,43,41,43,41,43,41,43,43,41,43,41,43,69,69,0,0,46,46,46,46,47,46,47,46,46,46,46,46,46,46,46,46,46,47,46,47,46,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,46,47,46,47,46,46,47,0,0,0,0,45,45,0,28,27,45,28,27,48,40,45,28,27,48,40,48,45,28,27,48,40,45,28,27,48,40,40,48,40,28,27,48,40,27,28,27,48,40,45,28,28,27,27,48,40,28,28,45,28,27,48,40,40,40,40,27,28,27,48,40,48,48,45,28,27,48,40,45,28,27,48,40,45,28,27,48,40,45,28,27,48,40,45,28,27,48,40,70,50,50,50,50,50,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,26,50,26,50,26,50,50,26,26,50,50,50,50,50,50,50,50,50,50,50,50,50,50,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,50,26,26,50,26,50,50,26,50,26,50,26,50,26,50,26,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,79,80,97,97,97,97,97],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[3,4]]]],0,[[1,6,[8,[7]]],[[5,[3,4]]]],[[1,6,6,[8,[7]]],[[5,[3,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,[[5,[9,4]]]],[1],[1,[[5,[4]]]],0,0,[10,10],[[]],0,0,[[1,6,6],[[5,[4]]]],0,[[],[[5,[10]]]],0,0,0,[1],0,0,0,0,[[1,[12,[11]]],[[5,[4]]]],0,0,[[13,14],15],[[15,14]],[[16,14],15],[[15,13,14],15],0,[[4,17],18],[[4,17],18],[[10,17],18],[[19,17],18],[[20,17],18],[[11,17],18],[[21,17],18],[[22,17],18],[[23,17],18],[[24,17],18],[[25,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,4],[[]],[[]],[27,20],[[]],[28,11],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[5,[1,4]]]],[1,[[5,[3,4]]]],[[1,6,[8,[29]]],[[5,[30,4]]]],[1,[[5,[[12,[31]],4]]]],[1,[[5,[3,4]]]],[1,[[5,[3,4]]]],[[1,32],[[5,[[12,[19]],4]]]],[[1,6],[[5,[3,4]]]],[[1,6],[[5,[3,4]]]],[1,[[5,[3,4]]]],[[1,32],[[5,[33,4]]]],[1,[[5,[3,4]]]],[1,[[5,[3,4]]]],[[1,6],[[5,[[12,[21]],4]]]],[[1,6],[[5,[4]]]],0,[[1,6,34,[12,[11]]],[[5,[4]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1,35],0,0,[10,[[37,[[12,[36]]]]]],0,0,0,0,0,[[1,6,6,6,32],[[5,[25,4]]]],0,[[6,6,6,8],1],0,[1,[[5,[[12,[22]],4]]]],[38],0,0,0,[1,[[5,[25,4]]]],0,0,0,0,[[1,6,6,6],[[5,[4]]]],[10,5],[[1,6],[[5,[4]]]],[[1,20],[[5,[4]]]],0,0,0,[1,[[5,[3,4]]]],[[]],[[],3],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[39,[[37,[2]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[40,[[37,[19]]]],[[],5],[[],5],[[],5],[[],5],[41,[[37,[22]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[43,2],[[37,[3]]]],[[43,6,[8,[7]]],[[37,[3]]]],[[43,6,6,[8,[7]]],[[37,[3]]]],[[]],[[]],[[]],[[]],[43,[[37,[0]]]],[43],[43,37],[43],[41,41],[[]],[[43,6,6],37],0,0,[43],[43,37],0,[[41,17],18],[[]],[[]],[6,[[37,[43]]]],[43,[[37,[3]]]],[[43,6,[8,[44]]],[[37,[0]]]],[43,[[37,[[12,[0]]]]]],[43,[[37,[3]]]],[43,[[37,[[8,[40]]]]]],[43,[[37,[3]]]],[[43,32],[[37,[[12,[40]]]]]],[[43,6],[[37,[3]]]],[[43,6],[[37,[3]]]],[43,[[37,[3]]]],[[43,32],[[37,[0]]]],[43,[[37,[3]]]],[43,[[37,[3]]]],[[43,6],[[37,[[12,[21]]]]]],[[43,6],37],[[43,6,34],37],[[]],[[]],[43,35],[[43,6,6,6,32],[[37,[25]]]],[[6,6,6,[8,[6]]],43],[[43,45],[[37,[[12,[41]]]]]],[[43,6,6,6],37],[[43,6],37],[[43,27],37],[43],[43,[[37,[3]]]],[[]],[[],5],[[],5],[[],5],[[],5],[43,[[37,[25]]]],[[],42],[[],42],[[]],[[]],[46,43],0,0,0,0,[46,[[37,[39]]]],[[46,6],[[37,[39]]]],[46,[[37,[39]]]],[[]],[[]],[[]],[[]],[[6,6],46],[46,[[37,[39]]]],0,[46,46],[[]],[46,[[37,[39]]]],[46,[[37,[39]]]],[[46,6],[[37,[39]]]],[[],[[5,[46]]]],[[46,17],18],[[47,17],18],[[]],[[]],[[]],[[]],[46,[[37,[39]]]],[46,[[37,[39]]]],[46,[[37,[39]]]],[[6,6],46],[[6,6,6],46],[46,[[37,[39]]]],[46,[[37,[39]]]],[[46,6],[[37,[39]]]],[46,[[37,[39]]]],[[46,6],46],[46,[[37,[39]]]],[46,[[37,[39]]]],[46,[[37,[39]]]],[[46,6],[[37,[39]]]],0,[[6,6],46],[46,5],[46,[[37,[39]]]],[46,[[37,[39]]]],[[6,6],46],[[6,6],46],[[]],[46,[[37,[39]]]],[46,[[37,[39]]]],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[46,[[37,[39]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[45,45],[28,28],[27,27],[48,48],[40,40],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],[[5,[28]]]],[[],[[5,[27]]]],[[],[[5,[48]]]],[[],[[5,[40]]]],0,[[28,28],32],[[27,17],18],[[48,17],18],[[40,17],18],[[]],[[]],[11,28],[[]],[20,27],[[]],[[]],[[],44],[28],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[28,5],[27,5],[48,5],[40,5],0,0,[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,[[8,[49]]]],[[]],[[]],[[]],[[]],[[50,17],18],[[50,17],18],[[26,17],18],[[26,17],18],[51,50],[52,50],[53,50],[54,50],[55,50],[56,50],[57,50],[58,50],[59,50],[60,50],[61,50],[62,50],[[]],[63,50],[51,26],[55,26],[61,26],[[]],[60,26],[59,26],[58,26],[56,26],[57,26],[52,26],[53,26],[54,26],[50,26],[62,26],[63,26],[[]],[[]],[26,50],[38],[38],[50,[[8,[64]]]],[[],3],[[],3],[[],5],[[],5],[[],5],[[],5],[[],42],[[],42],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"FirefoxAccount"],[3,"AuthorizationParameters"],[3,"String"],[4,"FxaError"],[4,"Result"],[15,"str"],[3,"MetricsParams"],[4,"Option"],[3,"AuthorizationInfo"],[3,"ScopedKey"],[4,"DeviceCapability"],[3,"Vec"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"Formatter"],[6,"Result"],[3,"Device"],[3,"DevicePushSubscription"],[4,"AccountEvent"],[4,"IncomingDeviceCommand"],[3,"SendTabPayload"],[3,"TabHistoryEntry"],[3,"FxAMigrationResult"],[3,"Error"],[3,"PushSubscription"],[4,"Capability"],[15,"i64"],[3,"AccessTokenInfo"],[3,"AttachedClient"],[15,"bool"],[3,"Profile"],[4,"DeviceType"],[4,"MigrationState"],[15,"u8"],[6,"Result"],[3,"Demand"],[3,"Url"],[3,"Device"],[4,"IncomingDeviceCommand"],[3,"TypeId"],[3,"FirefoxAccount"],[15,"u64"],[4,"CommandFetchReason"],[3,"Config"],[3,"RemoteConfig"],[3,"Location"],[3,"Mutex"],[4,"ErrorKind"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"TryFromIntError"],[3,"Error"],[3,"UnexpectedStatus"],[4,"ParseError"],[4,"Error"],[3,"FromUtf8Error"],[4,"JwCryptoError"],[4,"DecodeError"],[4,"FromHexError"],[4,"Error"],[8,"Error"],[13,"CommandReceived"],[13,"DeviceDisconnected"],[13,"DeviceConnected"],[13,"TabReceived"],[13,"TabReceived"],[13,"Push"],[13,"BackoffError"],[13,"NoCachedToken"],[13,"NoScopedKey"],[13,"UnknownTargetDevice"],[13,"UnrecoverableServerError"],[13,"IllegalState"],[13,"UnknownCommand"],[13,"SendTabDiagnosisError"],[13,"XorLengthMismatch"],[13,"ScopeNotAllowed"],[13,"UnsupportedCommand"],[13,"MissingUrlParameter"],[13,"InvalidBufferLength"],[13,"CryptoError"],[13,"EceError"],[13,"HexDecodeError"],[13,"Base64Decode"],[13,"JsonError"],[13,"JwCryptoError"],[13,"UTF8DecodeError"],[13,"RequestError"],[13,"MalformedUrl"],[13,"UnexpectedStatus"],[13,"SyncError"],[13,"HawkError"],[13,"IntegerConversionError"],[13,"RemoteError"]]},\
"interrupt_support":{"doc":"","t":[3,8,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11],"n":["Interrupted","Interruptee","NeverInterrupts","ShutdownInterruptee","SqlInterruptHandle","SqlInterruptScope","begin_interrupt_scope","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dummy","err_if_interrupted","err_if_interrupted","err_if_interrupted","fmt","fmt","fmt","fmt","from","from","from","from","from","in_shutdown","interrupt","into","into","into","into","into","new","provide","register_interrupt","shutdown","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","was_interrupted","was_interrupted","was_interrupted","was_interrupted","was_interrupted"],"q":["interrupt_support","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The error returned by err_if_interrupted.","Represents the state of something that may be interrupted. …","A convenience implementation, should only be used in tests.","","Interrupt operations that use SQL","Check if an operation has been interrupted","Begin an interrupt scope that will be interrupted by this …","","","","","","","","","","","","","","","","Return Err(Interrupted) if we were interrupted","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Check if we’re currently in shutdown mode","Interrupt all interrupt scopes created by this handle","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Register a ShutdownInterrupt implementation","Initiate shutdown mode","","","","","","","","","","","","","","","","","","","","","","Check if scope has been interrupted"],"i":[0,0,0,0,0,0,1,14,15,1,3,2,14,15,1,3,2,3,3,2,16,16,2,1,3,3,2,14,15,1,3,2,0,1,14,15,1,3,2,1,3,0,0,3,3,14,15,1,3,2,14,15,1,3,2,14,15,1,3,2,16,14,15,2,2],"f":[0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[[]],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[2,[[4,[3]]]],[[1,5],6],[[3,5],6],[[3,5],6],[[2,5],6],[[]],[[]],[[]],[[]],[[]],[[],7],[1],[[]],[[]],[[]],[[]],[[]],[8,1],[9],[[[11,[10]]]],[[]],[[]],[[],12],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],13],[[],13],[[],13],[[],13],[[],13],[[],7],[14,7],[15,7],[2,7],[2,7]],"p":[[3,"SqlInterruptHandle"],[3,"SqlInterruptScope"],[3,"Interrupted"],[4,"Result"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Connection"],[3,"Demand"],[8,"AsRef"],[3,"Weak"],[3,"String"],[3,"TypeId"],[3,"NeverInterrupts"],[3,"ShutdownInterruptee"],[8,"Interruptee"]]},\
"logins":{"doc":"","t":[6,13,13,13,13,13,13,3,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,3,3,3,3,3,4,3,13,13,13,13,13,13,3,6,3,13,13,13,13,13,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,14,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,0,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,14,11,11,12,12,12,12,11,11,11,11,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5],"n":["ApiResult","BadSyncStatus","BothTargets","CryptoError","DuplicateLogin","EmptyOrigin","EmptyPassword","EncryptedLogin","EncryptionKeyMissing","Error","IOError","IllegalFieldValue","IllegalOrigin","IncorrectKey","Interrupted","Interrupted","InvalidDatabaseFile","InvalidKey","InvalidLogin","InvalidLogin","InvalidPath","InvalidRecord","JsonError","Login","LoginDb","LoginEntry","LoginFields","LoginStore","LoginsApiError","LoginsSyncEngine","MalformedIncomingRecord","MigrationError","NoSuchRecord","NoSuchRecord","NoTarget","NonEmptyTable","RecordFields","Result","SecureLoginFields","SqlError","SyncAdapterError","SyncAuthInvalid","UnexpectedLoginsApiError","UrlParseError","ValidateAndFixup","add","add","add_or_update","add_or_update","apply_incoming","begin_interrupt_scope","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadcrumb","check_for_dupes","check_valid","check_valid","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collection_name","conn","create_logins_sync_engine","db","db","decrypt","decrypt_fields","default","default","default","default","default","default","delete","delete","deref","deserialize","do_reset","dupe_exists","encrypt","encrypt","encryption","entry","eq","eq","eq","eq","eq","eq","exists","ffi_logins_31ea_rustbuffer_alloc","ffi_logins_31ea_rustbuffer_free","ffi_logins_31ea_rustbuffer_from_bytes","ffi_logins_31ea_rustbuffer_reserve","fields","fields","fields","find_dupe","find_login_to_update","find_login_to_update","fixup","fixup","fixup_and_check_for_dupes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","form_action_origin","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_incoming_payload","get","get_all","get_by_base_domain","get_by_base_domain","get_by_id","get_collection_requests","get_error_handling","get_global_state","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_registered_sync_engine","get_sync_assoc","guid","guid","guid_str","handle_error","hash","hash","hash","hash","hash","hash","http_realm","id","into","into","into","into","into","into","into","into","into","into","into","into","into_bso","list","maybe_fixup","maybe_fixup","migrate_logins","migrate_sqlcipher_db","new","new","new_from_db","new_in_memory","new_interrupt_handle","open","open_in_memory","origin","password","password_field","provide","provide","provide","record","record","register_with_sync_manager","report_error","reset","reset","scope","sec_fields","sec_fields","sec_fields","serialize","set_global_state","set_local_encryption_key","source","store","sync","sync_finished","time_created","time_last_used","time_password_changed","times_used","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","touch","touch","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniffi_reexport_scaffolding","update","update","username","username_field","validate_and_fixup","validate_and_fixup","validate_and_fixup","validate_and_fixup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","wipe_local","wipe_local","with_connection","0","0","0","0","0","0","0","0","0","0","0","0","0","field_info","reason","reason","reason","reason","reason","EncryptorDecryptor","borrow","borrow_mut","check_canary","create_canary","create_key","decrypt","decrypt_struct","encrypt","encrypt_struct","from","into","new","try_from","try_into","type_id","vzip","migrate_logins"],"q":["loginslogins::Error","","","","","","","","","","","","","logins::InvalidLogin","logins::LoginsApiError","","","","","logins::encryption","","","","","","","","","","","","","","","","","logins::migrate_sqlcipher_db"],"d":["","","","","","","","A login stored in the database","","Logins error type These are “internal” errors used by …","","","","","","","","","Error::InvalidLogin subtypes","","","","","A login stored in the database","","A login entered by the user","","","","","","","","","","","Login data specific to database records","","LoginEntry fields that are stored encrypted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tell the application to log a breadcrumb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete the record with the provided id. Returns true if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Called by the sync manager to get a sync engine via the …","","","","","Function wrapper macro to convert from a component’s …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Tell the application to report an error","","","","","","","","","","","","A convenience wrapper around sync_multiple.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal helper for doing validation and fixups.","We don’t actually have fixups.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,38,39,38,39,39,39,0,38,0,38,39,39,35,35,38,38,38,0,38,38,35,38,0,0,0,0,0,0,0,38,38,35,38,39,38,0,0,0,38,38,35,35,38,0,1,6,1,6,9,1,1,6,9,35,38,39,17,18,19,2,20,4,1,6,9,35,38,39,17,18,19,2,20,4,0,1,60,60,17,18,19,2,20,4,17,18,19,2,20,4,9,1,6,1,6,4,4,17,18,19,2,20,4,1,6,1,18,9,1,18,20,0,20,17,18,19,2,20,4,1,0,0,0,0,2,20,4,1,1,6,60,60,1,35,35,38,38,39,39,17,18,19,2,20,4,17,1,6,9,35,38,38,38,38,38,38,38,38,38,39,17,18,19,2,20,4,4,6,1,1,6,1,9,38,9,17,18,19,2,20,4,0,9,20,4,4,0,17,18,19,2,20,4,17,19,1,6,9,35,38,39,17,18,19,2,20,4,4,6,60,60,0,0,6,9,6,6,1,1,1,17,18,17,35,38,39,20,4,6,0,6,9,9,2,20,4,18,9,9,38,9,6,9,19,19,19,19,17,18,19,2,20,4,35,38,39,1,6,1,6,9,35,38,39,17,18,19,2,20,4,1,6,9,35,38,39,17,18,19,2,20,4,1,6,9,35,38,39,17,18,19,2,20,4,0,1,6,18,17,60,17,18,2,1,6,9,35,38,39,17,18,19,2,20,4,6,9,1,6,1,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[4]]]],[[6,2,7],[[8,[4]]]],[[1,2,3],[[5,[4]]]],[[6,2,7],[[8,[4]]]],[[9,[11,[10]],12],[[14,[13]]]],[1,[[5,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,16,2,3],5],[[],5],[[],5],[17,17],[18,18],[19,19],[2,2],[20,20],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[21,[7]]]],[1,22],[[[23,[6]]],[[8,[[25,[24]]]]]],0,0,[[4,3],[[5,[20]]]],[[4,3],[[5,[18]]]],[[],17],[[],18],[[],19],[[],2],[[],20],[[],4],[[1,7],[[5,[26]]]],[[6,7],[[8,[26]]]],[1,22],[[],[[27,[18]]]],[[9,28],5],[[1,16,2,3],[[5,[26]]]],[[18,3],[[5,[29]]]],[[20,3],[[5,[4]]]],0,[20,2],[[17,17],26],[[18,18],26],[[19,19],26],[[2,2],26],[[20,20],26],[[4,4],26],[[1,7],[[5,[26]]]],[[30,31],32],[[32,31]],[[33,31],32],[[32,30,31],32],0,0,0,[[1,16,2,3],[[5,[[34,[16]]]]]],[[1,2,3],[[5,[[34,[20]]]]]],[[6,2,7],[[8,[[34,[20]]]]]],[[],5],[[],5],[[1,16,2,3],[[5,[2]]]],[[35,36],37],[[35,36],37],[[38,36],37],[[38,36],37],[[39,36],37],[[39,36],37],[[17,36],37],[[18,36],37],[[19,36],37],[[2,36],37],[[20,36],37],[[4,36],37],0,[[]],[[]],[[]],[[]],[40,38],[41,38],[42,38],[[]],[39,38],[43,38],[44,38],[45,38],[46,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,7],[[8,[[34,[4]]]]]],[1,[[5,[[11,[4]]]]]],[[1,7],[[5,[[11,[4]]]]]],[[6,7],[[8,[[11,[4]]]]]],[[1,7],[[5,[[34,[4]]]]]],[[9,47],[[14,[[11,[48]]]]]],[38,49],[9,[[5,[[34,[29]]]]]],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[51,[[34,[[25,[24]]]]]],[9,[[14,[28]]]],[20,16],[4,16],[4,7],0,[17],[18],[19],[2],[20],[4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,3],[[5,[52]]]],[6,[[8,[[11,[4]]]]]],[[],[[5,[34]]]],[[],[[5,[34]]]],0,0,[[[54,[53]]],[[8,[6]]]],[[[23,[6]]],[[5,[9]]]],[1,6],[[],[[8,[6]]]],[1,[[23,[55]]]],[[[54,[53]]],[[5,[1]]]],[[],[[5,[1]]]],0,0,0,[56],[56],[56],0,0,[[[23,[6]]]],0,[[[23,[6]]],8],[[9,28],14],0,0,0,0,[18,27],[[9,34],5],[[9,7],14],[38,[[34,[57]]]],0,[[[23,[6]],29,29,29,29,29],[[8,[29]]]],[[9,47,[11,[16]]],14],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[1,7],5],[[6,7],8],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],[[],58],0,[[1,7,2,3],[[5,[4]]]],[[6,7,2,7],[[8,[4]]]],0,0,[26,[[5,[34]]]],[[17,26],[[5,[[34,[17]]]]]],[[18,26],[[5,[[34,[18]]]]]],[[2,26],[[5,[[34,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,8],[9,14],[1,5],[6,8],[22,[[5,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[7,7,7],[[8,[26]]]],[[7,7],[[8,[29]]]],[[],[[8,[29]]]],[[3,7],[[5,[29]]]],[[3,7],[[5,[59]]]],[[3,7],[[5,[29]]]],[3,[[5,[29]]]],[[]],[[]],[7,[[5,[3]]]],[[],27],[[],27],[[],58],[[]],[[[54,[53]],7,[54,[53]],7,[34,[29]]],8]],"p":[[3,"LoginDb"],[3,"LoginEntry"],[3,"EncryptorDecryptor"],[3,"EncryptedLogin"],[6,"Result"],[3,"LoginStore"],[15,"str"],[6,"ApiResult"],[3,"LoginsSyncEngine"],[6,"IncomingChangeset"],[3,"Vec"],[3,"Engine"],[6,"OutgoingChangeset"],[6,"Result"],[3,"SqlInterruptScope"],[3,"Guid"],[3,"LoginFields"],[3,"SecureLoginFields"],[3,"RecordFields"],[3,"Login"],[4,"Cow"],[3,"Connection"],[3,"Arc"],[8,"SyncEngine"],[3,"Box"],[15,"bool"],[4,"Result"],[4,"EngineSyncAssociation"],[3,"String"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[4,"Option"],[4,"LoginsApiError"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"InvalidLogin"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"Interrupted"],[3,"Error"],[4,"JwCryptoError"],[4,"ParseError"],[3,"ServerTimestamp"],[3,"CollectionRequest"],[3,"ErrorHandling"],[15,"u64"],[4,"SyncEngineId"],[3,"OutgoingBso"],[3,"Path"],[8,"AsRef"],[3,"SqlInterruptHandle"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[8,"DeserializeOwned"],[8,"ValidateAndFixup"],[13,"InvalidLogin"],[13,"BadSyncStatus"],[13,"NoSuchRecord"],[13,"SyncAdapterError"],[13,"JsonError"],[13,"SqlError"],[13,"UrlParseError"],[13,"InvalidPath"],[13,"InvalidDatabaseFile"],[13,"CryptoError"],[13,"Interrupted"],[13,"IOError"],[13,"MigrationError"],[13,"IllegalFieldValue"],[13,"InvalidRecord"],[13,"NoSuchRecord"],[13,"Interrupted"],[13,"SyncAuthInvalid"],[13,"UnexpectedLoginsApiError"]]},\
"nimbus":{"doc":"","t":[3,3,3,3,3,13,17,17,17,13,13,3,4,13,3,3,3,3,2,13,3,3,13,4,3,2,17,3,13,12,12,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,0,11,5,11,12,12,12,12,12,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,12,12,0,12,12,12,12,12,11,12,12,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,12,12,12,12,12,12,12,0,11,11,12,12,12,12,12,12,12,12,12,12,12,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,6,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,13,13,8,3,4,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AppContext","AvailableExperiment","AvailableRandomizationUnits","Branch","BucketConfig","ClientId","DB_KEY_APP_VERSION","DB_KEY_INSTALLATION_DATE","DB_KEY_UPDATE_DATE","Disqualified","Enrolled","EnrolledExperiment","EnrollmentStatus","Error","Experiment","ExperimentBranch","FeatureConfig","NimbusClient","NimbusError","NimbusId","NimbusStringHelper","NimbusTargetingHelper","NotEnrolled","RandomizationUnit","RemoteSettingsConfig","Result","SCHEMA_VERSION","TargetingAttributes","WasEnrolled","active_experiments","android_sdk_version","app_build","app_context","app_id","app_id","app_name","app_name","app_version","apply_pending_experiments","architecture","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_slug","branches","branches","bucket_config","channel","channel","clear_events","client_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collection_name","count","create_string_helper","create_targeting_helper","custom_targeting_attributes","days_since_install","days_since_update","debug_tag","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_manufacturer","device_model","end_date","enrollment_id","eq","eq","eq","eq","eq","eq","error","eval_jexl","evaluate_enrollment","event_store","feature","feature_id","feature_ids","feature_ids","features","fetch_experiments","ffi_nimbus_256f_rustbuffer_alloc","ffi_nimbus_256f_rustbuffer_free","ffi_nimbus_256f_rustbuffer_from_bytes","ffi_nimbus_256f_rustbuffer_reserve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_active_experiments","get_all_experiments","get_available_experiments","get_experiment_branch","get_experiment_branches","get_feature_config_variables","get_global_user_participation","get_targeting_attributes","get_uuid","get_value","hash","home_directory","initialize","installation_date","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_already_enrolled","is_enrolled","is_enrollment_paused","is_rollout","language","locale","namespace","new","new_enrolled","nimbus_id","opt_in_with_branch","opt_out","os","os_version","persistence","proposed_duration","proposed_enrollment","randomization_unit","ratio","ratio","record_event","reference_branch","reference_branch","region","reset_telemetry_identifiers","schema_version","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server_url","set_experiments_locally","set_global_user_participation","set_nimbus_id","slug","slug","slug","slug","slug","start","start_date","string_format","targeting","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniffi_reexport_scaffolding","update_experiments","user_facing_description","user_facing_description","user_facing_description","user_facing_name","user_facing_name","user_facing_name","value","versioning","with_client_id","with_targeting_attributes","branch","branch","branch","enrollment_id","enrollment_id","enrollment_id","experiment_ended_at","reason","reason","reason","reason","BackoffError","BehaviorError","BehaviorError","DatabaseNotReady","EmptyRatiosError","EvaluationError","IOError","InternalError","IntervalParseError","InvalidExperimentFormat","InvalidExpression","InvalidFraction","InvalidPath","InvalidPersistedData","InvalidState","JSONError","MissingEventStore","NimbusError","NoSuchBranch","NoSuchExperiment","OutOfBoundsError","ParseIntError","RequestError","ResponseError","Result","RkvError","TransformParameterError","TryFromIntError","TryFromSliceError","UrlParsingError","UuidError","VersionParsingError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","Database","Enrollments","EventCounts","Experiments","Meta","Readable","SingleStore","StoreId","Updates","Writer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","collect_all","delete","from","from","from","get","get_store","into","into","into","new","new","open_rkv","put","read","try_collect_all","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","Version","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","partial_cmp","to_owned","try_from","try_from","try_from","try_into","type_id"],"q":["nimbus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nimbus::EnrollmentStatus","","","","","","","","","","","nimbus::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nimbus::error::BehaviorError","","nimbus::error::NimbusError","","","","","","","","","","","","","","","","","","","","nimbus::persistence","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nimbus::versioning","","","","","","","","","","","","","","","",""],"d":["The <code>AppContext</code> object represents the parameters and …","","","","","","","","","","","","","","","","","Nimbus is the main struct representing the experiments …","","","","","","","Optional custom configuration Currently includes the …","","This is the currently supported major schema version.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear all events in the Nimbus event store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not complete yet This is where the error definitions can go","","Determine the enrolment status for an experiment.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Our storage abstraction, currently backed by Rkv.","","","","","","Records an event for the purposes of behavioral targeting.","","","","Reset internal state in response to application-level …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nimbus SDK App Version Comparison","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Database used to access persisted data This an abstraction …","Store containing the set of known experiment enrollments.","Store containing collected counts of behavior events for …","Store containing the set of known experiments, as read …","Store containing miscellaneous metadata about this client …","","A wrapper for an Rkv store. Implemented to allow any value …","Enumeration of the different stores within our database.","Store containing pending updates to experiment data.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets a Store object, which used with the writer returned by","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Main constructor for a database Initiates the Rkv database …","","","Function used to obtain a “reader” which is used for …","Fork of collect_all that simply drops records that fail to …","","","","","","","","","","Function used to obtain a “writer” which is used for …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,13,0,0,0,4,4,0,0,4,0,0,0,0,0,13,0,0,4,0,0,0,0,0,4,5,7,7,5,7,9,7,9,7,1,7,1,32,33,18,20,4,5,6,7,8,9,10,11,12,13,21,1,32,33,18,20,4,5,6,7,8,9,10,11,12,13,21,8,32,9,9,7,9,1,21,4,5,6,7,8,9,10,11,12,13,4,5,6,7,8,9,10,11,12,13,6,12,1,1,7,5,5,7,5,7,9,10,11,12,13,21,4,7,9,10,11,12,13,7,7,9,8,4,9,10,11,12,13,0,20,0,1,11,10,8,9,11,1,0,0,0,0,4,5,6,7,8,9,10,11,12,13,1,32,32,33,33,18,20,4,5,5,6,7,8,9,10,11,12,13,21,1,1,1,1,1,1,1,1,18,21,4,7,1,7,1,32,33,18,20,4,5,6,7,8,9,10,11,12,13,21,5,4,9,9,5,7,12,1,4,1,1,1,7,7,0,9,9,12,33,11,1,32,9,5,1,9,4,5,7,9,10,11,12,13,6,1,1,1,32,33,8,9,11,12,9,18,9,4,5,7,9,10,11,12,13,4,5,6,7,8,9,10,11,12,13,12,1,32,33,18,20,4,5,6,7,8,9,10,11,12,13,21,1,32,33,18,20,4,5,6,7,8,9,10,11,12,13,21,1,32,33,18,20,4,5,6,7,8,9,10,11,12,13,21,0,1,32,8,9,32,8,9,10,0,21,1,69,70,71,69,70,71,71,69,72,70,73,41,0,41,41,41,41,41,41,42,41,41,41,41,41,42,41,42,0,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,42,41,42,41,41,42,42,41,41,41,41,41,41,41,41,41,41,41,41,42,41,42,41,42,41,41,42,41,42,41,42,41,42,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,88,0,58,58,58,58,0,0,0,58,0,58,55,57,58,55,57,55,55,55,58,55,57,55,57,58,55,57,55,57,57,55,57,55,58,55,57,58,55,57,58,55,57,57,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[[2,[0]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1,3],0,[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[1,[17,[[16,[14,15]]]]],[[3,[[19,[18]]]]]],[[1,[17,[[16,[14,15]]]]],[[3,[[19,[20]]]]]],0,0,0,0,[[],5],[[],7],[[],9],[[],10],[[],11],[[],12],[[],13],[[],21],[[],[[22,[4]]]],[[],[[22,[7]]]],[[],[[22,[9]]]],[[],[[22,[10]]]],[[],[[22,[11]]]],[[],[[22,[12]]]],[[],[[22,[13]]]],0,0,0,0,[[4,4],23],[[9,9],23],[[10,10],23],[[11,11],23],[[12,12],23],[[13,13],23],0,[[20,14],[[3,[23]]]],[[24,21,5,9,[19,[[25,[0]]]]],[[3,[0]]]],[1,[[19,[[25,[0]]]]]],0,0,0,0,0,[1,3],[[26,27],28],[[28,27]],[[29,27],28],[[28,26,27],28],[[4,30],31],[[5,30],31],[[6,30],31],[[7,30],31],[[8,30],31],[[9,30],31],[[10,30],31],[[11,30],31],[[12,30],31],[[13,30],31],[[]],[9,32],[[]],[11,33],[[]],[[]],[[]],[[]],[7,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[[2,[8]]]]]],[1,[[3,[[2,[9]]]]]],[1,[[3,[[2,[32]]]]]],[[1,14],[[3,[[17,[14]]]]]],[[1,14],[[3,[[2,[33]]]]]],[[1,14],[[3,[[17,[14]]]]]],[1,[[3,[23]]]],[1,5],[[18,14],[[17,[14]]]],[[21,34,13],[[17,[34]]]],[4],0,[1,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,23],0,0,0,0,0,[[7,[36,[35]],[17,[6]],21],[[3,[1]]]],0,[1,[[3,[24]]]],[[1,14,14],[[3,[[2,[0]]]]]],[[1,14],[[3,[[2,[0]]]]]],0,0,0,0,0,0,0,0,[[1,14],3],0,0,0,[[1,21],[[3,[[2,[0]]]]]],0,[4,22],[5,22],[7,22],[9,22],[10,22],[11,22],[12,22],[13,22],0,[[1,14],3],[[1,23],[[3,[[2,[0]]]]]],[[1,24],3],0,0,0,0,0,0,0,[[18,14,[17,[14]]],14],0,[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[],[[22,[[2,[37,38]],39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],0,[1,[[3,[[2,[0]]]]]],0,0,0,0,0,0,0,0,[34,21],[[1,5]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[41,30],31],[[41,30],31],[[42,30],31],[[42,30],31],[43,41],[44,41],[45,41],[46,41],[[]],[47,41],[48,41],[49,41],[50,41],[51,41],[52,41],[42,41],[[]],[[]],[[]],[53],[53],[41,[[17,[54]]]],[[],14],[[],14],[[],22],[[],22],[[],22],[[],22],[[],40],[[],40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[55,56],3],[55,[[3,[2]]]],[[55,56,34],3],[[]],[[]],[[]],[[55,34],[[3,[17]]]],[[57,58],55],[[]],[[]],[[]],[[[60,[59]]],55],[[[62,[61]]],[[3,[57]]]],[[[62,[61]]],[[3,[[64,[63]]]]]],[[55,56,34],3],[57,[[3,[[66,[65]]]]]],[55,[[3,[2]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],40],[[],40],[[],40],[57,[[3,[56]]]],0,[[]],[[]],[67,67],[[]],[[],67],[[67,67],23],[[67,30],31],[[]],[[]],[[67,67],[[17,[68]]]],[[]],[34,[[22,[67]]]],[14,[[22,[67]]]],[[],22],[[],22],[[],40]],"p":[[3,"NimbusClient"],[3,"Vec"],[6,"Result"],[4,"EnrollmentStatus"],[3,"TargetingAttributes"],[3,"RemoteSettingsConfig"],[3,"AppContext"],[3,"EnrolledExperiment"],[3,"Experiment"],[3,"FeatureConfig"],[3,"Branch"],[3,"BucketConfig"],[4,"RandomizationUnit"],[3,"String"],[4,"Value"],[3,"Map"],[4,"Option"],[3,"NimbusStringHelper"],[3,"Arc"],[3,"NimbusTargetingHelper"],[3,"AvailableRandomizationUnits"],[4,"Result"],[15,"bool"],[3,"Uuid"],[3,"Mutex"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"Formatter"],[6,"Result"],[3,"AvailableExperiment"],[3,"ExperimentBranch"],[15,"str"],[3,"PathBuf"],[8,"Into"],[15,"u8"],[3,"Global"],[4,"DataError"],[3,"TypeId"],[4,"NimbusError"],[4,"BehaviorError"],[3,"Error"],[3,"TryFromSliceError"],[4,"StoreError"],[3,"Error"],[4,"ParseError"],[4,"Error"],[4,"EvaluationError"],[3,"Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"Demand"],[8,"Error"],[3,"SingleStore"],[6,"Writer"],[3,"Database"],[4,"StoreId"],[3,"DatabaseImpl"],[3,"SingleStore"],[3,"Path"],[8,"AsRef"],[3,"EnvironmentImpl"],[3,"Rkv"],[3,"RoTransactionImpl"],[3,"Reader"],[3,"Version"],[4,"Ordering"],[13,"Enrolled"],[13,"Disqualified"],[13,"WasEnrolled"],[13,"NotEnrolled"],[13,"Error"],[13,"InvalidState"],[13,"IntervalParseError"],[13,"RkvError"],[13,"IOError"],[13,"JSONError"],[13,"EvaluationError"],[13,"TryFromSliceError"],[13,"UrlParsingError"],[13,"RequestError"],[13,"UuidError"],[13,"ResponseError"],[13,"InvalidPath"],[13,"InternalError"],[13,"NoSuchExperiment"],[13,"NoSuchBranch"],[13,"BackoffError"],[13,"VersionParsingError"],[13,"BehaviorError"],[13,"TryFromIntError"],[13,"ParseIntError"],[13,"TransformParameterError"]]},\
"nss":{"doc":"","t":[13,13,13,13,13,3,4,13,13,13,13,13,6,13,0,11,11,11,11,11,0,0,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,14,0,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,4,5,5,11,11,11,11,5,11,11,11,11,11,11,11,5,4,3,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,2,5,0,0,0,0,4,13,13,11,11,11,11,5,11,11,5,5,11,11,11,11,11,5,5,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5],"n":["Base64Decode","CertificateIssuerError","CertificateSubjectError","CertificateValidityError","ConversionError","Error","ErrorKind","InputError","InternalError","NSSError","NSSInitFailure","PKIXError","Result","SSLError","aes","backtrace","borrow","borrow","borrow_mut","borrow_mut","cert","ec","ecdh","ensure_initialized","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","kind","pbkdf2","pk11","pkixc","provide","provide","scoped_ptr","secport","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","1","1","1","Decrypt","Encrypt","Operation","aes_cbc_crypt","aes_gcm_crypt","borrow","borrow_mut","clone","clone_into","common_crypt","fmt","from","into","to_owned","try_from","try_into","type_id","extract_ec_public_key","Curve","EcKey","P256","P384","PrivateKey","PublicKey","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_to_public_key","curve","curve","curve","deref","deref","deserialize","deserialize","eq","export","fmt","fmt","from","from","from","from","from_bytes","from_coordinates","generate_keypair","get_field_len","import","into","into","into","into","new","private_key","private_value","public_key","serialize","serialize","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","ecdh_agreement","HashAlgorithm","pbkdf2_key_derive","context","slot","sym_key","types","HashAlgorithm","SHA256","SHA384","borrow","borrow_mut","clone","clone_into","create_context_by_sym_key","fmt","from","hash_buf","hmac_sign","into","to_owned","try_from","try_into","type_id","generate_random","hkdf_expand","AlgorithmID","Certificate","Context","GenericObject","PrivateKey","PublicKey","Slot","SymKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert_to_public_key","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_code_signing_certificate_chain","secure_memcmp"],"q":["nss","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nss::ErrorKind","","","","","","","","","nss::aes","","","","","","","","","","","","","","","","","nss::cert","nss::ec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nss::ecdh","nss::pbkdf2","","nss::pk11","","","","nss::pk11::context","","","","","","","","","","","","","","","","","nss::pk11::slot","nss::pk11::sym_key","nss::pk11::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nss::pkixc","nss::secport"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","ECDSA verify operation","","","","","","","","","","","","","","","Safe wrapper around PK11_CreateContextBySymKey that …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,4,4,4,4,0,0,4,4,4,4,4,0,4,0,1,4,1,4,1,0,0,0,0,4,4,1,1,4,4,4,1,1,1,1,4,1,1,0,0,0,4,1,0,0,4,4,1,4,1,4,1,4,1,39,40,41,42,43,44,39,40,41,14,14,0,0,0,14,14,14,14,0,14,14,14,14,14,14,14,0,0,0,21,21,0,0,23,24,21,22,23,24,21,22,21,22,21,22,23,23,24,22,23,24,21,22,21,23,21,22,23,24,21,22,24,22,0,21,23,23,24,21,22,22,22,23,22,21,22,24,21,22,23,24,21,22,23,24,21,22,23,24,21,22,24,0,0,0,0,0,0,0,0,29,29,29,29,29,29,0,29,29,0,0,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,31,25,26,33,34,32,35,36,31,25,26,33,34,32,35,36,25,31,25,26,33,34,32,35,36,31,25,26,33,34,32,35,36,31,25,26,33,34,32,35,36,31,25,26,33,34,32,35,36,31,25,26,33,34,32,35,36,31,25,26,33,34,32,35,36,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[4,5],6],[[4,5],6],[[1,5],6],[[1,5],6],[7,4],[[]],[8,4],[[]],[4,1],[8,1],[7,1],[[]],[[]],[1,4],0,0,0,[9],[9],0,0,[4,[[3,[10]]]],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,[14,[[17,[[16,[15]]]]]],[14,[[17,[[16,[15]]]]]],[[]],[[]],[14,14],[[]],[[18,19,20,14],[[17,[[16,[15]]]]]],[[14,5],6],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],[[17,[[16,[15]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[22,22],[[]],[[]],[23,[[17,[24]]]],[23,21],[24,21],[22,21],[23,25],[24,26],[[],[[12,[21]]]],[[],[[12,[22]]]],[[21,21],27],[23,[[17,[22]]]],[[21,5],6],[[22,5],6],[[]],[[]],[[]],[[]],[21,[[17,[24]]]],[21,[[17,[22]]]],[21,17],[21,28],[22,[[17,[23]]]],[[]],[[]],[[]],[[]],[21,22],[22],[23,[[17,[[16,[15]]]]]],[22],[21,12],[22,12],[24,[[17,[[16,[15]]]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[24,29],17],[[23,24],[[17,[[16,[15]]]]]],0,[[28,29],17],0,0,0,0,0,0,0,[[]],[[]],[29,29],[[]],[[18,30,31],[[17,[32]]]],[[29,5],6],[[]],[29,[[17,[[16,[15]]]]]],[29,[[17,[[16,[15]]]]]],[[]],[[]],[[],12],[[],12],[[],13],[[],17],[[29,19],[[17,[[16,[15]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,[[17,[26]]]],[31],[25],[26],[33],[34],[32],[35],[36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[16,37,38],17],[[],27]],"p":[[3,"Error"],[3,"Mutex"],[4,"Option"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[3,"TryFromIntError"],[4,"DecodeError"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Operation"],[15,"u8"],[3,"Vec"],[6,"Result"],[6,"CK_MECHANISM_TYPE"],[15,"usize"],[6,"SECItem"],[4,"Curve"],[3,"EcKey"],[3,"PrivateKey"],[3,"PublicKey"],[3,"PrivateKey"],[3,"PublicKey"],[15,"bool"],[15,"u32"],[4,"HashAlgorithm"],[6,"CK_ATTRIBUTE_TYPE"],[3,"SymKey"],[3,"Context"],[3,"GenericObject"],[3,"Certificate"],[3,"Slot"],[3,"AlgorithmID"],[15,"u64"],[15,"str"],[13,"NSSError"],[13,"SSLError"],[13,"PKIXError"],[13,"InputError"],[13,"ConversionError"],[13,"Base64Decode"]]},\
"nss_build_common":{"doc":"This shouldn’t exist, but does because if something isn…","t":[13,4,3,13,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12],"n":["Dynamic","LinkingKind","NoNssDir","Static","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","env","env_flag","env_str","eq","eq","fmt","fmt","from","from","into","into","link_nss","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","folded_libs"],"q":["nss_build_common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nss_build_common::LinkingKind"],"d":["","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[1,0,0,1,1,2,1,2,1,2,1,2,0,0,0,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,12],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[3,[[5,[4]]]],[3,6],[3,[[5,[7]]]],[[1,1],6],[[2,2],6],[[1,8],9],[[2,8],9],[[]],[[]],[[]],[[]],[[],[[10,[2]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0],"p":[[4,"LinkingKind"],[3,"NoNssDir"],[15,"str"],[3,"OsString"],[4,"Option"],[15,"bool"],[3,"String"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[13,"Dynamic"]]},\
"nss_sys":{"doc":"","t":[17,6,6,5,5,5,5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,6,6,6,6,17,6,3,17,6,6,3,6,6,17,6,6,12,12,12,12,4,13,13,13,17,17,13,12,12,12,12,4,17,6,6,17,17,17,17,17,5,5,5,6,6,4,4,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,13,13,5,5,5,13,13,13,13,13,5,3,3,5,6,6,6,6,6,6,17,5,5,5,17,6,3,13,13,5,6,3,4,6,3,6,3,6,6,3,6,3,6,3,6,3,6,3,6,3,6,3,19,6,3,5,5,5,5,5,5,6,3,4,4,13,13,4,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,13,13,5,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,12,13,12,13,12,11,12,11,12,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,6,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["AES_BLOCK_SIZE","CERTCertDBHandle","CERTCertificate","CERT_DestroyCertificate","CERT_ExtractPublicKey","CERT_GetDefaultCertDB","CERT_NewTempCertificate","CKA_CLASS","CKA_EC_PARAMS","CKA_EC_POINT","CKA_ENCRYPT","CKA_ID","CKA_KEY_TYPE","CKA_PRIVATE","CKA_SENSITIVE","CKA_SIGN","CKA_TOKEN","CKA_VALUE","CKA_WRAP","CKD_NULL","CKK_EC","CKM_AES_CBC_PAD","CKM_AES_GCM","CKM_ECDH1_DERIVE","CKM_EC_KEY_PAIR_GEN","CKM_NSS","CKM_NSS_HKDF_SHA256","CKM_NSS_HKDF_SHA384","CKM_SHA256_HMAC","CKM_SHA384_HMAC","CKM_SHA512_HMAC","CKM_VENDOR_DEFINED","CKO_PRIVATE_KEY","CK_ATTRIBUTE","CK_ATTRIBUTE_TYPE","CK_BBOOL","CK_BYTE","CK_BYTE_PTR","CK_FALSE","CK_GCM_PARAMS","CK_GCM_PARAMS_V3","CK_INVALID_HANDLE","CK_KEY_TYPE","CK_MECHANISM_TYPE","CK_NSS_HKDFParams","CK_OBJECT_CLASS","CK_OBJECT_HANDLE","CK_TRUE","CK_ULONG","CK_VOID_PTR","DEREncodedParams","DSSKey","DSSpriviledge","DSSversion","ECPointEncoding","ECPoint_Uncompressed","ECPoint_Undefined","ECPoint_XOnly","EC_POINT_FORM_UNCOMPRESSED","HASH_LENGTH_MAX","INVALID_CERT_EXTENSION","KEAKey","KEApriviledge","KEAversion","KMID","KeyType","NSSCK_VENDOR_NSS","NSSInitContext","NSSInitParameters","NSS_INIT_FORCEOPEN","NSS_INIT_NOCERTDB","NSS_INIT_NOMODDB","NSS_INIT_OPTIMIZESPACE","NSS_INIT_READONLY","NSS_InitContext","NSS_SecureMemcmp","NSS_VersionCheck","PK11Context","PK11GenericObject","PK11ObjectType","PK11Origin","PK11SlotInfo","PK11SymKey","PK11_CreateContextBySymKey","PK11_CreateGenericObject","PK11_CreatePBEV2AlgorithmID","PK11_Decrypt","PK11_Derive","PK11_DestroyContext","PK11_DestroyGenericObject","PK11_DigestBegin","PK11_DigestFinal","PK11_DigestOp","PK11_Encrypt","PK11_ExtractKeyValue","PK11_FindKeyByKeyID","PK11_FreeSlot","PK11_FreeSymKey","PK11_GenerateKeyPair","PK11_GenerateRandom","PK11_GetInternalSlot","PK11_GetKeyData","PK11_HashBuf","PK11_ImportSymKey","PK11_MapSignKeyType","PK11_OriginDerive","PK11_OriginFortezzaHack","PK11_OriginGenerated","PK11_OriginNULL","PK11_OriginUnwrap","PK11_PBEKeyGen","PK11_PubDeriveWithKDF","PK11_ReadRawAttribute","PK11_TypeCert","PK11_TypeGeneric","PK11_TypePrivKey","PK11_TypePubKey","PK11_TypeSymKey","PK11_VerifyWithMechanism","PLArena","PLArenaPool","PORT_FreeArena","PRBool","PRErrorCode","PRInt32","PRIntn","PRUint32","PRUword","PR_FALSE","PR_GetError","PR_GetErrorText","PR_GetErrorTextLength","PR_TRUE","SECAlgorithmID","SECAlgorithmIDStr","SECFailure","SECFailure","SECITEM_FreeItem","SECItem","SECItemStr","SECItemType","SECKEYDHPublicKey","SECKEYDHPublicKeyStr","SECKEYDSAPublicKey","SECKEYDSAPublicKeyStr","SECKEYECParams","SECKEYECPublicKey","SECKEYECPublicKeyStr","SECKEYFortezzaPublicKey","SECKEYFortezzaPublicKeyStr","SECKEYKEAParams","SECKEYKEAParamsStr","SECKEYKEAPublicKey","SECKEYKEAPublicKeyStr","SECKEYPQGParams","SECKEYPQGParamsStr","SECKEYPrivateKey","SECKEYPrivateKeyStr","SECKEYPublicKey","SECKEYPublicKeyStr","SECKEYPublicKeyStr_u","SECKEYRSAPublicKey","SECKEYRSAPublicKeyStr","SECKEY_ConvertToPublicKey","SECKEY_CopyPublicKey","SECKEY_DestroyPrivateKey","SECKEY_DestroyPublicKey","SECOID_DestroyAlgorithmID","SECOID_FindOIDByTag","SECOidData","SECOidDataStr","SECOidTag","SECStatus","SECSuccess","SECSuccess","SECSupportExtenTag","SECWouldBlock","SECWouldBlock","SEC_ASN1_OBJECT_ID","SEC_OID_AES_128_CBC","SEC_OID_AES_128_ECB","SEC_OID_AES_128_GCM","SEC_OID_AES_128_KEY_WRAP","SEC_OID_AES_192_CBC","SEC_OID_AES_192_ECB","SEC_OID_AES_192_GCM","SEC_OID_AES_192_KEY_WRAP","SEC_OID_AES_256_CBC","SEC_OID_AES_256_ECB","SEC_OID_AES_256_GCM","SEC_OID_AES_256_KEY_WRAP","SEC_OID_ANSIX962_ECDSA_SHA1_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA224_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA256_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA384_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA512_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SIGNATURE_RECOMMENDED_DIGEST","SEC_OID_ANSIX962_ECDSA_SIGNATURE_SPECIFIED_DIGEST","SEC_OID_ANSIX962_EC_C2ONB191V4","SEC_OID_ANSIX962_EC_C2ONB191V5","SEC_OID_ANSIX962_EC_C2ONB239V4","SEC_OID_ANSIX962_EC_C2ONB239V5","SEC_OID_ANSIX962_EC_C2PNB163V1","SEC_OID_ANSIX962_EC_C2PNB163V2","SEC_OID_ANSIX962_EC_C2PNB163V3","SEC_OID_ANSIX962_EC_C2PNB176V1","SEC_OID_ANSIX962_EC_C2PNB208W1","SEC_OID_ANSIX962_EC_C2PNB272W1","SEC_OID_ANSIX962_EC_C2PNB304W1","SEC_OID_ANSIX962_EC_C2PNB368W1","SEC_OID_ANSIX962_EC_C2TNB191V1","SEC_OID_ANSIX962_EC_C2TNB191V2","SEC_OID_ANSIX962_EC_C2TNB191V3","SEC_OID_ANSIX962_EC_C2TNB239V1","SEC_OID_ANSIX962_EC_C2TNB239V2","SEC_OID_ANSIX962_EC_C2TNB239V3","SEC_OID_ANSIX962_EC_C2TNB359V1","SEC_OID_ANSIX962_EC_C2TNB431R1","SEC_OID_ANSIX962_EC_PRIME192V1","SEC_OID_ANSIX962_EC_PRIME192V2","SEC_OID_ANSIX962_EC_PRIME192V3","SEC_OID_ANSIX962_EC_PRIME239V1","SEC_OID_ANSIX962_EC_PRIME239V2","SEC_OID_ANSIX962_EC_PRIME239V3","SEC_OID_ANSIX962_EC_PUBLIC_KEY","SEC_OID_ANSIX9_DSA_SIGNATURE","SEC_OID_ANSIX9_DSA_SIGNATURE_WITH_SHA1_DIGEST","SEC_OID_APPLY_SSL_POLICY","SEC_OID_AVA_COMMON_NAME","SEC_OID_AVA_COUNTRY_NAME","SEC_OID_AVA_DC","SEC_OID_AVA_DN_QUALIFIER","SEC_OID_AVA_GENERATION_QUALIFIER","SEC_OID_AVA_GIVEN_NAME","SEC_OID_AVA_HOUSE_IDENTIFIER","SEC_OID_AVA_INITIALS","SEC_OID_AVA_LOCALITY","SEC_OID_AVA_NAME","SEC_OID_AVA_ORGANIZATIONAL_UNIT_NAME","SEC_OID_AVA_ORGANIZATION_NAME","SEC_OID_AVA_POSTAL_ADDRESS","SEC_OID_AVA_POSTAL_CODE","SEC_OID_AVA_POST_OFFICE_BOX","SEC_OID_AVA_PSEUDONYM","SEC_OID_AVA_SERIAL_NUMBER","SEC_OID_AVA_STATE_OR_PROVINCE","SEC_OID_AVA_STREET_ADDRESS","SEC_OID_AVA_SURNAME","SEC_OID_AVA_TITLE","SEC_OID_BOGUS_DSA_SIGNATURE_WITH_SHA1_DIGEST","SEC_OID_BOGUS_KEY_USAGE","SEC_OID_BUSINESS_CATEGORY","SEC_OID_CAMELLIA_128_CBC","SEC_OID_CAMELLIA_192_CBC","SEC_OID_CAMELLIA_256_CBC","SEC_OID_CERT_RENEWAL_LOCATOR","SEC_OID_CHACHA20_POLY1305","SEC_OID_CMS_3DES_KEY_WRAP","SEC_OID_CMS_EPHEMERAL_STATIC_DIFFIE_HELLMAN","SEC_OID_CMS_RC2_KEY_WRAP","SEC_OID_CURVE25519","SEC_OID_DES_40_CBC","SEC_OID_DES_CBC","SEC_OID_DES_CFB","SEC_OID_DES_ECB","SEC_OID_DES_EDE","SEC_OID_DES_EDE3_CBC","SEC_OID_DES_MAC","SEC_OID_DES_OFB","SEC_OID_EV_INCORPORATION_COUNTRY","SEC_OID_EV_INCORPORATION_LOCALITY","SEC_OID_EV_INCORPORATION_STATE","SEC_OID_EXT_KEY_USAGE_CLIENT_AUTH","SEC_OID_EXT_KEY_USAGE_CODE_SIGN","SEC_OID_EXT_KEY_USAGE_EMAIL_PROTECT","SEC_OID_EXT_KEY_USAGE_IPSEC_END","SEC_OID_EXT_KEY_USAGE_IPSEC_IKE","SEC_OID_EXT_KEY_USAGE_IPSEC_TUNNEL","SEC_OID_EXT_KEY_USAGE_IPSEC_USER","SEC_OID_EXT_KEY_USAGE_SERVER_AUTH","SEC_OID_EXT_KEY_USAGE_TIME_STAMP","SEC_OID_FORTEZZA_SKIPJACK","SEC_OID_HMAC_MD5","SEC_OID_HMAC_SHA1","SEC_OID_HMAC_SHA224","SEC_OID_HMAC_SHA256","SEC_OID_HMAC_SHA384","SEC_OID_HMAC_SHA512","SEC_OID_IDEA_CBC","SEC_OID_IPSEC_IKE_END","SEC_OID_IPSEC_IKE_INTERMEDIATE","SEC_OID_ISO_SHA1_WITH_RSA_SIGNATURE","SEC_OID_ISO_SHA_WITH_RSA_SIGNATURE","SEC_OID_MD2","SEC_OID_MD4","SEC_OID_MD5","SEC_OID_MISSI_ALT_KEA","SEC_OID_MISSI_DSS","SEC_OID_MISSI_DSS_OLD","SEC_OID_MISSI_KEA","SEC_OID_MISSI_KEA_DSS","SEC_OID_MISSI_KEA_DSS_OLD","SEC_OID_MS_EXT_KEY_USAGE_CTL_SIGNING","SEC_OID_MS_SMIME_ENCRYPTION_KEY_PREFERENCE","SEC_OID_NETSCAPE_AOLSCREENNAME","SEC_OID_NETSCAPE_NICKNAME","SEC_OID_NETSCAPE_RECOVERY_REQUEST","SEC_OID_NETSCAPE_SMIME_KEA","SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA224_DIGEST","SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA256_DIGEST","SEC_OID_NS_CERT_EXT_BASE_URL","SEC_OID_NS_CERT_EXT_CA_CERT_URL","SEC_OID_NS_CERT_EXT_CA_CRL_URL","SEC_OID_NS_CERT_EXT_CA_POLICY_URL","SEC_OID_NS_CERT_EXT_CA_REVOCATION_URL","SEC_OID_NS_CERT_EXT_CERT_RENEWAL_TIME","SEC_OID_NS_CERT_EXT_CERT_RENEWAL_URL","SEC_OID_NS_CERT_EXT_CERT_TYPE","SEC_OID_NS_CERT_EXT_COMMENT","SEC_OID_NS_CERT_EXT_ENTITY_LOGO","SEC_OID_NS_CERT_EXT_HOMEPAGE_URL","SEC_OID_NS_CERT_EXT_ISSUER_LOGO","SEC_OID_NS_CERT_EXT_LOST_PASSWORD_URL","SEC_OID_NS_CERT_EXT_NETSCAPE_OK","SEC_OID_NS_CERT_EXT_REVOCATION_URL","SEC_OID_NS_CERT_EXT_SCOPE_OF_USE","SEC_OID_NS_CERT_EXT_SSL_SERVER_NAME","SEC_OID_NS_CERT_EXT_SUBJECT_LOGO","SEC_OID_NS_CERT_EXT_USER_PICTURE","SEC_OID_NS_KEY_USAGE_GOVT_APPROVED","SEC_OID_NS_TYPE_CERT_SEQUENCE","SEC_OID_NS_TYPE_GIF","SEC_OID_NS_TYPE_HTML","SEC_OID_NS_TYPE_JPEG","SEC_OID_NS_TYPE_URL","SEC_OID_NULL_CIPHER","SEC_OID_OCSP_RESPONDER","SEC_OID_PKCS12","SEC_OID_PKCS12_BAG_IDS","SEC_OID_PKCS12_CERT_AND_CRL_BAG_ID","SEC_OID_PKCS12_CERT_BAG_IDS","SEC_OID_PKCS12_ENVELOPING_IDS","SEC_OID_PKCS12_ESPVK_IDS","SEC_OID_PKCS12_KEY_BAG_ID","SEC_OID_PKCS12_MODE_IDS","SEC_OID_PKCS12_OIDS","SEC_OID_PKCS12_PBE_IDS","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC4","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC4","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_TRIPLE_DES_CBC","SEC_OID_PKCS12_PKCS8_KEY_SHROUDING","SEC_OID_PKCS12_PKCS8_SHROUDED_KEY_BAG_ID","SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_128_BIT_RC4","SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_40_BIT_RC4","SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_TRIPLE_DES","SEC_OID_PKCS12_RSA_SIGNATURE_WITH_SHA1_DIGEST","SEC_OID_PKCS12_SAFE_CONTENTS_ID","SEC_OID_PKCS12_SDSI_CERT_BAG","SEC_OID_PKCS12_SECRET_BAG_ID","SEC_OID_PKCS12_SIGNATURE_IDS","SEC_OID_PKCS12_V1_CERT_BAG_ID","SEC_OID_PKCS12_V1_CRL_BAG_ID","SEC_OID_PKCS12_V1_KEY_BAG_ID","SEC_OID_PKCS12_V1_PKCS8_SHROUDED_KEY_BAG_ID","SEC_OID_PKCS12_V1_SAFE_CONTENTS_BAG_ID","SEC_OID_PKCS12_V1_SECRET_BAG_ID","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC4","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_2KEY_TRIPLE_DES_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_3KEY_TRIPLE_DES_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC4","SEC_OID_PKCS12_X509_CERT_CRL_BAG","SEC_OID_PKCS1_MD2_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_MD4_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_MGF1","SEC_OID_PKCS1_PSPECIFIED","SEC_OID_PKCS1_RSA_ENCRYPTION","SEC_OID_PKCS1_RSA_OAEP_ENCRYPTION","SEC_OID_PKCS1_RSA_PSS_SIGNATURE","SEC_OID_PKCS1_SHA1_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA224_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA256_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA384_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA512_WITH_RSA_ENCRYPTION","SEC_OID_PKCS5_PBES2","SEC_OID_PKCS5_PBE_WITH_MD2_AND_DES_CBC","SEC_OID_PKCS5_PBE_WITH_MD5_AND_DES_CBC","SEC_OID_PKCS5_PBE_WITH_SHA1_AND_DES_CBC","SEC_OID_PKCS5_PBKDF2","SEC_OID_PKCS5_PBMAC1","SEC_OID_PKCS7","SEC_OID_PKCS7_DATA","SEC_OID_PKCS7_DIGESTED_DATA","SEC_OID_PKCS7_ENCRYPTED_DATA","SEC_OID_PKCS7_ENVELOPED_DATA","SEC_OID_PKCS7_SIGNED_DATA","SEC_OID_PKCS7_SIGNED_ENVELOPED_DATA","SEC_OID_PKCS9_CHALLENGE_PASSWORD","SEC_OID_PKCS9_CONTENT_TYPE","SEC_OID_PKCS9_COUNTER_SIGNATURE","SEC_OID_PKCS9_EMAIL_ADDRESS","SEC_OID_PKCS9_EXTENDED_CERTIFICATE_ATTRIBUTES","SEC_OID_PKCS9_EXTENSION_REQUEST","SEC_OID_PKCS9_FRIENDLY_NAME","SEC_OID_PKCS9_LOCAL_KEY_ID","SEC_OID_PKCS9_MESSAGE_DIGEST","SEC_OID_PKCS9_SDSI_CERT","SEC_OID_PKCS9_SIGNING_TIME","SEC_OID_PKCS9_SMIME_CAPABILITIES","SEC_OID_PKCS9_UNSTRUCTURED_ADDRESS","SEC_OID_PKCS9_UNSTRUCTURED_NAME","SEC_OID_PKCS9_X509_CERT","SEC_OID_PKCS9_X509_CRL","SEC_OID_PKIX_CA_ISSUERS","SEC_OID_PKIX_CA_REPOSITORY","SEC_OID_PKIX_CPS_POINTER_QUALIFIER","SEC_OID_PKIX_OCSP","SEC_OID_PKIX_OCSP_ARCHIVE_CUTOFF","SEC_OID_PKIX_OCSP_BASIC_RESPONSE","SEC_OID_PKIX_OCSP_CRL","SEC_OID_PKIX_OCSP_NONCE","SEC_OID_PKIX_OCSP_NO_CHECK","SEC_OID_PKIX_OCSP_RESPONSE","SEC_OID_PKIX_OCSP_SERVICE_LOCATOR","SEC_OID_PKIX_REGCTRL_AUTHENTICATOR","SEC_OID_PKIX_REGCTRL_OLD_CERT_ID","SEC_OID_PKIX_REGCTRL_PKIPUBINFO","SEC_OID_PKIX_REGCTRL_PKI_ARCH_OPTIONS","SEC_OID_PKIX_REGCTRL_PROTOCOL_ENC_KEY","SEC_OID_PKIX_REGCTRL_REGTOKEN","SEC_OID_PKIX_REGINFO_CERT_REQUEST","SEC_OID_PKIX_REGINFO_UTF8_PAIRS","SEC_OID_PKIX_TIMESTAMPING","SEC_OID_PKIX_USER_NOTICE_QUALIFIER","SEC_OID_RC2_40_CBC","SEC_OID_RC2_CBC","SEC_OID_RC4","SEC_OID_RC4_40","SEC_OID_RC4_56","SEC_OID_RC5_CBC_PAD","SEC_OID_RFC1274_MAIL","SEC_OID_RFC1274_UID","SEC_OID_SDN702_DSA_SIGNATURE","SEC_OID_SECG_EC_SECP112R1","SEC_OID_SECG_EC_SECP112R2","SEC_OID_SECG_EC_SECP128R1","SEC_OID_SECG_EC_SECP128R2","SEC_OID_SECG_EC_SECP160K1","SEC_OID_SECG_EC_SECP160R1","SEC_OID_SECG_EC_SECP160R2","SEC_OID_SECG_EC_SECP192K1","SEC_OID_SECG_EC_SECP224K1","SEC_OID_SECG_EC_SECP224R1","SEC_OID_SECG_EC_SECP256K1","SEC_OID_SECG_EC_SECP256R1","SEC_OID_SECG_EC_SECP384R1","SEC_OID_SECG_EC_SECP521R1","SEC_OID_SECG_EC_SECT113R1","SEC_OID_SECG_EC_SECT113R2","SEC_OID_SECG_EC_SECT131R1","SEC_OID_SECG_EC_SECT131R2","SEC_OID_SECG_EC_SECT163K1","SEC_OID_SECG_EC_SECT163R1","SEC_OID_SECG_EC_SECT163R2","SEC_OID_SECG_EC_SECT193R1","SEC_OID_SECG_EC_SECT193R2","SEC_OID_SECG_EC_SECT233K1","SEC_OID_SECG_EC_SECT233R1","SEC_OID_SECG_EC_SECT239K1","SEC_OID_SECG_EC_SECT283K1","SEC_OID_SECG_EC_SECT283R1","SEC_OID_SECG_EC_SECT409K1","SEC_OID_SECG_EC_SECT409R1","SEC_OID_SECG_EC_SECT571K1","SEC_OID_SECG_EC_SECT571R1","SEC_OID_SEED_CBC","SEC_OID_SHA1","SEC_OID_SHA224","SEC_OID_SHA256","SEC_OID_SHA384","SEC_OID_SHA512","SEC_OID_SMIME_ENCRYPTION_KEY_PREFERENCE","SEC_OID_TLS13_KEA_ANY","SEC_OID_TLS_DHE_CUSTOM","SEC_OID_TLS_DHE_DSS","SEC_OID_TLS_DHE_DSS_EXPORT","SEC_OID_TLS_DHE_PSK","SEC_OID_TLS_DHE_RSA","SEC_OID_TLS_DHE_RSA_EXPORT","SEC_OID_TLS_DH_ANON","SEC_OID_TLS_DH_ANON_EXPORT","SEC_OID_TLS_DH_DSS","SEC_OID_TLS_DH_DSS_EXPORT","SEC_OID_TLS_DH_RSA","SEC_OID_TLS_DH_RSA_EXPORT","SEC_OID_TLS_ECDHE_ECDSA","SEC_OID_TLS_ECDHE_PSK","SEC_OID_TLS_ECDHE_RSA","SEC_OID_TLS_ECDH_ANON","SEC_OID_TLS_ECDH_ECDSA","SEC_OID_TLS_ECDH_RSA","SEC_OID_TLS_FFDHE_2048","SEC_OID_TLS_FFDHE_3072","SEC_OID_TLS_FFDHE_4096","SEC_OID_TLS_FFDHE_6144","SEC_OID_TLS_FFDHE_8192","SEC_OID_TLS_RSA","SEC_OID_TLS_RSA_EXPORT","SEC_OID_TOTAL","SEC_OID_UNKNOWN","SEC_OID_VERISIGN_USER_NOTICES","SEC_OID_X500_RSA_ENCRYPTION","SEC_OID_X509_ANY_EXT_KEY_USAGE","SEC_OID_X509_ANY_POLICY","SEC_OID_X509_AUTH_INFO_ACCESS","SEC_OID_X509_AUTH_KEY_ID","SEC_OID_X509_BASIC_CONSTRAINTS","SEC_OID_X509_CERTIFICATE_POLICIES","SEC_OID_X509_CERT_ISSUER","SEC_OID_X509_CRL_DIST_POINTS","SEC_OID_X509_CRL_NUMBER","SEC_OID_X509_DELTA_CRL_INDICATOR","SEC_OID_X509_EXT_KEY_USAGE","SEC_OID_X509_FRESHEST_CRL","SEC_OID_X509_HOLD_INSTRUCTION_CODE","SEC_OID_X509_INHIBIT_ANY_POLICY","SEC_OID_X509_INVALID_DATE","SEC_OID_X509_ISSUER_ALT_NAME","SEC_OID_X509_ISSUING_DISTRIBUTION_POINT","SEC_OID_X509_KEY_USAGE","SEC_OID_X509_NAME_CONSTRAINTS","SEC_OID_X509_POLICY_CONSTRAINTS","SEC_OID_X509_POLICY_MAPPINGS","SEC_OID_X509_PRIVATE_KEY_USAGE_PERIOD","SEC_OID_X509_REASON_CODE","SEC_OID_X509_SUBJECT_ALT_NAME","SEC_OID_X509_SUBJECT_DIRECTORY_ATTR","SEC_OID_X509_SUBJECT_INFO_ACCESS","SEC_OID_X509_SUBJECT_KEY_ID","SEC_OID_X942_DIFFIE_HELMAN_KEY","SHA256_LENGTH","SHA384_LENGTH","SUPPORTED_CERT_EXTENSION","UNSUPPORTED_CERT_EXTENSION","VerifyCodeSigningCertificateChain","_SECStatus","algorithm","arena","arena","arena","arena","arena","arena","arenasize","avail","bExpand","bExtract","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clearance","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current","data","desc","dh","dhKey","dsa","dsaKey","ec","ecKey","encoding","eq","first","fmt","fortezza","fortezzaKey","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kea","keaKey","keaParams","keyType","keyType","len","limit","mask","mechanism","modulus","next","nullKey","offset","oid","pAAD","pInfo","pIv","pSalt","pValue","parameters","params","params","params","pkcs11ID","pkcs11ID","pkcs11IsTemp","pkcs11Slot","pkcs11Slot","prime","prime","publicExponent","publicValue","publicValue","publicValue","publicValue","rsa","rsaKey","rsaOaepKey","rsaPssKey","siAsciiNameString","siAsciiString","siBMPString","siBuffer","siCipherDataBuffer","siClearDataBuffer","siDERCertBuffer","siDERNameBuffer","siDEROID","siEncodedCertBuffer","siEncodedNameBuffer","siGeneralizedTime","siUTCTime","siUTF8String","siUnsignedInteger","siVisibleString","size","size_t","staticflags","subPrime","supportedExtension","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","ulAADLen","ulInfoLen","ulIvBits","ulIvLen","ulSaltLen","ulTagBits","ulValueLen","wincx"],"q":["nss_sys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,7,7,0,9,9,9,0,0,22,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,16,16,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,22,22,0,0,14,26,27,1,3,4,6,12,11,28,28,3,4,11,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,7,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,12,13,15,29,30,29,30,29,30,8,16,12,13,29,30,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,6,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,29,30,7,26,27,13,11,12,15,1,11,30,15,15,31,28,31,28,10,14,2,5,7,26,27,27,26,27,3,4,1,2,4,5,8,29,30,30,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,8,0,27,3,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,10,13,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,26,31,28,31,31,28,31,10,27],"fp":[[3,"SECKEYRSAPublicKeyStr"],[3,"SECKEYDSAPublicKeyStr"],[3,"SECKEYPQGParamsStr"],[3,"SECKEYDHPublicKeyStr"],[3,"SECKEYKEAPublicKeyStr"],[3,"SECKEYKEAParamsStr"],[3,"SECKEYFortezzaPublicKeyStr"],[3,"SECKEYECPublicKeyStr"],[4,"ECPointEncoding"],[3,"CK_ATTRIBUTE"],[3,"PLArena"],[3,"PLArenaPool"],[3,"SECItemStr"],[3,"SECAlgorithmIDStr"],[3,"SECOidDataStr"],[4,"_SECStatus"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[4,"SECSupportExtenTag"],[4,"PK11Origin"],[4,"PK11ObjectType"],[4,"SECOidTag"],[3,"SECKEYPublicKeyStr"],[3,"SECKEYPrivateKeyStr"],[3,"CK_NSS_HKDFParams"],[19,"SECKEYPublicKeyStr_u"],[4,"KeyType"],[3,"CK_GCM_PARAMS_V3"],[4,"SECItemType"]]},\
"places":{"doc":"","t":[2,2,2,2,2,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,14,5,0,0,0,3,3,13,4,13,11,11,11,11,11,11,5,11,11,12,11,11,11,11,11,11,11,5,11,11,11,12,11,12,12,11,12,11,11,11,11,11,11,11,11,11,12,5,12,11,11,11,13,13,2,4,13,13,2,3,3,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,12,5,12,5,12,12,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,4,17,3,13,13,13,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,2,13,13,13,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,3,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,3,3,13,3,13,3,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,12,12,2,2,3,2,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,3,3,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,13,13,4,13,4,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,6,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,4,3,3,13,4,13,13,3,13,2,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,17,3,12,11,11,5,11,11,11,12,12,12,12,11,12,12,11,12,12,12,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,11,13,13,4,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,12,17,2,3,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,17,17,3,17,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,11,11,0,2,2,0,3,3,3,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,0,0,2,2,13,13,4,13,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,13,13,3,18,13,13,13,13,18,18,4,18,18,18,3,18,18,18,18,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,3,12,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,17,17,17,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,5,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,0,0,11,11,11,11,12,12,12,12,11,12,12,12,5,5,5,5,11,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,12,12,11,11,11,11,13,13,13,4,4,3,13,13,3,3,4,3,13,13,13,13,13,13,13,13,13,13,17,13,3,3,4,3,4,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,11,5,5,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,11,12,12,12,5,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,13,3,3,13,4,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,11,12,12,12,11,12,12,12,5,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,13,3,4,13,4,13,3,13,3,13,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,3,3,5,5,5,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,11,11,4,3,3,3,3,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,12,12,11,11,11,11,11,11,12,11,11,11,11,11,5,5,5,5,11,11,11,11,11,12,12,12,5,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,13,13,13,4,11,11,11,11,11,11,11,11,5,5,11,11,5,5,5,11,11,11,11,5,5,11,12,12,12,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,4,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ConnectionType","PageInfo","PlacesApi","PlacesDb","RowId","api","apply_observation","bookmark_sync","db","error","ffi","frecency","get_registered_sync_engine","hash","history_sync","import","match_impl","observation","storage","types","uniffi_reexport_scaffolding","apply_observation","history","matcher","places_api","AddablePlaceInfo","AddableVisit","Permanent","RedirectSourceType","Temporary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_add_url","clone","clone_into","date","eq","fmt","fmt","fmt","from","from","from","insert","into","into","into","is_local","partial_cmp","referrer","title","to_owned","transition","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","visit_uri","visits","vzip","vzip","vzip","Bookmark","Keyword","MatchBehavior","MatchReason","Origin","PreviousUse","SearchBehavior","SearchParams","SearchResult","Tags","Url","accept_result","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","fmt","fmt","fmt","frecency","from","from","from","from_adaptive_row","from_origin_row","from_suggestion_row","from_url_row","icon_url","into","into","into","limit","match_url","reasons","search_frecent","search_string","search_string","serialize","serialize","split_after_host_and_port","split_after_prefix","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","vzip","vzip","vzip","0","ConnectionType","GLOBAL_STATE_META_KEY","PlacesApi","ReadOnly","ReadWrite","Sync","SyncState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close_connection","disk_cached_state","do_sync_one","eq","fmt","from","from","from","from_primitive","get_registered_sync_engine","get_sync_connection","into","into","into","mem_cached_state","new","new_memory","open_connection","places_api_new","register_with_sync_manager","reset_bookmarks","reset_history","rusqlite_flags","sync","sync_bookmarks","sync_history","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wipe_bookmarks","Bookmark","BookmarksSyncEngine","Folder","Livemark","Query","Replace","Reupload","Separator","SyncedBookmarkKind","SyncedBookmarkValidity","Valid","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","engine","eq","eq","fmt","fmt","from","from","from","from_u8","from_u8","get_hash","get_hash","hash","hash","into","into","partial_cmp","partial_cmp","record","to_owned","to_owned","to_sql","to_sql","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BookmarksSyncEngine","COLLECTION_NAME","COLLECTION_SYNCID_META_KEY","GLOBAL_SYNCID_META_KEY","LAST_SYNC_META_KEY","apply_incoming","borrow","borrow_mut","collection_name","from","get_collection_requests","get_sync_assoc","into","new","reset","sync_finished","try_from","try_into","type_id","vzip","wipe","Bookmark","BookmarkItemRecord","BookmarkRecord","BookmarkRecordId","Folder","FolderRecord","Livemark","LivemarkRecord","Query","QueryRecord","Separator","SeparatorRecord","as_guid","as_payload_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","date_added","date_added","date_added","date_added","date_added","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","feed_url","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_payload_id","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","has_dupe","has_dupe","has_dupe","has_dupe","has_dupe","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into_payload_id","keyword","parent_record_id","parent_record_id","parent_record_id","parent_record_id","parent_record_id","parent_title","parent_title","parent_title","parent_title","parent_title","position","record_id","record_id","record_id","record_id","record_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","site_url","tag_folder_name","tags","title","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","GlobalChangeCounterTracker","PlacesDb","PlacesTransaction","SharedPlacesDb","borrow","borrow_mut","commit","conn","db","deref","from","into","maybe_commit","rollback","should_commit","try_from","try_into","type_id","vzip","GLOBAL_BOOKMARK_CHANGE_COUNTERS","GlobalChangeCounterTracker","MAX_VARIABLE_NUMBER","PlacesDb","PlacesInitializer","SharedPlacesDb","api_id","as_ref","begin_interrupt_scope","begin_interrupt_scope","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed","conn","conn_type","db","deref","deref","deref","drop","finish","fmt","from","from","from","from","from","global_bookmark_change_tracker","init","into","into","into","into","into","new","new","new_interrupt_handle","open","prepare","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upgrade_from","vzip","vzip","vzip","vzip","vzip","ApiResult","CannotUpdateRoot","ConnectionAlreadyOpen","Corruption","Corruption","Error","IllegalChange","IllegalDatabasePath","InterruptedError","InvalidBookmarkOperation","InvalidChildGuid","InvalidConnectionType","InvalidGuid","InvalidLocalRoots","InvalidMetadataObservation","InvalidMetadataObservation","InvalidParent","InvalidPlaceInfo","InvalidPlaceInfo","InvalidSyncedRoots","InvalidTag","IoError","JsonError","MergeError","MismatchedBookmarkType","MissingBookmarkKind","NoParent","NoSuchGuid","NoSuchUrl","NoUrl","NonRootWithoutParent","OpenDatabaseError","OperationInterrupted","PlacesApiError","PlacesConnectionBusy","Result","SqlError","SyncAdapterError","UnexpectedPlacesException","UnknownBookmarkItem","UnsupportedDatabaseVersion","UnsupportedSyncedBookmarkKind","UnsupportedSyncedBookmarkValidity","UrlParseError","UrlParseFailed","UrlTooLong","Utf8Error","ViewTimeTooLong","WrongApiForClose","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_error_handling","into","into","into","into","into","provide","provide","provide","provide","provide","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","reason","reason","reason","reason","reason","reason","Bookmark","Dummy","FrecencyThresholdOption","HistoryVisitInfo","HistoryVisitInfosWithBound","Keyword","MatchReason","None","Origin","PlacesConnection","PreviousUse","Result","SearchResult","SkipOneTimePages","Tags","TopFrecentSiteInfo","UrlMatch","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","clone","clone","clone_into","clone_into","eq","eq","ffi_places_aaee_rustbuffer_alloc","ffi_places_aaee_rustbuffer_free","ffi_places_aaee_rustbuffer_from_bytes","ffi_places_aaee_rustbuffer_reserve","frecency","from","from","from","from","from","from","from","from","from","from","infos","into","into","into","into","into","into","into","into","is_hidden","is_remote","new","offset","preview_image_url","reasons","timestamp","title","title","title","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","url","visit_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DEFAULT_FRECENCY_SETTINGS","FrecencySettings","bookmark_visit_bonus","borrow","borrow_mut","calculate_frecency","clone","clone_into","default","default_bucket_weight","default_visit_bonus","download_visit_bonus","embed_visit_bonus","eq","first_bucket_cutoff_days","first_bucket_weight","fmt","fourth_bucket_cutoff_days","fourth_bucket_weight","framed_link_visit_bonus","from","get_transition_bonus","into","link_visit_bonus","num_visits","permanent_redirect_visit_bonus","redirect_source_visit_bonus","reload_visit_bonus","second_bucket_cutoff_days","second_bucket_weight","temporary_redirect_visit_bonus","third_bucket_cutoff_days","third_bucket_weight","to_owned","try_from","try_into","type_id","typed_visit_bonus","unvisited_bookmark_bonus","unvisited_typed_bonus","vzip","Hi","Lo","PrefixMode","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash_string","hash_url","hash_url_prefix","into","to_owned","try_from","try_into","type_id","vzip","0","HISTORY_TTL","HistorySyncEngine","ServerVisitTimestamp","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","engine","eq","fmt","fmt","from","from","from","get_hash","hash","into","partial_cmp","record","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","COLLECTION_SYNCID_META_KEY","GLOBAL_SYNCID_META_KEY","HistorySyncEngine","LAST_SYNC_META_KEY","apply_incoming","borrow","borrow_mut","collection_name","db","from","get_collection_requests","get_sync_assoc","into","new","reset","sync_finished","try_from","try_into","type_id","vzip","wipe","HistoryRecord","HistoryRecordVisit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","date","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hist_uri","id","into","into","serialize","serialize","title","to_owned","to_owned","transition","try_from","try_from","try_into","try_into","type_id","type_id","visits","vzip","vzip","common","import_ios_bookmarks","import_ios_history","ios","ExecuteOnDrop","HistoryMigrationResult","NOW","attached_database","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","define_history_migration_functions","deref","drop","eq","execute_now","fmt","from","from","from","into","into","into","new","num_failed","num_succeeded","num_total","select_count","serialize","sql_fns","to_owned","total_duration","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","sanitize_float_timestamp","sanitize_integer_timestamp","sanitize_utf8","validate_url","bookmarks","history","import_bookmarks","import_history","Bookmark","Folder","IosBookmarkType","Separator","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","get_hash","hash","import","into","partial_cmp","to_owned","try_from","try_into","type_id","vzip","import","Anywhere","AnywhereUnmodified","AutocompleteMatch","BOOKMARK","Beginning","BeginningCaseSensitive","Boundary","BoundaryAnywhere","HISTORY","JAVASCRIPT","MatchBehavior","OPENPAGE","RESTRICT","SEARCHES","SearchBehavior","TAG","TITLE","TYPED","URL","all","any","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","bookmarked","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","column_result","column_result","complement","contains","default","difference","empty","eq","eq","extend","find_in_string","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","hash","insert","intersection","intersects","into","into","into","invoke","is_all","is_empty","match_behavior","not","open_page_count","partial_cmp","remove","search_behavior","search_str","set","sub","sub_assign","symmetric_difference","tags","title_str","to_owned","to_owned","to_sql","to_sql","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","typed","union","url_str","visit_count","vzip","vzip","vzip","VisitObservation","at","borrow","borrow_mut","fmt","from","get_is_hidden","get_redirect_frecency_boost","into","is_error","is_permanent_redirect_source","is_redirect_source","is_remote","new","preview_image_url","referrer","title","try_from","try_into","type_id","url","visit_type","vzip","with_at","with_is_error","with_is_permanent_redirect_source","with_is_redirect_source","with_is_remote","with_preview_image_url","with_referrer","with_title","with_visit_type","0","FetchedPageInfo","PageInfo","RowId","RunMaintenanceMetrics","TAG_LENGTH_MAX","TITLE_LENGTH_MAX","URL_LENGTH_MAX","bookmarks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","column_result","db_size_after","db_size_before","default","delete_pending_temp_tables","deserialize","eq","fetch_page_info","fmt","fmt","fmt","fmt","fmt","frecency","from","from","from","from","from_row","from_row","get_hash","guid","hash","hidden","history","history_metadata","into","into","into","into","last_visit_date_local","last_visit_date_remote","last_visit_id","page","partial_cmp","preview_image_url","pruned_visits","row_id","run_maintenance_checkpoint","run_maintenance_optimize","run_maintenance_prune","run_maintenance_vacuum","serialize","sync_change_counter","sync_status","tags","title","to_owned","to_sql","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","typed","update_all_frecencies_at_once","url","visit_count_local","visit_count_remote","vzip","vzip","vzip","vzip","Append","Bookmark","Bookmark","BookmarkPosition","BookmarkRootGuid","BookmarkUpdateInfo","Folder","Folder","InsertableBookmark","InsertableFolder","InsertableItem","InsertableSeparator","Menu","Mobile","None","Parent","Position","Root","Separator","Separator","Specific","Toolbar","USER_CONTENT_ROOTS","Unfiled","UpdatableBookmark","UpdatableFolder","UpdatableItem","UpdatableSeparator","UpdateTreeLocation","as_guid","as_str","bookmark_sync","bookmarks_get_url_for_keyword","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_bookmark_roots","date_added","date_added","date_added","default","default","default","delete_bookmark","delete_everything","eq","eq","eq","eq","eq","fetch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_guid","get_hash","guid","guid","guid","guid","guid","hash","insert_bookmark","into","into","into","into","into","into","into","into","into","into","into","into","into_updatable","json_tree","last_modified","last_modified","last_modified","location","location","location","location","maybe_truncate_title","parent_guid","parent_guid","parent_guid","parent_guid","partial_cmp","position","position","position","position","title","title","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_bookmark","update_bookmark_from_info","url","url","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","well_known","pos","b","f","s","b","f","s","guid","pos","pos","create_synced_bookmark_roots","Bookmark","BookmarkData","Folder","Folder","Item","RECENT_BOOKMARKS_QUERY","SEARCH_QUERY","Separator","Separator","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_guids","child_nodes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","date_added","date_added","date_added","date_added","default","deref","deref","fetch_bookmark","fetch_bookmarks_by_url","fetch_tree","fetch_tree_with_depth","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","guid","guid","guid","guid","into","into","into","into","into","into","last_modified","last_modified","last_modified","last_modified","parent_guid","parent_guid","parent_guid","parent_guid","position","position","position","position","recent_bookmarks","search_bookmarks","title","title","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","b","f","s","Bookmark","BookmarkNode","BookmarkTreeNode","Deepest","FetchDepth","Folder","FolderNode","Separator","SeparatorNode","Specific","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","created_modified","date_added","date_added","date_added","default","default","deserialize","fetch_tree","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","guid","guid","guid","guid","insert_tree","into","into","into","into","into","last_modified","last_modified","last_modified","node_type","serialize","title","title","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","b","f","s","0","apply_observation","apply_observation_direct","delete_everything","delete_place_visit_at_time","delete_place_visit_at_time_by_href","delete_visits_between","delete_visits_between_in_tx","delete_visits_for","frecency_stale_at","get_top_frecent_site_infos","get_visit_count","get_visit_infos","get_visit_page","get_visit_page_with_bound","get_visited","get_visited_into","get_visited_urls","history_sync","href_to_guid","prune_destructively","prune_older_visits","update_frecency","url_to_guid","wipe_local","FetchedVisit","FetchedVisitPage","apply_synced_deletion","apply_synced_reconciliation","apply_synced_visits","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fetch_outgoing","fetch_visits","finish_outgoing","fmt","fmt","from","from","from_row","from_row","guid","into","into","is_local","row_id","title","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","url","visit_date","visit_type","vzip","vzip","DocumentType","HistoryHighlight","HistoryHighlightWeights","HistoryMetadata","HistoryMetadataObservation","Media","Regular","apply_metadata_observation","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","column_result","created_at","delete_all_metadata_for_page","delete_between","delete_metadata","delete_older_than","document_type","document_type","eq","eq","eq","fmt","fmt","fmt","frequency","from","from","from","from","from","get_between","get_highlights","get_latest_for_url","get_since","into","into","into","into","into","place_id","preview_image_url","preview_image_url","query","referrer_url","referrer_url","score","search_term","search_term","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","total_view_time","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","updated_at","url","url","url","view_time","view_time","vzip","vzip","vzip","vzip","vzip","Invalid","Normalized","Original","ValidatedTag","borrow","borrow_mut","clone","clone_into","ensure_valid","eq","fmt","from","get_tags_for_url","get_urls_with_tag","into","is_original","remove_all_tags_from_url","remove_tag","tag_url","to_owned","try_from","try_into","type_id","untag_url","validate_tag","vzip","0","0","0","Bookmark","Bookmark","BookmarkType","Download","Embed","Folder","FramedLink","InvalidVisitType","Link","New","Normal","RedirectPermanent","RedirectTemporary","Reload","Separator","SyncStatus","Typed","Unknown","VisitTransition","VisitTransitionSet","all","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column_result","column_result","complement","contains","default","deserialize","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","for_specific","from","from","from","from","from","from_iter","from_primitive","from_u16","from_u8","from_u8","from_u8_with_valid_url","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","insert","into","into","into","into","into","into_iter","into_u16","is_empty","len","new","partial_cmp","partial_cmp","partial_cmp","provide","remove","serialize","serialize","single","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","to_sql","to_sql","to_sql","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":["places","","","","","","","","","","","","","","","","","","","","","places::api","","","","places::api::history","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::api::matcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::api::matcher::MatchReason","places::api::places_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::bookmark_sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::bookmark_sync::engine","","","","","","","","","","","","","","","","","","","","","places::bookmark_sync::recordplaces::bookmark_sync::record::BookmarkItemRecord","","","","","places::db","","","","","","","","","","","","","","","","","","","places::db::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::error::Corruption","","","places::error::Error","","","","","","","","","","","","","","","","places::error::InvalidPlaceInfo","","","","","","","places::error::PlacesApiError","","","","","","places::ffi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::frecency","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::hash","","","","","","","","","","","","","","","","","","","places::history_sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::history_sync::engine","","","","","","","","","","","","","","","","","","","","","places::history_sync::record","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::import","","","","places::import::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::import::common::sql_fns","","","","places::import::ios","","","","places::import::ios::bookmarks","","","","","","","","","","","","","","","","","","","","","","places::import::ios::history","places::match_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::observation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage::bookmarksplaces::storage::bookmarks::BookmarkPosition","places::storage::bookmarks::InsertableItem","","","places::storage::bookmarks::UpdatableItem","","","places::storage::bookmarks::UpdateTreeLocation","","","places::storage::bookmarks::bookmark_sync","places::storage::bookmarks::fetch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage::bookmarks::fetch::Item","","","places::storage::bookmarks::json_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage::bookmarks::json_tree::BookmarkTreeNode","","","places::storage::bookmarks::json_tree::FetchDepth","places::storage::history","","","","","","","","","","","","","","","","","","","","","","","","places::storage::history::history_sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage::history_metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage::tags","","","","","","","","","","","","","","","","","","","","","","","","","","places::storage::tags::ValidatedTag","","","places::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The match reason specifies why an autocomplete search …","","","","","","","","Records an accepted autocomplete match, recording the …","","","","","","","","","","","","","","","","","","A frecency score for this match.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Default search behaviors from Desktop: HISTORY, BOOKMARK, …","","","","The favicon URL.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","A list of reasons why this matched.","Synchronously queries all providers for autocomplete …","","The search string for this match.","","","","","The title of the autocompleted value, to show in the UI. …","","","","","","","","","","","","","The URL to open when the user confirms a match. This is …","","","","","","","The entry-point to the places API. This object gives …","","","","","","","","","","","","","Close a connection to the database. If the connection is …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new, or fetch an already open, PlacesApi backed …","Create a new, or fetch an already open, memory-based …","Open a connection to the database.","For uniffi we need to expose our <code>Arc</code> returning constructor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Synced item kinds. These are stored in …","Synced item validity states. These are stored in …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Erases all local items. Unlike <code>reset</code>, this keeps all …","","","","A bookmark record ID. Bookmark record IDs are the same as …","","","","","","","","","Returns a reference to the GUID for this record ID.","Returns a reference to the record payload ID. This is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Creates a bookmark record ID from a Sync record payload ID.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the record payload ID. This is the owned version of","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","High level transaction type which “does the right thing…","","","","Consumes and commits a PlacesTransaction transaction.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","For transactions on sync connnections: Checks to see if we …","Consumes and attempst to roll back a PlacesTransaction. …","Returns <code>true</code> if the current transaction should be …","","","","","","An object that can tell you whether a bookmark changing …","","","","PlacesDB that’s behind a Mutex so it can be shared …","","","","","Begin the “correct” transaction type for this …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an object that can tell you whether any changes …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error enum used internally","","","","Attempt to create/update/delete a bookmark item in an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Thrown when providing a guid to a create or update function","","","","","Thrown for invalid URLs","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Equivalent to <code>&quot;prefix_hi&quot;</code> in mozilla::places::HashURL","Equivalent to <code>&quot;prefix_lo&quot;</code> in mozilla::places::HashURL","","","","","","","","Returns the argument unchanged.","This should return identical results to <code>mozilla::HashString</code>…","This should be identical to the “real” …","This should be identical to the “real” …","Calls <code>U::from(self)</code>.","","","","","","","","","Visit timestamps on the server are <em>microseconds</em> since the …","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","We use/abuse the mirror to perform our import, but need to …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","This import is used for iOS sync users migrating from …","Calls <code>U::from(self)</code>.","","","","","","","This import is used for iOS users migrating from <code>browser.db</code>…","","Match anywhere in each searchable term without doing any …","","Search through bookmarks.","Match only the beginning of each search term.","Match only the beginning of each search term using a case …","Match on word boundaries in each searchable term.","Match first on word boundaries, and if we do not get …","Search through history.","Search for javascript: urls","","Search for open pages (currently not meaningfully …","Use intersection between history, typed, bookmark, tag and …","Include search suggestions from the currently selected …","","Search through tags.","Search through the title of pages.","Search for typed pages","Search the URL of pages.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","An “observation” based model for updating history. You …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","From …","","","","","","","","","","","","","","","","","Delete all items in the temp tables we use for staging …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Run maintenance on the places DB (checkpoint step)","Run maintenance on the places DB (optimize step)","Run maintenance on the places DB (prune step)","Run maintenance on the places DB (vacuum step)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special GUIDs associated with bookmark roots. It’s …","We don’t require bookmark type for updates on the other …","","","Structures which can be used to insert a bookmark, folder …","","","","","","","","","","","","","","","","Structures which can be used to update a bookmark, folder …","","","","Support for modifying bookmarks, including changing the …","","","","Get the URL of the bookmark matching a keyword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete the specified bookmark. Returns true if a bookmark …","Erases all bookmarks and resets all Sync metadata.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The functions exposed over the FFI use the same type for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets up the syncable roots. All items in …","","Structs we return when reading bookmarks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is similar to fetch_tree, but does not recursively …","","Call fetch_tree_with_depth with FetchDepth::Deepest. This …","Call fetch_tree with a depth parameter and convert the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the tree starting at the specified guid. Returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the RowId of a new visit in moz_historyvisits, or …","Returns the RowId of a new visit in moz_historyvisits, or …","","","","Delete all visits in a date range.","","Deletes all visits for a page given its GUID, creating …","Indicates if and when a URL’s frecency was marked as …","","","","","","","Low level api used to implement both get_visited and the …","Get the set of urls that were visited between <code>start</code> and <code>end</code>…","","Returns the GUID for the specified Url String, or None if …","","","","Returns the GUID for the specified Url, or None if it doesn…","","","","","","Apply history visit from sync. This assumes they have all …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete all metadata for the specified place id.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tag is invalid.","The tag is valid, but normalized to remove leading and …","The original tag is valid.","The validity of a tag.","","","","","Returns the tag string if the tag is valid or normalized, …","","","Returns the argument unchanged.","Retrieves a list of tags for the specified URL.","Retrieves a list of URLs which have the specified tag.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the original tag is valid; <code>false</code> if it’s …","Remove all tags from the specified URL.","Remove the specified tag from all URLs.","Tags the specified URL.","","","","","Remove the specified tag from the specified URL.","Checks the validity of the specified tag.","","","","","","","Bookmark types.","","","","","","","","","","","","","Re SyncStatus - note that:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,6,7,10,6,7,10,6,0,6,6,10,6,7,10,6,7,10,6,0,7,10,6,10,6,10,7,6,10,7,10,6,7,10,6,7,10,6,7,0,7,7,10,6,18,18,0,0,18,18,0,0,0,18,18,0,17,18,19,17,18,19,17,18,19,17,18,19,18,19,17,18,19,19,17,18,19,19,19,19,19,19,17,18,19,17,0,19,0,17,19,18,19,0,0,19,17,18,19,17,18,19,17,18,19,17,18,19,19,17,18,19,167,0,0,0,23,23,23,0,168,24,23,168,24,23,23,23,24,168,24,23,23,168,24,23,23,0,24,168,24,23,168,24,24,24,0,24,24,24,23,24,24,24,23,168,24,23,168,24,23,168,24,23,168,24,23,24,38,0,38,38,38,39,39,38,0,0,39,38,39,38,39,38,39,38,39,38,39,0,38,39,38,39,38,38,39,38,39,38,39,38,39,38,39,38,39,0,38,39,38,39,38,39,38,39,38,39,38,39,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,60,0,0,0,60,0,60,0,60,0,60,0,54,54,54,55,56,57,58,59,60,54,55,56,57,58,59,60,57,54,55,56,57,58,59,60,54,55,56,57,58,59,60,55,56,57,58,59,54,55,56,57,58,59,60,54,55,56,57,58,59,60,58,54,55,56,57,58,59,60,54,54,55,56,57,58,59,60,60,60,60,60,60,54,54,55,56,57,58,59,60,55,56,57,58,59,54,55,56,57,58,59,60,54,55,56,57,58,59,60,54,55,55,56,57,58,59,55,56,57,58,59,59,55,56,57,58,59,54,55,56,57,58,59,60,58,56,55,55,56,57,58,54,55,56,57,58,59,60,54,55,56,57,58,59,60,54,55,56,57,58,59,60,54,55,56,57,58,59,60,55,56,54,55,56,57,58,59,60,169,170,171,172,173,0,0,0,0,63,63,63,63,0,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,0,1,30,30,1,1,72,30,68,70,1,72,30,68,70,1,68,1,1,1,30,70,1,1,72,1,72,30,68,70,1,1,72,72,30,68,70,1,30,68,1,1,72,72,30,68,70,1,72,30,68,70,1,72,30,68,70,1,72,72,30,68,70,1,0,78,77,0,77,0,78,77,77,76,78,77,78,79,0,77,78,0,77,79,78,77,77,77,78,77,79,78,78,78,79,77,76,0,76,0,77,77,76,76,77,77,77,77,76,78,77,80,77,76,77,78,79,80,76,77,78,79,80,76,76,77,77,78,78,79,79,80,80,76,77,77,77,77,77,77,77,77,77,77,77,77,77,78,79,80,77,76,77,78,79,80,76,77,78,79,80,77,76,77,78,79,80,76,77,78,79,80,76,77,78,79,80,76,77,78,79,80,76,77,78,79,80,174,175,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,194,195,197,198,199,200,201,202,102,0,0,0,0,102,0,203,102,0,102,0,0,203,102,0,102,94,94,152,203,101,102,204,95,96,94,152,203,101,102,204,95,96,96,95,96,95,96,95,96,0,0,0,0,101,94,152,203,101,101,102,102,204,95,96,96,94,152,203,101,102,204,95,96,95,95,94,96,95,101,95,152,101,95,95,96,94,152,203,101,102,204,95,96,94,152,203,101,102,204,95,96,94,152,203,101,102,204,95,96,152,101,95,95,94,152,203,101,102,204,95,96,0,0,103,103,103,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,105,105,0,105,105,105,105,105,105,105,0,0,0,105,105,105,105,105,105,106,0,0,0,106,106,106,106,106,106,106,0,106,106,106,106,106,106,106,106,106,106,0,106,106,106,106,106,106,106,0,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,0,110,111,110,111,110,111,110,111,110,110,110,111,110,111,110,111,110,111,110,111,110,111,111,111,110,111,110,111,111,110,111,110,110,111,110,111,110,111,111,110,111,0,0,0,0,0,0,0,0,112,114,113,112,114,113,113,113,113,0,114,112,113,112,113,112,114,113,112,114,113,112,113,113,113,0,113,0,113,113,112,114,113,112,114,113,112,114,113,112,114,113,0,0,0,0,0,0,0,0,116,116,0,116,116,116,116,116,116,116,116,116,116,116,0,116,116,116,116,116,116,116,0,118,118,0,117,118,118,118,118,117,117,0,117,117,117,0,117,117,117,117,117,117,117,117,117,117,117,117,117,122,122,118,117,122,118,117,118,117,118,117,117,118,117,117,117,117,117,117,118,117,117,0,118,117,117,117,117,117,122,118,117,117,117,117,117,117,117,117,117,117,122,118,117,122,117,117,122,117,122,117,117,122,122,117,117,117,117,122,122,118,117,118,117,117,122,118,117,122,118,117,122,118,117,122,117,122,122,122,118,117,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,124,0,0,0,0,0,0,0,0,124,126,125,127,124,126,125,127,124,124,124,124,127,127,124,0,124,124,0,124,124,126,125,127,126,124,126,125,127,126,125,124,126,124,126,0,0,124,126,125,127,126,126,125,125,124,126,127,126,0,0,0,0,124,126,126,0,126,124,124,124,124,126,125,127,124,126,125,127,124,126,125,127,126,0,126,126,126,124,126,125,127,129,133,138,0,0,0,133,138,0,0,0,0,128,128,134,134,134,128,133,138,129,128,0,128,0,0,0,0,0,128,128,0,0,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,131,132,133,134,135,136,137,138,139,132,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,131,132,133,134,135,136,137,138,139,0,130,131,132,134,135,137,0,0,128,128,128,128,139,0,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,131,132,133,133,133,133,133,134,135,136,137,138,138,138,138,139,128,128,128,130,131,132,139,128,0,128,129,130,131,132,133,134,135,136,137,138,139,139,0,130,131,132,138,135,136,137,0,130,131,132,139,128,130,131,132,139,130,132,135,137,139,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,131,132,133,134,135,136,137,138,139,0,0,130,135,139,128,129,130,131,132,133,134,135,136,137,138,139,128,205,206,207,208,209,210,211,212,213,212,0,145,0,0,145,0,0,0,0,145,142,143,144,145,146,147,142,143,144,145,146,147,144,144,142,143,144,145,142,143,144,145,145,142,143,144,144,146,147,0,0,0,0,142,143,144,145,142,143,144,145,145,145,145,146,147,145,142,143,144,142,143,144,145,146,147,145,142,143,144,145,142,143,144,145,142,143,144,0,0,142,144,142,143,144,145,142,143,144,145,146,147,142,143,144,145,146,147,142,143,144,145,146,147,142,142,143,144,145,146,147,214,215,216,140,0,0,148,0,140,0,140,0,148,148,151,149,150,140,148,151,149,150,140,150,140,151,149,150,149,150,140,0,151,149,150,140,148,151,149,150,140,140,140,140,140,151,149,150,0,148,151,149,150,140,151,149,150,140,140,151,150,148,151,149,150,140,148,151,149,150,140,148,151,149,150,140,151,148,151,149,150,140,217,218,219,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,156,154,156,154,154,154,0,0,0,154,156,154,156,154,156,156,154,156,154,156,156,154,154,156,154,156,154,156,156,154,154,154,156,0,0,0,0,0,158,158,0,158,159,160,157,161,158,159,160,157,161,158,159,160,157,161,158,159,160,157,161,158,161,0,0,0,0,157,161,158,157,161,158,157,161,159,158,159,160,157,161,0,0,0,0,158,159,160,157,161,160,160,161,0,157,161,160,157,161,160,157,161,158,159,160,157,161,158,161,158,159,160,157,161,158,159,160,157,161,158,159,160,157,161,161,160,157,161,159,157,158,159,160,157,161,162,162,162,0,162,162,162,162,162,162,162,162,0,0,162,162,0,0,0,162,162,162,162,0,0,162,221,222,223,15,141,0,15,15,141,15,0,15,164,164,15,15,15,141,0,15,164,0,0,153,153,163,15,141,164,153,163,15,141,164,153,163,15,141,164,153,163,15,141,164,163,141,164,141,164,153,153,153,15,153,153,163,15,141,164,153,153,163,163,15,141,164,153,153,163,15,141,164,153,15,153,141,164,141,153,15,141,164,153,15,141,164,153,153,163,15,141,164,153,153,153,153,153,163,141,164,163,153,15,141,153,153,163,15,141,164,153,15,141,164,163,153,153,163,15,15,141,164,153,163,15,141,164,153,163,15,141,164,153,163,15,141,164],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[4,[[3,[5]]]],[6,6],[[]],0,[[6,6],5],[[7,8],9],[[10,8],9],[[6,8],9],[[]],[[]],[[]],[[1,7],3],[[]],[[]],[[]],0,[[6,6],[[12,[11]]]],0,0,[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],0,[[1,4,[12,[4]],15,[12,[6]],5],3],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[1,16,4],3],[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[18,18],5],[[19,19],5],[[17,8],9],[[18,8],9],[[19,8],9],0,[[]],[[]],[[]],[20,[[3,[19]]]],[20,[[3,[19]]]],[20,[[3,[19]]]],[20,[[3,[19]]]],0,[[]],[[]],[[]],0,[[1,[21,[16]]],[[3,[[12,[4]]]]]],0,[[1,17],[[3,[[22,[19]]]]]],0,0,[18,13],[19,13],[16],[16],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[[]],[[24,1],3],0,[[24,16],[[3,[25]]]],[[23,23],5],[[23,8],9],[[]],[[]],[[]],[26,[[12,[23]]]],[27,[[12,[[29,[28]]]]]],[24,[[3,[[31,[30]]]]]],[[]],[[]],[[]],0,[[[21,[32]]],[[3,[[31,[24]]]]]],[16,[[3,[[31,[24]]]]]],[[24,23],[[3,[1]]]],[[[21,[32]]],[[33,[[31,[24]]]]]],[[[31,[24]]]],[24,3],[24,33],[23,34],[[24,35,36],[[3,[37]]]],[[24,35,36],[[3,[25]]]],[[24,35,36],[[3,[25]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[24,3],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[38,38],[39,39],[[]],[[]],[[38,38],11],[[39,39],11],0,[[38,38],5],[[39,39],5],[[38,8],9],[[39,8],9],[[]],[40,38],[[]],[26,[[3,[38]]]],[26,[[3,[39]]]],[[],41],[[],41],[38],[39],[[]],[[]],[[38,38],[[12,[11]]]],[[39,39],[[12,[11]]]],0,[[]],[[]],[38,[[43,[42]]]],[39,[[43,[42]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,[[44,[22,[45]],46],[[48,[47]]]],[[]],[[]],[44,[[49,[16]]]],[[]],[[44,50],[[48,[[22,[51]]]]]],[44,[[48,[52]]]],[[]],[[[31,[30]]],[[3,[44]]]],[[44,52],48],[[44,50,[22,[53]]],48],[[],13],[[],13],[[],14],[[]],[44,48],0,0,0,0,0,0,0,0,0,0,0,0,[54,53],[54,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[61,[[13,[54]]]],[[],[[13,[55]]]],[[],[[13,[56]]]],[[],[[13,[57]]]],[[],[[13,[58]]]],[[],[[13,[59]]]],[[],[[13,[60]]]],[[54,54],5],[[55,55],5],[[56,56],5],[[57,57],5],[[58,58],5],[[59,59],5],[[60,60],5],0,[[54,8],9],[[55,8],9],[[56,8],9],[[57,8],9],[[58,8],9],[[59,8],9],[[60,8],9],[[]],[53,54],[[]],[[]],[[]],[[]],[[]],[59,60],[58,60],[56,60],[55,60],[57,60],[[]],[53,54],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,0,0,0,[54],[55],[56],[57],[58],[59],[60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,53],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[54,62],13],[55,13],[56,13],[57,13],[58,13],[59,13],[60,13],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[63,3],[63,64],0,[63,64],[[]],[[]],[63,3],[63,3],[63,5],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,[1,65],[30,66],[30,[[3,[67]]]],[1,[[3,[67]]]],[1,[[3,[63]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,5],[1,64],[1,23],0,[30,69],[70,71],[1,64],[1],[[72,64],73],[[1,8],9],[[]],[[]],[[]],[[]],[[]],[1,68],[[72,74],73],[[]],[[]],[[]],[[]],[[]],[1,30],[65,68],[1,[[31,[66]]]],[[[21,[32]],23,65,[31,[69]]],[[3,[1]]]],[[72,64,5],73],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[72,74,75],73],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,8],9],[[76,8],9],[[77,8],9],[[77,8],9],[[78,8],9],[[78,8],9],[[79,8],9],[[79,8],9],[[80,8],9],[[80,8],9],[[]],[81,77],[[]],[82,77],[83,77],[84,77],[79,77],[78,77],[85,77],[86,77],[87,77],[80,77],[88,77],[89,77],[[]],[[]],[[]],[77,90],[[]],[[]],[[]],[[]],[[]],[91],[91],[91],[91],[91],[77,[[12,[92]]]],[[],93],[[],93],[[],93],[[],93],[[],93],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[94,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[95,95],[96,96],[[]],[[]],[[95,95],5],[[96,96],5],[[97,98],99],[[99,98]],[[100,98],99],[[99,97,98],99],0,[[]],[[]],[[]],[[]],[19,101],[18,102],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,94],0,0,0,0,0,0,0,[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[64,103,104,[12,[5]]],[[3,[97]]]],[103,103],[[]],[[],103],0,0,0,0,[[103,103],5],0,0,[[103,8],9],0,0,0,[[]],[[103,[12,[15]],5,5],97],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[],13],[[],13],[[],14],0,0,0,[[]],0,0,0,[[]],[[]],[105,105],[[]],[[105,105],5],[[105,8],9],[[]],[16,75],[16,41],[[16,105],41],[[]],[[]],[[],13],[[],13],[[],14],[[]],0,0,0,0,[[]],[[]],[106,106],[[]],[[106,106],11],[[],106],[[],[[13,[106]]]],0,[[106,106],5],[[106,8],9],[[106,8],9],[107,106],[108,106],[[]],[[],41],[106],[[]],[[106,106],[[12,[11]]]],0,[106,13],[[]],[[],93],[[],13],[[],13],[[],14],[[]],0,0,0,0,[[109,[22,[45]],46],[[48,[47]]]],[[]],[[]],[109,[[49,[16]]]],0,[[]],[[109,50],[[48,[[22,[51]]]]]],[109,[[48,[52]]]],[[]],[[[31,[30]]],[[3,[109]]]],[[109,52],48],[[109,50,[22,[53]]],48],[[],13],[[],13],[[],14],[[]],[109,48],0,0,[[]],[[]],[[]],[[]],[110,110],[111,111],[[]],[[]],0,[[],110],[[],[[13,[110]]]],[[],[[13,[111]]]],[[110,110],5],[[111,111],5],[[110,8],9],[[111,8],9],[[]],[[]],[[],41],[[],41],[110],[111],0,0,[[]],[[]],[110,13],[111,13],0,[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,[[]],[[]],0,0,0,0,0,0,0,[[1,4,16],[[3,[112]]]],[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[[]],[[],113],[64,3],[114,107],[112],[[113,113],5],[112,3],[[113,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[1,93],112],0,0,0,[[1,16],[[3,[75]]]],[113,13],0,[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[115,[[43,[107]]]],[115,[[43,[107]]]],[115,[[43,[[12,[93]]]]]],[115,[[43,[[12,[93]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[116,116],[[]],[[116,116],11],[[116,116],5],[[116,8],9],[[]],[[],41],[116],[[24,[21,[32]]],3],[[]],[[116,116],[[12,[11]]]],[[]],[[],13],[[],13],[[],14],[[]],[[1,[21,[32]],104],[[3,[113]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],117],[[],117],[[117,117],117],[[117,117]],[[117,117],117],[[117,117]],[117,75],[[117,117],117],[[117,117]],0,[[]],[[]],[[]],[[]],[[]],[[]],[118,118],[117,117],[[]],[[]],[[117,117],11],[119,[[120,[118]]]],[119,[[120,[117]]]],[117,117],[[117,117],5],[[],117],[[117,117],117],[[],117],[[118,118],5],[[117,117],5],[[117,121]],[[16,16,5],5],[[118,8],9],[[117,8],9],[[117,8],9],[[117,8],9],[[117,8],9],[[117,8],9],[[]],[[]],[[]],[75,[[12,[117]]]],[75,117],[75,117],[121,117],[[],41],[117],[[117,117]],[[117,117],117],[[117,117],5],[[]],[[]],[[]],[122,5],[117,5],[117,5],0,[117,117],0,[[117,117],[[12,[11]]]],[[117,117]],0,0,[[117,117,5]],[[117,117],117],[[117,117]],[[117,117],117],0,0,[[]],[[]],[118,[[43,[42]]]],[117,[[43,[42]]]],[[117,117]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],0,[[117,117],117],0,0,[[]],[[]],[[]],0,0,[[]],[[]],[[2,8],9],[[]],[2,5],[2,5],[[]],0,0,0,0,[4,2],0,0,0,[[],13],[[],13],[[],14],0,0,[[]],[[2,[123,[[12,[107]]]]],2],[[2,[123,[[12,[5]]]]],2],[[2,[123,[[12,[5]]]]],2],[[2,[123,[[12,[5]]]]],2],[[2,[123,[[12,[5]]]]],2],[[2,[123,[[12,[4]]]]],2],[[2,[123,[[12,[4]]]]],2],[[2,[123,[[12,[93]]]]],2],[[2,[123,[[12,[15]]]]],2],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[[]],[[124,124],11],[119,[[120,[124]]]],0,0,[[],124],[1,3],[[],[[13,[124]]]],[[124,124],5],[[1,4],[[3,[[12,[125]]]]]],[[124,8],9],[[124,8],9],[[126,8],9],[[125,8],9],[[127,8],9],0,[[]],[[]],[[]],[[]],[20,[[3,[126]]]],[20,[[3,[125]]]],[[],41],0,[124],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[124,124],[[12,[11]]]],0,0,0,[1,3],[1,3],[[1,75],[[3,[127]]]],[1,3],[124,13],0,0,0,0,[[]],[124,[[43,[42]]]],[[],93],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],0,[[1,67],3],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[128,53],[128,16],0,[[1,16],[[3,[[12,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,43],0,0,0,[[],134],[[],135],[[],137],[[1,53],[[3,[5]]]],[1,3],[[128,53],5],[[128,16],5],[[128,128],5],[[128,53],5],[[139,139],5],0,[[128,8],9],[[129,8],9],[[130,8],9],[[131,8],9],[[132,8],9],[[133,8],9],[[134,8],9],[[135,8],9],[[136,8],9],[[137,8],9],[[138,8],9],[[139,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[140,133],[132,133],[131,133],[130,133],[[]],[[]],[[]],[[]],[[]],[137,138],[135,138],[136,138],[[]],[53,[[12,[128]]]],[[],41],[128,53],0,0,0,0,[128],[[1,133],[[3,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[139,141],3],0,0,0,0,[138,134],0,0,0,[12,[[12,[16]]]],0,0,0,0,[[128,128],[[12,[11]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[1,53,138],3],[[1,139],3],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[12,[128]]]],0,0,0,0,0,0,0,0,0,0,[64,43],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[142,142],[143,143],[144,144],[145,145],[[]],[[]],[[]],[[]],[145,107],0,0,0,[[],144],[146,93],[147,93],[[1,53,5],[[3,[[12,[145]]]]]],[[1,4],[[3,[[22,[142]]]]]],[[1,53],[[3,[[12,[145]]]]]],[[1,53,148],[[3,[[12,[145]]]]]],[[142,8],9],[[143,8],9],[[144,8],9],[[145,8],9],[[]],[[]],[[]],[144,145],[143,145],[[]],[142,145],[[]],[[]],[145,53],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[145,107],0,0,0,[145,[[12,[53]]]],0,0,0,[145,75],0,0,0,[[1,75],[[3,[[22,[142]]]]]],[[1,16,75],[[3,[[22,[142]]]]]],0,0,[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[140],0,0,0,[[],149],[[],150],[[],[[13,[140]]]],[[1,53,148],[[3,[12]]]],[[151,8],9],[[149,8],9],[[150,8],9],[[140,8],9],[[]],[[]],[[]],[[]],[151,140],[149,140],[150,140],[[]],[140,53],0,0,0,[[1,150],3],[[]],[[]],[[]],[[]],[[]],0,0,0,[140,141],[140,13],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[1,2],[[3,[[12,[124]]]]]],[[1,2],[[3,[[12,[124]]]]]],[1,3],[[1,4,107],3],[[1,16,107],3],[[1,107,107],3],[[1,107,107],3],[[1,53],3],[[1,4],[[3,[[12,[107]]]]]],[[1,97,104],[[3,[[22,[152]]]]]],[[1,153],[[3,[104]]]],[[1,107,107,153],[[3,[[22,[95]]]]]],[[1,104,104,153],[[3,[[22,[95]]]]]],[[1,104,104,104,153],[[3,[96]]]],[1,[[3,[[22,[5]]]]]],[1,3],[[1,107,107,5],[[3,[[22,[93]]]]]],0,[[1,16],[[3,[[12,[53]]]]]],[1,3],[1,3],[[1,124,[12,[5]]],3],[[1,4],[[3,[[12,[53]]]]]],[1,3],0,0,[[1,53],3],[[1,53],3],[[1,53,4,12],3],[[]],[[]],[[]],[[]],[154,154],[[]],[[154,154],5],[[1,65,65],[[3,[[22,[155]]]]]],[[1,4,65],[[3,[12]]]],[1,3],[[154,8],9],[[156,8],9],[[]],[[]],[20,[[3,[154]]]],[20,[[3,[156]]]],0,[[]],[[]],0,0,0,[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[1,157],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[158,158],[159,159],[160,160],[157,157],[161,161],[[]],[[]],[[]],[[]],[[]],[119,[[120,[158]]]],0,[[1,124],3],[[1,104,104],3],[[1,4,[12,[4]],[12,[16]]],3],[[1,104],3],0,0,[[158,158],5],[[157,157],5],[[161,161],5],[[158,8],9],[[157,8],9],[[161,8],9],0,[[]],[[]],[[]],[[]],[[]],[[1,104,104],[[3,[[22,[161]]]]]],[[1,159,97],[[3,[[22,[160]]]]]],[[1,4],[[3,[[12,[161]]]]]],[[1,104],[[3,[[22,[161]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[1,16,97],[[3,[[22,[161]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[158,[[43,[42]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[162,162],[[]],[162,[[3,[16]]]],[[162,162],5],[[162,8],9],[[]],[[1,4],[[3,[[22,[93]]]]]],[[1,16],[[3,[[22,[4]]]]]],[[]],[162,5],[[1,4],3],[[1,16],3],[[1,4,16],3],[[]],[[],13],[[],13],[[],14],[[1,4,16],3],[16,162],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,153],[163,163],[15,15],[141,141],[164,164],[[]],[[]],[[]],[[]],[[]],[[163,163],11],[[141,141],11],[[164,164],11],[119,[[120,[141]]]],[119,[[120,[164]]]],[153,153],[[153,15],5],[[],153],[61,[[13,[15]]]],[[],153],[[153,153],5],[[163,163],5],[[15,15],5],[[141,141],5],[[164,164],5],[153],[[153,8],9],[[163,8],9],[[163,8],9],[[15,8],9],[[141,8],9],[[164,8],9],[[],153],[[]],[[]],[[]],[[]],[[]],[[],153],[26,[[12,[15]]]],[165,[[13,[153,163]]]],[26,[[12,[141]]]],[26,164],[[26,166],141],[[],41],[[],41],[[],41],[[],41],[153],[15],[141],[164],[[153,15]],[[]],[[]],[[]],[[]],[[]],0,[153,165],[153,5],[153,65],[[],153],[[163,163],[[12,[11]]]],[[141,141],[[12,[11]]]],[[164,164],[[12,[11]]]],[91],[[153,15]],[[15,62],13],[141,13],[15,153],[[]],[[]],[[]],[[]],[[]],[153,[[43,[42]]]],[15,[[43,[42]]]],[141,[[43,[42]]]],[164,[[43,[42]]]],[[],93],[165,[[13,[153,163]]]],[[],13],[[],13],[26,[[13,[15]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"PlacesDb"],[3,"VisitObservation"],[6,"Result"],[3,"Url"],[15,"bool"],[4,"RedirectSourceType"],[3,"AddablePlaceInfo"],[3,"Formatter"],[6,"Result"],[3,"AddableVisit"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[4,"VisitTransition"],[15,"str"],[3,"SearchParams"],[4,"MatchReason"],[3,"SearchResult"],[3,"Row"],[8,"AsRef"],[3,"Vec"],[4,"ConnectionType"],[3,"PlacesApi"],[3,"SyncTelemetryPing"],[15,"u8"],[4,"SyncEngineId"],[8,"SyncEngine"],[3,"Box"],[3,"SharedPlacesDb"],[3,"Arc"],[3,"Path"],[6,"ApiResult"],[3,"OpenFlags"],[3,"Sync15StorageClientInit"],[3,"KeyBundle"],[3,"SyncResult"],[4,"SyncedBookmarkKind"],[4,"SyncedBookmarkValidity"],[4,"Kind"],[15,"u64"],[4,"ToSqlOutput"],[6,"Result"],[3,"BookmarksSyncEngine"],[6,"IncomingChangeset"],[3,"Engine"],[6,"OutgoingChangeset"],[6,"Result"],[4,"Cow"],[3,"ServerTimestamp"],[3,"CollectionRequest"],[4,"EngineSyncAssociation"],[3,"Guid"],[3,"BookmarkRecordId"],[3,"BookmarkRecord"],[3,"QueryRecord"],[3,"FolderRecord"],[3,"LivemarkRecord"],[3,"SeparatorRecord"],[4,"BookmarkItemRecord"],[8,"Deserializer"],[8,"Serializer"],[3,"PlacesTransaction"],[3,"Connection"],[15,"usize"],[3,"SqlInterruptHandle"],[3,"SqlInterruptScope"],[3,"GlobalChangeCounterTracker"],[6,"Mutex"],[3,"GLOBAL_BOOKMARK_CHANGE_COUNTERS"],[3,"RwLock"],[3,"PlacesInitializer"],[6,"Result"],[3,"Transaction"],[15,"u32"],[4,"PlacesApiError"],[4,"Error"],[4,"InvalidPlaceInfo"],[4,"Corruption"],[4,"InvalidMetadataObservation"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"Error"],[3,"Error"],[3,"Utf8Error"],[4,"Error"],[3,"Interrupted"],[4,"ParseError"],[3,"ErrorHandling"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"PlacesConnection"],[3,"HistoryVisitInfo"],[3,"HistoryVisitInfosWithBound"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"SearchResult"],[4,"MatchReason"],[3,"FrecencySettings"],[15,"i64"],[4,"PrefixMode"],[3,"ServerVisitTimestamp"],[3,"Timestamp"],[3,"SystemTime"],[3,"HistorySyncEngine"],[3,"HistoryRecordVisit"],[3,"HistoryRecord"],[3,"ExecuteOnDrop"],[3,"HistoryMigrationResult"],[3,"NOW"],[3,"Context"],[4,"IosBookmarkType"],[3,"SearchBehavior"],[4,"MatchBehavior"],[4,"ValueRef"],[6,"FromSqlResult"],[8,"IntoIterator"],[3,"AutocompleteMatch"],[8,"Into"],[3,"RowId"],[3,"FetchedPageInfo"],[3,"PageInfo"],[3,"RunMaintenanceMetrics"],[4,"BookmarkRootGuid"],[4,"BookmarkPosition"],[3,"InsertableBookmark"],[3,"InsertableSeparator"],[3,"InsertableFolder"],[4,"InsertableItem"],[4,"UpdateTreeLocation"],[3,"UpdatableBookmark"],[3,"UpdatableSeparator"],[3,"UpdatableFolder"],[4,"UpdatableItem"],[3,"BookmarkUpdateInfo"],[4,"BookmarkTreeNode"],[4,"BookmarkType"],[3,"BookmarkData"],[3,"Separator"],[3,"Folder"],[4,"Item"],[3,"SEARCH_QUERY"],[3,"RECENT_BOOKMARKS_QUERY"],[4,"FetchDepth"],[3,"SeparatorNode"],[3,"FolderNode"],[3,"BookmarkNode"],[3,"TopFrecentSiteInfo"],[3,"VisitTransitionSet"],[3,"FetchedVisit"],[3,"OutgoingBso"],[3,"FetchedVisitPage"],[3,"HistoryMetadataObservation"],[4,"DocumentType"],[3,"HistoryHighlightWeights"],[3,"HistoryHighlight"],[3,"HistoryMetadata"],[4,"ValidatedTag"],[3,"InvalidVisitType"],[4,"SyncStatus"],[15,"u16"],[8,"Fn"],[13,"Tags"],[3,"SyncState"],[13,"Bookmark"],[13,"Query"],[13,"Folder"],[13,"Livemark"],[13,"Separator"],[13,"NoParent"],[13,"NonRootWithoutParent"],[13,"InvalidPlaceInfo"],[13,"Corruption"],[13,"SyncAdapterError"],[13,"MergeError"],[13,"JsonError"],[13,"SqlError"],[13,"UrlParseError"],[13,"IoError"],[13,"InterruptedError"],[13,"UnsupportedSyncedBookmarkKind"],[13,"UnsupportedSyncedBookmarkValidity"],[13,"IllegalDatabasePath"],[13,"Utf8Error"],[13,"UnsupportedDatabaseVersion"],[13,"OpenDatabaseError"],[13,"InvalidMetadataObservation"],[13,"InvalidParent"],[13,"NoSuchGuid"],[13,"MismatchedBookmarkType"],[13,"IllegalChange"],[13,"CannotUpdateRoot"],[13,"UnexpectedPlacesException"],[13,"UrlParseFailed"],[13,"PlacesConnectionBusy"],[13,"OperationInterrupted"],[13,"UnknownBookmarkItem"],[13,"InvalidBookmarkOperation"],[4,"FrecencyThresholdOption"],[3,"Dummy"],[13,"Specific"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Parent"],[13,"Position"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Specific"],[13,"Invalid"],[13,"Normalized"],[13,"Original"]]},\
"protobuf_gen":{"doc":"","t":[3,11,11,11,12,11,11,11,5,12,11,11,11],"n":["ProtobufOpts","borrow","borrow_mut","deserialize","dir","fmt","from","into","main","out_dir","try_from","try_into","type_id"],"q":["protobuf_gen","","","","","","","","","","","",""],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1],"f":[0,[[]],[[]],[[],[[2,[1]]]],0,[[1,3],4],[[]],[[]],[[]],0,[[],2],[[],2],[[],5]],"p":[[3,"ProtobufOpts"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"push":{"doc":"Rust Push Component","t":[13,13,13,4,13,13,8,13,3,13,13,3,6,8,13,3,13,13,3,4,3,3,13,13,13,13,3,3,13,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,10,10,11,12,12,12,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,5,10,10,11,10,10,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,10,12,12,12,12,10,10,10,10,12,11,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,10,11,11,10,11,11,10,10,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Adm","AlreadyRegisteredError","Apns","BridgeType","CommunicationError","CommunicationServerError","Connection","CryptoError","DispatchInfo","Fcm","GeneralError","InternalPushManager","InternalResult","InternalStorage","JSONDeserializeError","KeyInfo","MissingRegistrationTokenError","OpenDatabaseError","PushConfiguration","PushError","PushManager","PushSubscriptionChanged","RecordNotFoundError","RequestError","StorageError","StorageSqlError","SubscriptionInfo","SubscriptionResponse","Test","TranscodingError","UAIDNotRecognizedError","UrlParseError","app_server_key","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_type","broadcast_subscribe","broadcasts","channel_id","channel_id","channel_list","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","database_path","decrypt","decrypt","default","delete_all_records","delete_record","dispatch_info_for_chid","enabled","endpoint","endpoint","eq","ffi_push_fec3_rustbuffer_alloc","ffi_push_fec3_rustbuffer_free","ffi_push_fec3_rustbuffer_from_bytes","ffi_push_fec3_rustbuffer_reserve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_auth","get_channel_list","get_meta","get_random_bytes","get_record","get_record_by_chid","get_record_by_chid","get_registration_id","get_uaid","http_protocol","into","into","into","into","into","into","into","into","into","into","keys","make_connection","new","new","p256dh","ping_interval","provide","put_record","scope","scope","sender_id","server_host","set_auth","set_meta","set_registration_id","set_uaid","socket_protocol","source","store","subscribe","subscribe","subscribe","subscription_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniffi_reexport_scaffolding","unsubscribe","unsubscribe","unsubscribe","unsubscribe_all","unsubscribe_all","unsubscribe_all","update","update","update","update_endpoint","verify_connection","verify_connection","verify_connection","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["pushpush::PushError","","","","","","","","","","","",""],"d":["","Channel is already registered, generate new channelID","","The types of supported native bridges.","A Client communication error","An error returned from the registration Server","A new communication link to the Autopush server","","Dispatch Information returned from …","","An unspecified general error has occured","","","","A failure deserializing json.","Key Information that can be used to encrypt payloads","","","","","Object representing the PushManager used to manage …","An dictionary describing the push subscription that …","","Was unable to send request to server","An error with Storage","A failure to encode data to/from storage.","Subscription Information, the endpoint to send push …","The subscription response object returned from …","","","The UAID was not recognized by the server","A failure to parse a URL.","","","","","","","","","","","","","","","","","","","","","","","bridge protocol (“fcm”)","Add one or more new broadcast subscriptions.","get the list of broadcasts","","","Get a list of server known channels.","","","","","","","","","","","","","OS Path to the database","","Decrypts a raw push message.","","","","Get the dispatch info for a given subscription channel","Service enabled flag","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","http protocol (for mobile, bridged connections “https”)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new <code>PushManager</code> object, not subscribed to any …","","How often to ping server (1800s)","","","","","Sender/Application ID value","host name:port","","","","","connection protocol (for direct connections “wss”)","","","send a new subscription request to the server, get back …","","Subscribes to a new channel and gets the Subscription Info …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop an endpoint","","Unsubscribe from given channelID, ending that subscription …","drop all endpoints","","Unsubscribe all channels for the user","Update the autopush server with the new native OS …","","Updates the Native OS push registration ID. <strong>NOTE</strong>: If this …","","Verify that the known channel list matches up with the …","","Verifies the connection state","","","","","","","","","","","","",""],"i":[30,23,30,0,23,23,0,23,0,30,23,0,0,0,23,0,23,23,0,0,0,0,23,23,23,23,0,0,30,23,23,23,5,6,10,14,30,4,23,5,6,7,8,9,10,14,30,4,23,5,6,7,8,9,4,35,35,8,9,35,4,5,6,7,8,9,4,5,6,7,8,9,4,10,14,4,36,36,14,4,5,7,6,0,0,0,0,4,23,23,5,6,7,8,9,10,14,30,4,23,23,23,23,23,23,5,6,7,8,8,9,36,36,36,0,36,36,10,36,36,4,10,14,30,4,23,5,6,7,8,9,7,10,10,14,6,4,23,36,5,9,4,4,36,36,36,36,4,23,10,35,10,14,8,4,5,6,7,8,9,23,10,14,30,4,23,5,6,7,8,9,10,14,30,4,23,5,6,7,8,9,10,14,30,4,23,5,6,7,8,9,0,35,10,14,35,10,14,35,10,14,36,35,10,14,37,38,39,40,41,42,43,44,45,46,47,48,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],[[1,[0]]]],0,0,[[],[[1,[[3,[2]]]]]],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],0,[[10,11,11,11,[12,[11]],[12,[11]]],[[1,[[3,[13]]]]]],[[14,11,11,11,11,11],[[1,[[3,[15]]]]]],[[],4],[[],1],[11,[[1,[16]]]],[[14,11],[[1,[[12,[5]]]]]],0,0,0,[[6,6],16],[[17,18],19],[[19,18]],[[20,18],19],[[19,17,18],19],[[4,21],22],[[23,21],22],[[23,21],22],[[5,21],22],[[6,21],22],[[7,21],22],[[8,21],22],[[9,21],22],[[]],[[]],[[]],[[]],[24,23],[25,23],[26,23],[27,23],[[]],[28,23],[[]],[[]],[[]],[[],8],[[]],[[]],[[],[[1,[[12,[2]]]]]],[[],[[1,[[3,[2]]]]]],[11,[[1,[[12,[2]]]]]],[29,[[1,[[3,[13]]]]]],[11,[[1,[[12,[0]]]]]],[11,[[1,[[12,[0]]]]]],[[10,11],[[1,[[12,[5]]]]]],[[],[[1,[[12,[2]]]]]],[[],[[1,[[12,[2]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[10,[[1,[0]]]],[4,[[1,[10]]]],[[2,2,2,30,2,2],[[1,[14]]]],0,0,[31],0,0,0,0,0,[11,1],[[11,11],1],[11,1],[11,1],0,[23,[[12,[32]]]],0,[[11,[12,[11]]],[[1,[0]]]],[[10,11,11,[12,[11]]],[[1,[8]]]],[[14,11,11,12],[[1,[8]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[11,1],[[10,11],[[1,[16]]]],[[14,11],[[1,[16]]]],[[],1],[10,1],[14,1],[11,1],[[10,11],[[1,[16]]]],[[14,11],[[1,[16]]]],[[11,11],[[1,[16]]]],[[],[[1,[16]]]],[10,[[1,[[3,[9]]]]]],[14,[[1,[[3,[9]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[6,"InternalResult"],[3,"String"],[3,"Vec"],[3,"PushConfiguration"],[3,"DispatchInfo"],[3,"KeyInfo"],[3,"SubscriptionInfo"],[3,"SubscriptionResponse"],[3,"PushSubscriptionChanged"],[3,"InternalPushManager"],[15,"str"],[4,"Option"],[15,"u8"],[3,"PushManager"],[15,"i8"],[15,"bool"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"Formatter"],[6,"Result"],[4,"PushError"],[4,"Error"],[4,"ParseError"],[4,"Error"],[3,"Error"],[4,"Error"],[15,"usize"],[4,"BridgeType"],[3,"Demand"],[8,"Error"],[4,"Result"],[3,"TypeId"],[8,"Connection"],[8,"InternalStorage"],[13,"GeneralError"],[13,"CryptoError"],[13,"CommunicationError"],[13,"CommunicationServerError"],[13,"StorageError"],[13,"RecordNotFoundError"],[13,"StorageSqlError"],[13,"TranscodingError"],[13,"UrlParseError"],[13,"JSONDeserializeError"],[13,"UAIDNotRecognizedError"],[13,"RequestError"],[13,"OpenDatabaseError"]]},\
"rc_crypto":{"doc":"","t":[13,13,13,13,13,13,3,4,13,13,13,6,13,13,13,0,0,11,11,11,11,11,0,0,0,2,0,5,11,11,11,11,11,11,11,11,11,11,11,2,0,0,11,11,11,0,11,11,0,0,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,7,7,3,3,7,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,7,7,3,3,6,3,3,8,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,4,3,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,5,4,13,13,11,11,11,11,5,11,11,11,11,11,11,11,5,7,7,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CertificateChainError","CertificateContentError","CertificateIssuerError","CertificateSubjectError","CertificateValidityError","ConversionError","Error","ErrorKind","InternalError","NSSError","PEMFormatError","Result","RootHashFormatError","SignatureContentError","SignatureMismatchError","aead","agreement","backtrace","borrow","borrow","borrow_mut","borrow_mut","constant_time","contentsignature","digest","ece","ece_crypto","ensure_initialized","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hawk","hkdf","hmac","into","into","kind","pbkdf2","provide","provide","rand","signature","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","0","AES_128_GCM","AES_256_GCM","Aad","Algorithm","LEGACY_SYNC_AES_256_CBC_HMAC_SHA256","Nonce","OpeningKey","SealingKey","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","empty","from","from","from","from","from","from","into","into","into","into","into","key_len","new","new","nonce_len","open","seal","tag_len","try_assume_unique_for_key","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Algorithm","Curve","ECDH_P256","ECDH_P384","EcKey","Ephemeral","EphemeralKeyPair","InputKeyMaterial","KeyPair","Lifetime","P256","P384","PrivateKey","PublicKey","Static","UnparsedPublicKey","_tests_only_dangerously_convert_to_ephemeral","agree","agree_static","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","compute_public_key","curve","derive","deserialize","deserialize","eq","eq","export","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_coordinates","from_private_key","generate","get_field_len","import","into","into","into","into","into","into","into","into","into","into","new","new","private_key","private_key","public_key","public_key","serialize","serialize","split","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_slices_are_equal","verify","Algorithm","Digest","SHA256","SHA384","algorithm","as_ref","borrow","borrow_mut","clone","clone_into","digest","encode_hex","encode_hex_upper","from","into","to_owned","try_from","try_into","type_id","RcCryptoLocalKeyPair","RcCryptoRemotePublicKey","as_any","as_any","as_raw","borrow","borrow","borrow_mut","borrow_mut","from","from","from_raw","from_raw_components","generate_random","into","into","pub_as_raw","raw_components","try_from","try_from","try_into","try_into","type_id","type_id","expand","extract","extract_and_expand","Signature","SigningKey","VerificationKey","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","digest_algorithm","digest_algorithm","encode_hex","encode_hex_upper","from","from","from","into","into","into","new","new","sign","sign","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_with_own_key","HashAlgorithm","SHA256","SHA384","borrow","borrow_mut","clone","clone_into","derive","fmt","from","into","to_owned","try_from","try_into","type_id","fill","ECDSA_P256_SHA256","ECDSA_P384_SHA384","UnparsedPublicKey","VerificationAlgorithm","algorithm","borrow","borrow","borrow_mut","borrow_mut","bytes","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","verify"],"q":["rc_crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rc_crypto::ErrorKind","","","","","","","","rc_crypto::aead","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rc_crypto::agreement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rc_crypto::constant_time","rc_crypto::contentsignature","rc_crypto::digest","","","","","","","","","","","","","","","","","","","rc_crypto::ece_crypto","","","","","","","","","","","","","","","","","","","","","","","","rc_crypto::hkdf","","","rc_crypto::hmac","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rc_crypto::pbkdf2","","","","","","","","","","","","","","","rc_crypto::rand","rc_crypto::signature","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","This crate provides all the cryptographic primitives …","","","","","","","","","","","","Only required to be called if you intend to use this …","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.","The additional authenticated data (AAD) for an opening or …","","AES-256 in CBC mode with HMAC-SHA256 tags and 128 bit …","The nonce for an opening or sealing operation. This is a …","","","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","","","","","","","","","","Construct an empty <code>Aad</code>.","Returns the argument unchanged.","Construct the <code>Aad</code> by borrowing a contiguous sequence of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The length of the key.","Create a new opening key.","Create a new sealing key.","The length of the nonces.","","","The length of a tag.","","","","","","","","","","","","","","","","","A key agreement algorithm.","","","","","The key may be used at most once.","","The result of a key agreement operation, to be fed into a …","A key pair for key agreement.","How many times the key may be used.","","","A private key for key agreement.","A public key for key agreement.","The key may be used more than once.","An unparsed public key for key agreement.","The whole point of having <code>Ephemeral</code> and <code>Static</code> lifetimes …","Ephemeral agreement. This consumes <code>self</code>, ensuring that the …","Static agreement. This borrows <code>self</code>, allowing the private …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>kdf</code> with the raw key material and then returns what …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Generate a new key pair for the given algorithm.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The private key.","","The public key.","","","","Split the key pair apart.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Ok(())</code> if <code>a == b</code> and <code>Error</code> otherwise. The …","Verify that the signature matches the input data.","","A calculated digest value.","","","","","","","","","Returns the digest of data using the given digest …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A calculated signature value. This is a type-safe wrappper …","A key to use for HMAC signing.","A key to use for HMAC authentication.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calculate the HMAC of <code>data</code> using <code>key</code>.","","","","","","","","","","","","Calculate the HMAC of <code>data</code> using <code>key</code> and verify it …","Equivalent to <code>verify</code> but allows the consumer to pass a …","","","","","","","","Extend passwords using pbkdf2, based on the following rfc …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Fill a buffer with cryptographically secure pseudo-random …","","","An unparsed public key for signature operations.","A signature verification algorithm.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[4,4,4,4,4,4,0,0,4,4,4,0,4,4,4,0,0,1,4,1,4,1,0,0,0,0,0,0,4,4,1,1,4,4,4,1,1,1,1,0,0,0,4,1,1,0,4,1,0,0,4,4,1,4,1,4,1,4,1,52,53,54,55,56,57,58,59,0,0,0,0,0,0,0,0,14,16,17,20,14,16,15,17,20,14,16,15,17,17,17,20,14,16,15,17,20,14,16,15,15,14,16,15,0,0,15,20,17,20,14,16,15,17,20,14,16,15,17,20,14,16,15,0,0,0,0,0,0,0,0,0,0,31,31,0,0,0,0,24,24,24,29,27,24,25,23,35,29,27,24,28,30,31,32,25,23,35,29,27,24,28,30,31,32,27,31,32,31,32,24,32,28,31,32,30,31,24,31,32,25,23,35,35,29,27,24,28,30,31,32,32,35,35,31,24,25,23,35,29,27,24,28,30,31,32,27,32,35,32,35,32,31,32,35,29,31,32,25,23,35,29,27,24,28,30,31,32,25,23,35,29,27,24,28,30,31,32,25,23,35,29,27,24,28,30,31,32,0,0,0,0,40,40,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,0,0,41,43,43,41,43,41,43,41,43,43,41,41,41,43,41,41,41,43,41,43,41,43,0,0,0,0,0,0,47,46,48,47,46,48,47,47,47,46,48,47,47,46,48,47,46,48,47,46,48,0,46,47,46,48,47,46,48,47,46,48,47,0,0,0,40,40,40,40,40,40,0,40,40,40,40,40,40,40,0,0,0,0,0,50,51,50,51,50,50,51,50,51,50,50,51,50,51,50,51,50,50],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[4,5],6],[[4,5],6],[[1,5],6],[[1,5],6],[7,4],[8,4],[[]],[7,1],[[]],[4,1],[8,1],0,0,0,[[]],[[]],[1,4],0,[9],[9],0,0,[4,[[3,[10]]]],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,15],[16,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[]],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,18],[15,[[19,[14]]]],[15,[[19,[16]]]],[15,18],[[14,20,17],[[19,[[22,[21]]]]]],[[16,20,17],[[19,[[22,[21]]]]]],[15,18],[15,[[19,[20]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[24,[23]]],[[24,[25]]]],[[[24,[26]],27],[[19,[28]]]],[[[24,[23]],27],[[19,[28]]]],[29,30],[27,30],[[[24,[26]]],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27],[31,31],[32,32],[[]],[[]],[[[24,[26]]],[[19,[29]]]],[32,31],[28],[[],[[12,[31]]]],[[],[[12,[32]]]],[[30,30],33],[[31,31],33],[[[24,[23]]],[[19,[32]]]],[[31,5],[[12,[34]]]],[[32,5],[[12,[34]]]],[[]],[[]],[[[24,[23]]],[[19,[[35,[23]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[12,[32,7]]]],[[[24,[26]]],[[19,[[35,[26]]]]]],[30,[[19,[[35,[26]]]]]],[31,36],[32,[[19,[[24,[23]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,27],[31,32],[[[35,[26]]],24],[32],[[[35,[26]]],29],[32],[31,12],[32,12],[[[35,[26]]]],[29,[[19,[[22,[21]]]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],19],[[37,38,38],19],0,0,0,0,[39,40],[39],[[]],[[]],[39,39],[[]],[40,[[19,[39]]]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],13],0,0,[41,42],[43,42],[43,[[12,[[22,[21]],44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[43,44]]]],[45,[[12,[41,44]]]],[[],[[12,[41,44]]]],[[]],[[]],[41,[[12,[[22,[21]],44]]]],[41,[[12,[45,44]]]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[46,19],[46,[[19,[46]]]],[46,19],0,0,0,[47],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[[]],[46,40],[48,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,46],[40,48],[46,[[19,[47]]]],[46,[[12,[[22,[21]],49]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[48,19],[46,19],0,0,0,[[]],[[]],[40,40],[[]],[[36,40],19],[[40,5],[[12,[34]]]],[[]],[[]],[[]],[[],12],[[],12],[[],13],[[],19],0,0,0,0,[50,51],[[]],[[]],[[]],[[]],[50],[[]],[[]],[[]],[[]],[51,50],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[50,19]],"p":[[3,"Error"],[3,"Mutex"],[4,"Option"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"TryFromIntError"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"OpeningKey"],[3,"Algorithm"],[3,"SealingKey"],[3,"Aad"],[15,"usize"],[6,"Result"],[3,"Nonce"],[15,"u8"],[3,"Vec"],[3,"Static"],[3,"PrivateKey"],[3,"Ephemeral"],[8,"Lifetime"],[3,"UnparsedPublicKey"],[3,"InputKeyMaterial"],[3,"PublicKey"],[3,"Algorithm"],[4,"Curve"],[3,"EcKey"],[15,"bool"],[3,"Error"],[3,"KeyPair"],[15,"u32"],[15,"u64"],[15,"str"],[3,"Digest"],[4,"HashAlgorithm"],[3,"RcCryptoLocalKeyPair"],[8,"Any"],[3,"RcCryptoRemotePublicKey"],[4,"Error"],[3,"EcKeyComponents"],[3,"SigningKey"],[3,"Signature"],[3,"VerificationKey"],[4,"CryptoError"],[3,"UnparsedPublicKey"],[3,"VerificationAlgorithm"],[13,"NSSError"],[13,"ConversionError"],[13,"RootHashFormatError"],[13,"PEMFormatError"],[13,"CertificateContentError"],[13,"CertificateChainError"],[13,"SignatureContentError"],[13,"SignatureMismatchError"]]},\
"rc_log_ffi":{"doc":"This crate allows users from the other side of the FFI to …","t":[13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,0,5,5,5,5,5,11,11,11,11,3,6,11,11,11,11,11,11,11,11,11,11,11],"n":["DEBUG","ERROR","INFO","LogLevel","VERBOSE","WARN","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","ios","rc_log_adapter_create","rc_log_adapter_destroy","rc_log_adapter_destroy_string","rc_log_adapter_set_max_level","rc_log_adapter_test__log_msg","to_owned","try_from","try_into","type_id","LogAdapterState","LogCallback","borrow","borrow_mut","drop","ffi_default","from","init","into","into_ffi_value","try_from","try_into","type_id"],"q":["rc_log_ffi","","","","","","","","","","","","","","","","","","","","","","","","","rc_log_ffi::ios","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Safety","Public destructor for strings managed by the other side of …","","","","","","","","Type of the log callback provided to us by swift. Takes …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","",""],"i":[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,8,8,8,8,8,8,8,8,8,8,8],"f":[0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[1,3],4],[[]],[5,1],[[]],0,[[6,7],8],[8],[9],[[10,7]],[11],[[]],[[],12],[[],12],[[],13],0,0,[[]],[[]],[8],[[],8],[[]],[6,8],[[]],[8,8],[[],12],[[],12],[[],13]],"p":[[4,"LogLevel"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Level"],[6,"LogCallback"],[3,"ExternError"],[3,"LogAdapterState"],[6,"c_char"],[15,"i32"],[3,"FfiStr"],[4,"Result"],[3,"TypeId"]]},\
"restmail_client":{"doc":"","t":[5,5],"n":["clear_mailbox","find_email"],"q":["restmail_client",""],"d":["","For a given restmail email, find the first email that …"],"i":[0,0],"f":[[1,[[2,[0]]]],[[1,3],[[2,[4,0]]]]],"p":[[15,"str"],[4,"Result"],[15,"u8"],[4,"Value"]]},\
"sql_support":{"doc":"","t":[13,3,8,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,10,11,12,5,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,8,18,4,13,18,13,6,13,11,11,11,11,11,11,11,10,11,5,5,5,5,11,11,11,0,11,11,11,11,10,12,12,12,12,3,11,11,12,11,11,11,11,11,12,11,11,11,11,11],"n":["Cached","Conn","ConnExt","MaybeCached","RepeatDisplay","Uncached","UncheckedTransaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","conn","conn","conn","default_max_variable_number","deref","deref","deref_mut","drop","each_chunk","each_chunk_mapped","each_sized_chunk","each_sized_chunk_mapped","escape_string_for_pragma","execute_all","execute_all","execute_cached","execute_cached","execute_one","execute_one","finished","fmt","fmt","from","from","from","from","from","from","get_db_size","get_db_size","into","into","into","into","new","open_database","prepare","prepare_maybe_cached","prepare_maybe_cached","query_one","query_one","query_row_and_then_cachable","query_row_and_then_cachable","query_rows_and_then","query_rows_and_then","query_rows_and_then_cached","query_rows_and_then_cached","query_rows_into","query_rows_into","query_rows_into_cached","query_rows_into_cached","repeat_display","repeat_multi_values","repeat_sql_values","repeat_sql_vars","rollback","set_pragma","set_pragma","started_at","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_query_one","try_query_one","try_query_row","try_query_row","type_id","type_id","type_id","type_id","unchecked_transaction","unchecked_transaction","unchecked_transaction_imm","unchecked_transaction_imm","0","0","ConnectionInitializer","END_VERSION","Error","IncompatibleVersion","NAME","RecoveryError","Result","SqlError","borrow","borrow_mut","finish","fmt","fmt","from","from","init","into","open_database","open_database_with_flags","open_memory_database","open_memory_database_with_flags","prepare","provide","source","test_utils","to_string","try_from","try_into","type_id","upgrade_from","0","0","0","1","MigratedDatabaseFile","borrow","borrow_mut","connection_initializer","from","into","new","new_with_flags","open","path","run_all_upgrades","try_from","try_into","type_id","upgrade_to"],"q":["sql_support","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sql_support::MaybeCached","","sql_support::open_database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sql_support::open_database::Error","","","","sql_support::open_database::test_utils","","","","","","","","","","","","","",""],"d":["","","This trait exists so that we can use these helpers on …","MaybeCached is a type that can be used to help abstract …","Helper type for printing repeated strings more …","","rusqlite, in an attempt to save us from ourselves, needs a …","","","","","","","","","","","Consumes and commits an unchecked transaction.","The method you need to implement to opt in to all of this.","","","Returns SQLITE_LIMIT_VARIABLE_NUMBER as read from an …","","","","","Helper for the case where you have a <code>&amp;[impl ToSql]</code> of …","A version of <code>each_chunk</code> for the case when the conversion …","","Utility to help perform batched updates, inserts, queries, …","In PRAGMA foo=‘bar’, <code>&#39;bar&#39;</code> must be a constant string …","Execute all the provided statements.","Execute all the provided statements.","Equivalent to <code>Connection::execute</code> but caches the statement …","Equivalent to <code>Connection::execute</code> but caches the statement …","Execute a single statement.","Execute a single statement.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the DB size in bytes","Get the DB size in bytes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Begin a new unchecked transaction. Cannot be nested, but …","","","Get a cached or uncached statement based on a flag.","Get a cached or uncached statement based on a flag.","Execute a query that returns a single result column, and …","Execute a query that returns a single result column, and …","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> but …","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> but …","Helper for when you’d like to get a Vec of all the rows …","Helper for when you’d like to get a Vec of all the rows …","Helper for when you’d like to get a Vec of all the rows …","Helper for when you’d like to get a Vec of all the rows …","Like <code>query_rows_and_then_cachable</code>, but works if you want a …","Like <code>query_rows_and_then_cachable</code>, but works if you want a …","Same as <code>query_rows_into</code>, but caches the stmt if possible.","Same as <code>query_rows_into</code>, but caches the stmt if possible.","Construct a RepeatDisplay that will repeatedly call <code>fmt_one</code>…","Returns a value that formats as <code>num_values</code> instances of …","Returns a value that formats as <code>count</code> instances of <code>(?)</code> …","Returns a value that formats as <code>count</code> instances of <code>?</code> …","Consumes and rolls back an unchecked transaction.","Set the value of the pragma on the main database. Returns …","Set the value of the pragma on the main database. Returns …","","","","","","","","","","","","Execute a query that returns 0 or 1 result columns, …","Execute a query that returns 0 or 1 result columns, …","Like <code>query_row_and_then_cachable</code> but returns None instead …","Like <code>query_row_and_then_cachable</code> but returns None instead …","","","","","Caveat: This won’t actually get used most of the time, …","Caveat: This won’t actually get used most of the time, …","Begin <code>unchecked_transaction</code> with …","Begin <code>unchecked_transaction</code> with …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[7,0,0,0,0,7,0,36,3,7,2,36,3,7,2,2,2,3,37,3,3,0,3,7,7,3,0,0,0,0,0,37,37,37,37,37,37,3,2,2,36,3,7,7,7,2,37,37,36,3,7,2,3,0,7,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,3,37,37,3,2,2,36,3,7,2,36,3,7,2,37,37,37,37,36,3,7,2,37,37,37,37,38,39,0,34,0,27,34,27,0,27,27,27,34,27,27,27,27,34,27,0,0,0,0,34,27,27,0,27,27,27,27,34,40,41,42,42,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[3,4],[[],5],[3,5],0,[[],6],[3,5],[7,8],[7,8],[3],[[],9],[[],9],[6,9],[6,9],[10,11],[[],4],[[],4],[[10,12],[[4,[6]]]],[[10,12],[[4,[6]]]],[10,4],[10,4],0,[[[2,[13]],14],15],[[2,14],15],[[]],[[]],[8,7],[16,7],[[]],[[]],[[],[[9,[17,18]]]],[[],[[9,[17,18]]]],[[]],[[]],[[]],[[]],[[5,19],[[4,[3]]]],0,[[5,10,20],[[4,[7]]]],[[10,20],[[4,[7]]]],[[10,20],[[4,[7]]]],[10,[[4,[21]]]],[10,[[4,[21]]]],[[10,20],9],[[10,20],9],[10,[[9,[22]]]],[10,[[9,[22]]]],[10,[[9,[22]]]],[10,[[9,[22]]]],[10,9],[10,9],[10,9],[10,9],[[6,10],2],[[6,6],23],[6,23],[6,23],[3,4],[10,4],[10,4],0,[[]],[[],11],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[10,12,20],[[4,[[24,[21]]]]]],[[10,12,20],[[4,[[24,[21]]]]]],[[10,20],[[9,[24]]]],[[10,20],[[9,[24]]]],[[],25],[[],25],[[],25],[[],25],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[5,26],[[27,14],15],[[27,14],15],[18,27],[[]],[28,26],[[]],[[[30,[29]]],[[26,[5]]]],[[[30,[29]],31],[[26,[5]]]],[[],[[26,[5]]]],[31,[[26,[5]]]],[[5,20],26],[32],[27,[[24,[33]]]],0,[[],11],[[],9],[[],9],[[],25],[[28,17],26],0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[34,10],[[35,[34]]]],[[34,10,31],[[35,[34]]]],[[[35,[34]]],5],0,[[[35,[34]]]],[[],9],[[],9],[[],25],[[[35,[34]],17]]],"p":[[8,"Clone"],[3,"RepeatDisplay"],[3,"UncheckedTransaction"],[6,"Result"],[3,"Connection"],[15,"usize"],[4,"MaybeCached"],[3,"Statement"],[4,"Result"],[15,"str"],[3,"String"],[8,"Params"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"CachedStatement"],[15,"u32"],[4,"Error"],[4,"TransactionBehavior"],[15,"bool"],[8,"FromSql"],[3,"Vec"],[8,"Display"],[4,"Option"],[3,"TypeId"],[6,"Result"],[4,"Error"],[3,"Transaction"],[3,"Path"],[8,"AsRef"],[3,"OpenFlags"],[3,"Demand"],[8,"Error"],[8,"ConnectionInitializer"],[3,"MigratedDatabaseFile"],[3,"Conn"],[8,"ConnExt"],[13,"Uncached"],[13,"Cached"],[13,"IncompatibleVersion"],[13,"SqlError"],[13,"RecoveryError"]]},\
"sync15":{"doc":"","t":[12,13,13,13,13,3,13,13,13,4,18,3,4,3,13,13,13,13,3,13,13,13,13,13,3,13,6,13,3,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,3,3,3,4,13,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,3,13,13,13,13,4,8,13,4,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,10,11,10,11,12,12,11,5,5,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,12,12,13,4,8,4,3,13,13,13,3,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,10,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,13,8,3,3,13,13,13,4,16,13,6,13,13,13,6,13,4,8,4,13,10,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,10,12,11,11,11,12,11,11,11,11,11,11,11,10,11,12,11,11,11,12,11,12,12,11,12,11,11,11,11,11,11,12,10,10,10,10,11,11,10,11,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,13,3,3,3,3,13,13,3,13,4,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["0","BackoffError","BadCleartextUtf8","BadKeyLength","Base64Decode","ClientData","ClientUpgradeRequired","CryptoError","Desktop","DeviceType","EPOCH","EncryptedPayload","Error","Guid","HawkError","HmacMismatch","Interrupted","JsonError","KeyBundle","MalformedUrl","MissingServerTimestamp","Mobile","RecordTooLargeError","RecordUploadFailed","RemoteClient","RequestError","Result","ServerBatchProblem","ServerTimestamp","SetupRace","SetupRequired","StorageHttpError","StorageResetError","StoreError","TV","Tablet","TokenserverHttpError","UnacceptableUrl","UnexpectedStatus","Unknown","VR","as_bytes","as_millis","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bso","ciphertext","client","clients_engine","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","column_result","decrypt","decrypt","decrypt_into","default","default","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_name","device_type","duration_since","empty","encode_hex","encode_hex_upper","encrypt_bytes_rand_iv","encrypt_bytes_with_iv","encrypt_rand_iv","encrypt_with_iv","encryption_key","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_cleartext","from_cleartext_payload","from_float_seconds","from_ksync_base64","from_ksync_bytes","from_millis","from_slice","from_str","from_string","from_vec","fxa_device_id","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hmac","hmac_key","into","into","into","into","into","into","into","into","into_string","is_valid_for_places","is_valid_for_sync_server","is_valid_places_byte","iv","local_client_id","new","new","new_random","partial_cmp","partial_cmp","provide","random","recent_clients","serialize","serialize","serialize","serialize","serialize","serialize","serialized_len","source","telemetry","to_b64_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","2","Content","IncomingBso","IncomingContent","IncomingEncryptedBso","IncomingEnvelope","IncomingKind","Malformed","OutgoingBso","OutgoingEncryptedBso","OutgoingEnvelope","Tombstone","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content","default","deserialize","deserialize","deserialize","envelope","envelope","envelope","envelope","envelope","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_content","from_content_with_id","from_test_content","from_test_content_ts","id","id","into","into","into","into","into","into","into","into","into_content","into_decrypted","into_encrypted","kind","modified","new","new","new","new","new_test_tombstone","new_tombstone","payload","payload","serialize","serialize","serialize","serialized_payload_len","sortindex","sortindex","test_utils","to_owned","to_owned","to_test_incoming","to_test_incoming_t","to_test_incoming_ts","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","AuthenticationError","BackedOff","Error","Interrupted","MemoryCachedState","NetworkError","Ok","OtherError","ServiceError","ServiceStatus","SetupStorageClient","Success","Sync15ClientResponse","Sync15StorageClient","Sync15StorageClientInit","SyncRequestInfo","SyncResult","access_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_sensitive_info","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create_storage_error","declined","default","default","engine_results","engines_to_state_change","eq","eq","fetch_crypto_keys","fetch_crypto_keys","fetch_info_collections","fetch_info_collections","fetch_info_configuration","fetch_info_configuration","fetch_meta_global","fetch_meta_global","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_err","from_response","get_encrypted_records","get_hash","get_next_sync_after","hash","hashed_uid","into","into","into","into","into","into","into","is_user_action","key_id","new","new_post_queue","next_sync_after","note_client_refresh","partial_cmp","put_crypto_keys","put_crypto_keys","put_meta_global","put_meta_global","result","service_status","should_refresh_client","sync_multiple","sync_multiple_with_command_processor","telemetry","to_owned","to_owned","to_owned","tokenserver_url","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_all_remote","wipe_all_remote","0","last_modified","record","route","status","Applied","Command","CommandProcessor","CommandStatus","Engine","Ignored","Reset","ResetAll","Settings","Unsupported","Wipe","apply_incoming_command","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","command_processor","device_name","device_type","eq","eq","eq","fetch_outgoing_commands","fmt","fmt","fmt","from","from","from","from","fxa_device_id","get_client_data","get_hash","get_hash","get_hash","hash","hash","hash","interruptee","into","into","into","into","local_client_id","new","partial_cmp","recent_clients","settings","sync","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","Addresses","ApplyResults","Bookmarks","BridgedEngine","CollSyncIds","CollectionRequest","Connected","CreditCards","Disconnected","EngineSyncAssociation","Error","History","IncomingChangeset","Index","Newest","Oldest","OutgoingChangeset","Passwords","RequestOrder","SyncEngine","SyncEngineId","Tabs","apply","apply_incoming","as_str","batch","batch","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coll","collection","collection_name","commit","commit","default","ensure_current_sync_id","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","full","full","get_collection_requests","get_hash","get_hash","get_sync_assoc","global","hash","hash","ids","ids","into","into","into","into","into","into","iter","last_sync","limit","limit","name","new","new","newer","newer_than","num_reconciled","older","older_than","order","partial_cmp","partial_cmp","prepare_for_sync","prepare_for_sync","prepare_for_sync","prepare_for_sync","records","reset","reset","reset_sync_id","set_last_sync","set_local_encryption_key","set_local_encryption_key","set_uploaded","sort_by","store_incoming","sync_finished","sync_finished","sync_id","sync_started","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","0","Auth","Engine","EngineIncoming","EngineOutgoing","Event","Http","Other","Problem","Shutdown","SyncFailure","SyncTelemetry","SyncTelemetryPing","Unexpected","Validation","applied","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","default","default","engine","event","extra","failed","failed","failure","failure","ffi_default","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_applied","get_failed","get_new_failed","get_reconciled","incoming","into","into","into","into","into","into","into","into","into","into_ffi_value","new","new","new","new","new","new","new_failed","outgoing","problem","reconciled","sent","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sync","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","validation","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_version","code","error","error","from"],"q":["syncsync15::Error","","","","","","","","","","","","","","","","","","sync15::bso","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync15::bso::IncomingKind","sync15::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync15::client::Sync15ClientResponse","","","","","sync15::clients_engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync15::clients_engine::Command","","sync15::engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync15::engine::EngineSyncAssociation","sync15::telemetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync15::telemetry::SyncFailure","","",""],"d":["","","","","","Argument to Store::prepare_for_sync. See comment there for …","","","","Enumeration for the different types of device.","","A representation of an encrypted payload. Used as the …","","This is a type intended to be used to represent the guids …","","","","","","","","","","","Information about a remote client in the clients …","","","","Typesafe way to manage server timestamps without …","","","","Used for things like a node reassignment or an unexpected …","","","","","","","","","Get the data backing this <code>Guid</code> as a <code>&amp;[u8]</code>.","Get the milliseconds for the timestamp.","","","Get the data backing this <code>Guid</code> as a <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","A module for everything needed to be a “sync client” - …","The client engine is a crate::engine(Sync Engine) used to …","","","","","","","","","","","","","","","","","","Decrypt the provided ciphertext with the given iv, and …","","Create a default guid by calling <code>Guid::empty()</code>","","","","","","","","","","","Returns None if <code>other</code> is later than <code>self</code> (Duration may not …","Create an empty guid. Usable as a constant.","","","Generate a random iv and encrypt with it. Return both the …","Encrypt using the provided IV.","","","","This module is used by crates which need to implement a “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Convert <code>b</code> into a <code>Guid</code>.","","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>v</code> to a <code>Guid</code>, consuming it.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …","Returns true for Guids that are valid places guids, and …","Returns true for Guids that are deemed valid by the sync …","Returns true if the byte <code>b</code> is a valid base64url byte.","","","Create a guid from a <code>str</code>.","Construct a key bundle from the already-decoded encrypt …","","","","","Create a random guid (of 12 base64url characters). …","A hashmap of records in the <code>clients</code> collection. Key is the …","","","","","","","","","Manage recording sync telemetry. Assumes some external …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A good, live T.","IncomingBso’s can come from:","We also have the concept of “content”, which helps …","","An envelope for an incoming item. Envelopes carry all the …","The “kind” of incoming content after deserializing it.","Either not JSON, or can’t be made into a T.","","","An envelope for an outgoing item. This is conceptually …","A record that used to be a T but has been replaced with a …","","","","","","","","","","","","","","","","","","","","","Returns Some(content) if [self.kind] is …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an Outgoing record with an explicit envelope. Will …","Creates a outgoing record from some , which can be made …","When a test has an T and wants it as an IncomingBso","When a test has an T and wants it as an IncomingBso with a …","The ID of the record.","The ID of the record.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert an IncomingBso to an IncomingContent possibly …","Decrypt a BSO, consuming it into a clear-text version.","","","","","","","Most consumers will use <code>self.from_content</code> and …","When a test wants a new incoming tombstone.","Creates a new tombstone record. Not all collections expect …","","","","","","","","","Utilities for tests to make IncomingBsos and Content from …","","","When a test has an OutgoingBso and wants it as an …","When a test has an OutgoingBso and wants it as an …","When a test has an OutgoingBso and wants it as an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some external FxA action needs to be taken.","We declined to do anything for backoff or rate-limiting …","","We were interrupted.","Info we want callers to engine <em>in memory</em> for us so that …","Some general network issue.","Everything is fine.","Something else - you need to check the logs for more …","Some apparent issue with the servers.","The general status of sync - should probably be moved to …","A trait containing the methods required to run through the …","","A response from a GET request on a Sync15StorageClient, …","","","This is essentially a bag of information that the sync …","The result of a sync request. This too is from the “sync …","","","","","","","","","","","","","","","","","","","","","","","","","The set of declined engines, if we know them.","","","The result for each engine. Note that we expect the <code>String</code> …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The result of the sync.","The general health.","","Sync multiple engines","Like <code>sync_multiple</code>, but specifies an optional command …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A command processor applies incoming commands like wipes …","Indicates if a command was applied successfully, ignored, …","","","Resets local sync state for a specific engine.","Resets local sync state for all engines.","Information about this device to include in its client …","","Erases all local data for a specific engine.","Applies a command sent to this client from another client. …","","","","","","","","","","","","","","","","","The name of this client. This should match the client’s …","The type of this client: mobile, tablet, desktop, or other.","","","","Fetches commands to send to other clients. An error return …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The FxA device ID of this client, also used as this client…","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new clients engine that delegates to the given …","","","","Syncs the clients collection. This works a little …","","","","","","","","","","","","","","","","","","","","","","","","","A BridgedEngine acts as a bridge between …","","","Sync is connected, and has the following sync IDs.","","This store is disconnected (although it may be connected …","Defines how an engine is associated with a particular set …","The type returned for errors.","","","","","","","","","A “sync engine” is a thing that knows how to sync. It…","The concrete <code>SyncEngine</code> implementations","","Applies all staged records, reconciling changes on both …","<code>inbound</code> is a vector to support the case where …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that the locally stored sync ID for this engine’…","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The engine is responsible for building the collection …","","","Get persisted sync IDs. If they don’t match the global …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the last sync time, in milliseconds, for this …","","","","","","","","The number of incoming records whose contents were merged …","","","","","","Tells the tabs engine about recent FxA devices. A bit of a …","Tells the tabs engine about recent FxA devices. A bit of a …","Prepares the engine for syncing. The tabs engine currently …","Prepares the engine for syncing. The tabs engine currently …","List of records","Resets all local Sync state, including any change flags, …","Reset the engine (and associated store) without wiping …","Resets the sync ID for this engine’s collection, …","Sets the last sync time, in milliseconds. This is called …","Tells the engine what the local encryption key is for the …","Tells the engine what the local encryption key is for the …","Indicates that the given record IDs were uploaded …","","Stages a batch of incoming Sync records. This is called …","Indicates that all records have been uploaded. At this …","","Returns the sync ID for this engine’s collection. This …","Indicates that the engine is about to start syncing. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Erases all local user data for this collection, and any …","","","","One engine’s sync.","Incoming record for an engine’s sync","Outgoing record for an engine’s sync","A generic “Event” - suitable for all kinds of pings …","","","","","A Sync failure.","A single sync. May have many engines, may have its own …","The Sync ping payload, as documented at …","","","Increment the value of <code>applied</code> by <code>n</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Increment the value of <code>failed</code> by <code>n</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the value of <code>applied</code>. Mostly useful for testing.","Get the value of <code>failed</code>. Mostly useful for testing.","Get the value of <code>new_failed</code>. Mostly useful for testing.","Get the value of <code>reconciled</code>. Mostly useful for testing.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Increment the value of <code>new_failed</code> by <code>n</code>.","","","Increment the value of <code>reconciled</code> by <code>n</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,24,24,24,24,0,24,24,7,0,2,0,0,0,24,24,24,24,0,24,24,7,24,24,0,24,0,24,0,24,24,24,24,24,7,7,24,24,24,7,7,1,2,1,1,1,1,5,6,7,8,24,9,2,1,5,6,7,8,24,9,2,0,8,0,0,1,5,6,7,8,9,2,1,5,6,7,8,9,2,1,1,8,9,8,1,2,1,1,5,6,7,8,2,6,6,2,1,1,1,9,9,9,9,9,0,1,1,1,1,1,1,1,6,7,9,2,1,1,5,6,7,8,24,24,9,2,2,1,1,1,1,1,1,5,6,7,8,24,24,24,24,24,24,24,24,24,24,24,9,2,9,8,8,2,9,9,2,1,2,1,1,6,1,6,7,9,1,6,7,9,8,9,1,5,6,7,8,24,9,2,1,1,1,1,8,5,1,9,9,1,2,24,1,5,1,5,6,7,8,2,8,24,0,9,1,5,6,7,8,9,2,1,1,24,2,1,5,6,7,8,24,9,2,1,5,6,7,8,24,9,2,1,5,6,7,8,24,9,2,1,5,6,7,8,24,9,2,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,99,99,52,0,0,0,0,0,52,0,0,0,52,52,49,53,46,47,50,54,48,52,49,53,46,47,50,54,48,46,47,46,47,48,47,49,46,50,49,53,50,54,48,52,49,53,46,47,50,54,48,52,49,53,46,47,47,50,54,48,54,54,50,50,46,47,52,49,53,46,47,50,54,48,50,49,54,48,46,49,53,50,54,50,54,50,54,53,47,54,53,46,47,0,46,47,54,54,54,52,49,53,46,47,50,54,48,52,49,53,46,47,50,54,48,46,47,52,49,53,46,47,50,54,48,52,49,53,46,47,50,54,48,115,58,58,60,58,0,58,58,58,58,0,0,60,0,0,0,0,0,61,58,64,60,61,63,57,62,58,64,60,61,63,57,62,57,58,60,61,58,60,61,61,60,64,57,62,64,62,58,61,116,63,116,63,116,63,116,63,58,64,60,61,63,57,62,58,64,60,61,63,57,62,58,60,63,61,57,61,63,58,64,60,61,63,57,62,62,61,63,63,64,57,61,116,63,116,63,64,64,57,0,0,64,58,60,61,61,58,64,60,61,63,57,62,58,64,60,61,63,57,62,58,64,60,61,63,57,62,58,64,60,61,63,57,62,116,63,117,118,118,118,118,72,0,0,0,0,72,71,71,0,72,71,70,76,72,74,71,76,72,74,71,72,74,71,72,74,71,71,76,74,74,72,74,71,70,72,74,71,76,72,74,71,74,76,72,74,71,72,74,71,76,76,72,74,71,76,76,71,76,70,76,72,74,71,76,72,74,71,76,72,74,71,76,72,74,71,76,72,74,71,119,120,84,0,84,0,0,0,83,84,83,0,121,84,0,81,81,81,0,84,0,0,0,84,121,122,81,67,67,77,67,81,82,83,84,77,67,81,82,83,84,67,81,82,83,84,67,81,82,83,84,81,84,82,67,122,67,67,77,121,67,81,82,83,84,77,67,81,81,82,83,84,84,77,77,67,81,82,83,84,67,67,122,81,84,122,82,81,84,67,67,77,67,81,82,83,84,84,121,67,67,84,77,67,67,67,77,67,67,67,81,84,121,121,122,122,77,121,122,121,121,122,122,121,67,121,121,122,121,121,67,81,82,83,84,81,84,77,67,81,82,83,84,84,77,67,81,82,83,84,77,67,81,82,83,84,77,67,81,82,83,84,121,122,123,97,0,0,0,0,97,97,0,97,0,0,0,97,0,89,96,97,89,91,79,92,93,94,95,96,97,89,91,79,92,93,94,95,89,91,92,93,94,95,94,95,96,89,91,79,94,95,94,96,97,89,91,79,92,93,94,95,96,97,97,89,91,79,92,93,94,95,89,89,89,89,79,96,97,89,91,79,92,93,94,95,95,96,89,91,79,94,95,89,79,92,89,91,96,97,89,91,79,92,93,94,95,95,96,97,89,91,79,92,93,94,95,96,97,89,91,79,92,93,94,95,96,97,89,91,79,92,93,94,95,95,79,96,96,97,89,91,79,92,93,94,95,92,124,125,126,127],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,3],[1,4],[1],[1,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1,1],[5,5],[6,6],[7,7],[8,8],[9,9],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],10],[11,[[13,[1,12]]]],[[8,9],[[15,[14]]]],[[9,4,4,4],[[15,[14]]]],[[8,9],15],[[],1],[[],2],[1,4],[[],[[13,[1]]]],[[],[[13,[5]]]],[[],[[13,[6]]]],[[],[[13,[7]]]],[[],[[13,[8]]]],[16,[[13,[2]]]],0,0,[[2,2],[[18,[17]]]],[[],1],[[]],[[]],[9,15],[9,15],[[9,4],15],[[9,4],15],[9],0,[[1,4],19],[[1,14],19],[[1,20],19],[[1,4],19],[1,19],[1,19],[[1,1],19],[[6,6],19],[[7,7],19],[[9,9],19],[[2,2],19],[[1,21],[[13,[22]]]],[[1,21],[[13,[22]]]],[[5,21],23],[[6,21],23],[[7,21],23],[[8,21],23],[[24,21],23],[[24,21],23],[[9,21],23],[[2,21],23],[[2,21],23],[[],1],[4,1],[[[20,[25,26]]],1],[4,1],[14,1],[[]],[[]],[[]],[[]],[[]],[27,24],[28,24],[29,24],[30,24],[31,24],[32,24],[33,24],[34,24],[35,24],[36,24],[[]],[[]],[[]],[[4,4],[[15,[9]]]],[[9,14],[[15,[8]]]],[9,[[15,[8]]]],[37,2],[4,[[15,[9]]]],[[],[[15,[9]]]],[3,2],[[],1],[4,[[13,[2]]]],[14,1],[[[20,[25,26]]],1],0,[[],38],[[],38],[[],38],[[],38],[1],[6],[7],[9],0,[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,14],[1,19],[1,19],[25,19],0,0,[4,1],[[[20,[25]],[20,[25]]],[[15,[9]]]],[[],[[15,[9]]]],[[1,1],[[18,[10]]]],[[2,2],[[18,[10]]]],[39],[[],1],0,[1,13],[5,13],[6,13],[7,13],[8,13],[[2,40],13],[8,41],[24,[[18,[42]]]],0,[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[13,[43,44]]]],[[],14],[[],14],[[],14],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,46],[47,47],[[]],[[]],[48,18],[[],47],[[],[[13,[49]]]],[[],[[13,[46]]]],[[],[[13,[50]]]],0,0,0,0,0,[[[52,[51]],21],23],[[49,21],23],[[53,21],23],[[46,21],23],[[47,21],23],[[50,21],23],[[54,21],23],[[[48,[51]],21],23],[[]],[[]],[[]],[[]],[[]],[1,47],[[]],[[]],[[]],[47,[[13,[54,29]]]],[[],[[13,[54,29]]]],[55,50],[[55,2],50],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[48,[56]]]],[[49,9],[[15,[50]]]],[[54,9],[[15,[53]]]],0,0,[[46,8],49],[[47,8],53],[[46,14],50],[47,[[13,[54,29]]]],[1,50],[47,54],0,0,[53,13],[47,13],[54,13],[53,41],0,0,0,[[]],[[]],[54,50],[54,56],[[54,2],50],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57],[58,58],[[[60,[59]]],[[60,[59]]]],[61,61],[[]],[[]],[[]],[[61,61],10],[60,24],0,[[],57],[[],62],0,0,[[58,58],19],[[61,61],19],[[],[[15,[[60,[49]]]]]],[63,[[15,[[60,[49]]]]]],[[],[[15,[[60,[0]]]]]],[63,[[15,[[60,[0]]]]]],[[],[[15,[[60,[0]]]]]],[63,[[15,[[60,[0]]]]]],[[],[[15,[[60,[0]]]]]],[63,[[15,[[60,[0]]]]]],[[58,21],23],[[64,21],23],[[[60,[51]],21],23],[[61,21],23],[[63,21],23],[[57,21],23],[[62,21],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,58],[[65,66],[[15,[60]]]],[[63,67],[[15,[[60,[[20,[49]]]]]]]],[[],38],[57,[[18,[68]]]],[61],[63,[[15,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[61,[[15,[63]]]],0,0,[57],[[61,61],[[18,[10]]]],[[2,53],15],[[63,2,53],15],0,0,0,0,[57,19],[[18,57,61,9,69,[18,[62]]],64],[[[18,[70]],18,57,61,9,69,[18,[62]]],64],0,[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[63,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[71,[[73,[72]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[74,74],[71,71],[[]],[[]],[[]],[[71,71],10],0,0,0,[[72,72],19],[[74,74],19],[[71,71],19],[[],[[73,[[75,[71]]]]]],[[72,21],23],[[74,21],23],[[71,21],23],[[]],[[]],[[]],[[]],0,[76,5],[[],38],[[],38],[[],38],[72],[74],[71],0,[[]],[[]],[[]],[[]],[76,14],[[70,69],76],[[71,71],[[18,[10]]]],0,[[],74],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[13,[77]]]],[[[20,[78]],79],[[73,[80]]]],[81,4],[[67,[18,[14]]],67],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[81,81],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[[]],[[81,81],10],[[84,84],10],0,0,[[],[[85,[4]]]],[[67,19],67],0,[[],77],[4,[[13,[14]]]],[[67,67],19],[[81,81],19],[[82,82],19],[[83,83],19],[[84,84],19],[[77,21],23],[[67,21],23],[[81,21],23],[[81,21],23],[[82,21],23],[[83,21],23],[[84,21],23],[[84,21],23],[[]],[[[20,[54]]],77],[[]],[[]],[[]],[[]],[[]],[67,67],0,[2,[[73,[[20,[67]]]]]],[[],38],[[],38],[[],[[73,[83]]]],0,[81],[84],[67,67],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],86],[[],[[13,[3]]]],[[67,41],67],0,[84,4],[[[20,[54]],[87,[[18,[41]]]]],77],[[],67],0,[[67,2],67],0,0,[[67,2],67],0,[[81,81],[[18,[10]]]],[[84,84],[[18,[10]]]],[4,13],[4,13],[88,73],[88,73],0,[[],13],[83,73],[[],[[13,[14]]]],[3,13],[4,73],[4,73],[3,13],[[67,81],67],[[[20,[50]]],13],[[],13],[[2,[20,[1]]],73],[[],[[13,[[18,[14]]]]]],[[],13],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[4,[[13,[84]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],73],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,90]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],89],[[],91],[[],92],[[],93],[[],94],[[],95],[[94,79]],[[95,96]],[[96,4,14],96],[[89,90]],[[91,41]],[[79,[87,[97]]]],[[94,97]],[[],98],[94],[[96,21],23],[[97,21],23],[[89,21],23],[[91,21],23],[[79,21],23],[[92,21],23],[[93,21],23],[[94,21],23],[[95,21],23],[[]],[24,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,90],[89,90],[89,90],[89,90],[[79,89]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,98],[[4,4],96],[[],89],[[],91],[[[87,[14]]],79],[[],94],[[],95],[[89,90]],[[79,91]],[[92,4,41],92],[[89,90]],[[91,41]],[96,13],[97,13],[89,13],[91,13],[79,13],[92,13],[93,13],[94,13],[95,13],[[95,94]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[95,14]],[[79,92]],[[96,4],96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,92],0,0,0,0],"p":[[3,"Guid"],[3,"ServerTimestamp"],[15,"i64"],[15,"str"],[3,"ClientData"],[3,"RemoteClient"],[4,"DeviceType"],[3,"EncryptedPayload"],[3,"KeyBundle"],[4,"Ordering"],[4,"ValueRef"],[4,"FromSqlError"],[4,"Result"],[3,"String"],[6,"Result"],[8,"Deserializer"],[3,"Duration"],[4,"Option"],[15,"bool"],[3,"Vec"],[3,"Formatter"],[3,"Error"],[6,"Result"],[4,"Error"],[15,"u8"],[3,"Global"],[4,"DecodeError"],[3,"Error"],[3,"Error"],[3,"FromUtf8Error"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"UnexpectedStatus"],[4,"ParseError"],[3,"Interrupted"],[15,"f64"],[15,"u64"],[3,"Demand"],[8,"Serializer"],[15,"usize"],[8,"Error"],[4,"ToSqlOutput"],[4,"Error"],[3,"TypeId"],[3,"IncomingEnvelope"],[3,"OutgoingEnvelope"],[3,"IncomingContent"],[3,"IncomingEncryptedBso"],[3,"IncomingBso"],[8,"Debug"],[4,"IncomingKind"],[3,"OutgoingEncryptedBso"],[3,"OutgoingBso"],[8,"Serialize"],[8,"Deserialize"],[3,"MemoryCachedState"],[4,"ServiceStatus"],[8,"Clone"],[4,"Sync15ClientResponse"],[3,"Sync15StorageClientInit"],[3,"SyncRequestInfo"],[3,"Sync15StorageClient"],[3,"SyncResult"],[3,"Response"],[3,"Arc"],[3,"CollectionRequest"],[3,"SystemTime"],[8,"Interruptee"],[8,"CommandProcessor"],[4,"Command"],[4,"CommandStatus"],[6,"Result"],[3,"Settings"],[3,"HashSet"],[3,"Engine"],[3,"ApplyResults"],[6,"IncomingChangeset"],[3,"Engine"],[6,"OutgoingChangeset"],[4,"RequestOrder"],[3,"CollSyncIds"],[4,"EngineSyncAssociation"],[4,"SyncEngineId"],[4,"Cow"],[8,"Iterator"],[8,"Into"],[8,"Fn"],[3,"EngineIncoming"],[15,"u32"],[3,"EngineOutgoing"],[3,"Validation"],[3,"Problem"],[3,"SyncTelemetry"],[3,"SyncTelemetryPing"],[3,"Event"],[4,"SyncFailure"],[6,"c_char"],[13,"BadKeyLength"],[13,"CryptoError"],[13,"Base64Decode"],[13,"JsonError"],[13,"BadCleartextUtf8"],[13,"HawkError"],[13,"TokenserverHttpError"],[13,"StorageHttpError"],[13,"BackoffError"],[13,"UnacceptableUrl"],[13,"ServerBatchProblem"],[13,"StoreError"],[13,"RequestError"],[13,"UnexpectedStatus"],[13,"MalformedUrl"],[13,"Interrupted"],[13,"Content"],[8,"SetupStorageClient"],[13,"Error"],[13,"Success"],[13,"Wipe"],[13,"Reset"],[8,"BridgedEngine"],[8,"SyncEngine"],[13,"Connected"],[13,"Http"],[13,"Other"],[13,"Unexpected"],[13,"Auth"]]},\
"sync_guid":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Guid","as_bytes","as_ref","as_ref","as_str","borrow","borrow_mut","clone","clone_into","cmp","column_result","default","deref","deserialize","empty","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","from","from","from","from","from","from","from_slice","from_string","from_vec","get_hash","hash","into","into_string","is_valid_for_places","is_valid_for_sync_server","is_valid_places_byte","new","partial_cmp","random","serialize","to_owned","to_sql","to_string","try_from","try_into","type_id","vzip"],"q":["sync_guid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This is a type intended to be used to represent the guids …","Get the data backing this <code>Guid</code> as a <code>&amp;[u8]</code>.","","","Get the data backing this <code>Guid</code> as a <code>&amp;str</code>.","","","","","","","Create a default guid by calling <code>Guid::empty()</code>","","","Create an empty guid. Usable as a constant.","","","","","","","","","","","Returns the argument unchanged.","","","","","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>v</code> to a <code>Guid</code>, consuming it.","","","Calls <code>U::from(self)</code>.","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …","Returns true for Guids that are valid places guids, and …","Returns true for Guids that are deemed valid by the sync …","Returns true if the byte <code>b</code> is a valid base64url byte.","Create a guid from a <code>str</code>.","","Create a random guid (of 12 base64url characters). …","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1],[1,2],[1],[1,2],[[]],[[]],[1,1],[[]],[[1,1],3],[4,[[5,[1]]]],[[],1],[1,2],[[],[[6,[1]]]],[[],1],[[1,2],7],[[1,2],7],[[1,8],7],[[1,9],7],[1,7],[[1,1],7],[1,7],[[1,10],11],[[1,10],11],[[[8,[12]]],1],[[]],[9,1],[2,1],[2,1],[[],1],[[],1],[9,1],[[[8,[12]]],1],[[],13],[1],[[]],[1,9],[1,7],[1,7],[12,7],[2,1],[[1,1],[[14,[3]]]],[[],1],[[1,15],6],[[]],[1,[[17,[16]]]],[[],9],[[],6],[[],6],[[],18],[[]]],"p":[[3,"Guid"],[15,"str"],[4,"Ordering"],[4,"ValueRef"],[6,"FromSqlResult"],[4,"Result"],[15,"bool"],[3,"Vec"],[3,"String"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"u64"],[4,"Option"],[8,"Serializer"],[4,"ToSqlOutput"],[6,"Result"],[3,"TypeId"]]},\
"sync_manager":{"doc":"","t":[13,13,13,3,13,13,13,13,13,2,13,13,4,13,13,3,4,2,3,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,0,12,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,0,12,12,12,12,12,5,5,12,12,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,5,12,13,13,13,13,13,6,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["All","AuthError","BackedOff","DeviceSettings","EnabledChange","NetworkError","Ok","OtherError","PreSleep","Result","Scheduled","ServiceError","ServiceStatus","Some","Startup","SyncAuthInfo","SyncEngineSelection","SyncManagerError","SyncParams","SyncReason","SyncResult","User","auth_info","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","declined","device_settings","disconnect","enabled_changes","engines","error","failures","ffi_syncmanager_2a51_rustbuffer_alloc","ffi_syncmanager_2a51_rustbuffer_free","ffi_syncmanager_2a51_rustbuffer_from_bytes","ffi_syncmanager_2a51_rustbuffer_reserve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","fxa_access_token","fxa_device_id","into","into","into","into","into","into","into","is_ok","kid","kind","local_encryption_keys","manager","name","next_sync_allowed_at","persisted_state","persisted_state","reason","reset","reset_all","status","successful","sync","sync_key","telemetry_json","tokenserver_url","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniffi_reexport_scaffolding","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","engines","AnyhowError","InterruptedError","JsonError","LoginsError","PlacesError","Result","Sync15Error","SyncManagerError","UnknownEngine","UnsupportedFeature","UrlParseError","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","SyncManager","borrow","borrow_mut","default","disconnect","from","get_available_engines","into","new","reset","reset_all","sync","try_from","try_into","type_id","vzip","wipe"],"q":["sync_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync_manager::SyncEngineSelection","sync_manager::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sync_manager::error::SyncManagerError","","","","","","","","","sync_manager::manager","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Disconnect engines from sync, deleting/resetting the …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Perform a sync.  See SyncParams and SyncResult for details …","","","","",""],"i":[9,13,13,0,8,13,13,13,8,0,8,13,0,9,8,0,0,0,0,0,0,8,5,5,8,9,10,11,12,13,5,8,9,10,11,12,13,12,5,0,5,5,0,12,0,0,0,0,5,8,9,10,11,12,13,5,8,9,10,11,12,13,13,10,11,5,8,9,10,11,12,13,13,10,11,5,0,11,12,5,12,5,0,0,12,12,0,10,12,10,5,8,9,10,11,12,13,5,8,9,10,11,12,13,5,8,9,10,11,12,13,0,5,8,9,10,11,12,13,0,34,20,20,20,20,20,0,20,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,35,36,37,38,39,40,41,42,43,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,0,0,0,[[1,2],3],[[3,2]],[[4,2],3],[[3,1,2],3],[[5,6],7],[[8,6],7],[[9,6],7],[[10,6],7],[[11,6],7],[[12,6],7],[[13,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,15],0,0,0,0,0,0,0,0,0,[16,17],[[],17],0,0,[5,[[17,[12]]]],0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,17],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[20,6],7],[[20,6],7],[21,20],[22,20],[[]],[23,20],[24,20],[25,20],[26,20],[27,20],[[]],[28],[20,[[30,[29]]]],[[],31],[[],18],[[],18],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],32],[32],[[]],[32,[[33,[31]]]],[[]],[[],32],[[32,16],17],[32,17],[[32,5],[[17,[12]]]],[[],18],[[],18],[[],19],[[]],[[32,16],17]],"p":[[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"SyncParams"],[3,"Formatter"],[6,"Result"],[4,"SyncReason"],[4,"SyncEngineSelection"],[3,"SyncAuthInfo"],[3,"DeviceSettings"],[3,"SyncResult"],[4,"ServiceStatus"],[4,"ServiceStatus"],[15,"bool"],[15,"str"],[6,"Result"],[4,"Result"],[3,"TypeId"],[4,"SyncManagerError"],[4,"ParseError"],[3,"Error"],[4,"Error"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"Interrupted"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"SyncManager"],[3,"Vec"],[13,"Some"],[13,"UnknownEngine"],[13,"UnsupportedFeature"],[13,"Sync15Error"],[13,"UrlParseError"],[13,"InterruptedError"],[13,"JsonError"],[13,"LoginsError"],[13,"PlacesError"],[13,"AnyhowError"]]},\
"tabs":{"doc":"","t":[2,3,2,6,2,2,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,0,5,5,5,5,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,6,4,13,13,13,6,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["ApiResult","ClientRemoteTabs","Error","RemoteTabRecord","Result","TabsApiError","TabsBridgedEngine","TabsDeviceType","TabsEngine","TabsStore","apply","apply_incoming","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridged_engine","client_id","client_name","clone","clone_into","collection_name","deserialize","device_type","ensure_current_sync_id","error","ffi_tabs_edc9_rustbuffer_alloc","ffi_tabs_edc9_rustbuffer_free","ffi_tabs_edc9_rustbuffer_from_bytes","ffi_tabs_edc9_rustbuffer_reserve","fmt","from","from","from","from","get_all","get_collection_requests","get_registered_sync_engine","get_sync_assoc","into","into","into","into","last_modified","last_sync","new","new","new","new_with_mem_path","prepare_for_sync","prepare_for_sync","register_with_sync_manager","remote_tabs","remote_tabs","reset","reset","reset","reset_sync_id","serialize","set_last_sync","set_local_tabs","set_uploaded","storage","store_incoming","sync","sync_finished","sync_finished","sync_id","sync_impl","sync_started","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uniffi_reexport_scaffolding","vzip","vzip","vzip","vzip","wipe","wipe","ApiResult","Error","JsonError","MissingLocalIdError","OpenDatabaseError","Result","SqlError","SqlError","SyncAdapterError","SyncError","TabsApiError","UnexpectedTabsError","UrlParseError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_error_handling","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","0","reason","reason","reason"],"q":["tabs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tabs::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tabs::error::Error","","","","","tabs::error::TabsApiError","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Called by the sync manager to get a sync engine via the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A convenience wrapper around sync_multiple.","","","","","","","","","","","","","","","","","","","","","","","","","","Result enum for the public interface","","","","","Result enum for internal functions","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,5,10,1,5,12,10,1,5,12,10,12,12,12,12,5,12,12,1,0,0,0,0,0,12,10,1,5,12,10,5,0,5,10,1,5,12,12,1,10,1,5,10,1,5,10,10,12,10,1,5,1,12,1,10,1,10,1,10,1,5,1,5,1,12,10,1,5,12,10,1,5,12,10,1,5,12,0,10,1,5,12,1,5,0,0,36,36,36,0,35,36,36,35,0,35,36,35,36,35,36,35,35,36,36,35,36,36,36,36,36,36,36,35,36,35,36,36,35,36,35,36,35,36,35,36,35,36,45,46,47,48,49,50,51,52],"f":[0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[5,[3,[6]],7],[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1]]]],0,0,[12,12],[[]],[5,[[14,[13]]]],[[],[[15,[12]]]],0,[[1,13],[[4,[2]]]],0,[[16,17],18],[[18,17]],[[19,17],18],[[18,16,17],18],[[12,20],21],[[]],[[]],[[]],[[]],[10,[[3,[12]]]],[[5,22],[[9,[[3,[23]]]]]],[24,[[27,[[26,[25]]]]]],[5,[[9,[28]]]],[[]],[[]],[[]],[[]],0,[1,[[4,[29]]]],[[[31,[30]]],10],0,[[[11,[10]]],5],[13,10],[[1,13],4],[[5,32],9],[[[11,[10]]]],[10,[[27,[[3,[12]]]]]],0,[[[11,[10]]],4],[1,4],[[5,28],9],[1,[[4,[2]]]],[12,15],[[1,29],4],[[10,[3,[0]]]],[[1,29,[3,[33]]],4],0,[[1,[3,[2]]],4],[[[11,[10]],2,2,2,2,2],[[4,[2]]]],[1,4],[[5,22,[3,[33]]],9],[1,[[4,[[27,[2]]]]]],0,[1,4],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],34],[[],34],[[],34],[[],34],0,[[]],[[]],[[]],[[]],[1,4],[5,9],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[35,20],21],[[35,20],21],[[36,20],21],[[36,20],21],[[]],[37,36],[38,36],[39,36],[40,36],[[]],[41,36],[36,42],[[]],[[]],[43],[43],[36,[[27,[44]]]],[[],2],[[],2],[[],15],[[],15],[[],15],[[],15],[[],34],[[],34],[[]],[[]],0,0,0,0,0,0,0,0],"p":[[3,"TabsBridgedEngine"],[3,"String"],[3,"Vec"],[6,"ApiResult"],[3,"TabsEngine"],[6,"IncomingChangeset"],[3,"Engine"],[6,"OutgoingChangeset"],[6,"Result"],[3,"TabsStore"],[3,"Arc"],[3,"ClientRemoteTabs"],[15,"str"],[4,"Cow"],[4,"Result"],[15,"i32"],[3,"RustCallStatus"],[3,"RustBuffer"],[3,"ForeignBytes"],[3,"Formatter"],[6,"Result"],[3,"ServerTimestamp"],[3,"CollectionRequest"],[4,"SyncEngineId"],[8,"SyncEngine"],[3,"Box"],[4,"Option"],[4,"EngineSyncAssociation"],[15,"i64"],[3,"Path"],[8,"AsRef"],[8,"Fn"],[3,"Guid"],[3,"TypeId"],[4,"TabsApiError"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"ParseError"],[4,"Error"],[3,"Error"],[3,"ErrorHandling"],[3,"Demand"],[8,"Error"],[13,"SyncAdapterError"],[13,"JsonError"],[13,"UrlParseError"],[13,"SqlError"],[13,"OpenDatabaseError"],[13,"SyncError"],[13,"SqlError"],[13,"UnexpectedTabsError"]]},\
"types":{"doc":"","t":[12,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","EARLIEST","Timestamp","as_millis","as_millis_i64","borrow","borrow_mut","checked_add","checked_sub","clone","clone_into","cmp","column_result","default","deserialize","duration_since","eq","fmt","fmt","from","from","from","get_hash","hash","into","now","partial_cmp","serialize","to_owned","to_sql","to_string","try_from","try_into","type_id"],"q":["types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","In desktop sync, bookmarks are clamped to Jan 23, 1993 …","","","","","","","","","","","","","","Returns None if <code>other</code> is later than <code>self</code> (Duration may not …","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,[1,2],[1,3],[[]],[[]],[[1,4],[[5,[1]]]],[[1,4],[[5,[1]]]],[1,1],[[]],[[1,1],6],[7,[[8,[1]]]],[[],1],[[],[[9,[1]]]],[[1,1],[[5,[4]]]],[[1,1],10],[[1,11],12],[[1,11],12],[[]],[13,1],[2,1],[[],2],[1],[[]],[[],1],[[1,1],[[5,[6]]]],[1,9],[[]],[1,[[15,[14]]]],[[],16],[[],9],[[],9],[[],17]],"p":[[3,"Timestamp"],[15,"u64"],[15,"i64"],[3,"Duration"],[4,"Option"],[4,"Ordering"],[4,"ValueRef"],[6,"FromSqlResult"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"SystemTime"],[4,"ToSqlOutput"],[6,"Result"],[3,"String"],[3,"TypeId"]]},\
"viaduct":{"doc":"","t":[8,13,13,2,13,13,3,3,3,3,4,13,13,13,13,3,3,13,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,11,10,11,5,11,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,13,13,4,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,3,12,11,11,12,11,12,11,11,12,11,11,11,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,5,5,5],"n":["Backend","Connect","Delete","GLOBAL_SETTINGS","Get","Head","Header","HeaderName","Headers","InvalidHeaderName","Method","Options","Patch","Post","Put","Request","Response","Trace","as_ref","as_ref","as_str","as_str","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","delete","deref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_as","get_header","hash","hash","hash","header","header_names","headers","headers","headers","insert","insert_header","insert_if_missing","into","into","into","into","into","into","into","into_iter","into_iter","into_vec","is_client_error","is_empty","is_server_error","is_success","iter","json","json","len","method","name","name","new","new","new","new","new_unchecked","note_backend","partial_cmp","partial_cmp","partial_cmp","patch","post","provide","put","query","request_method","require_success","send","send","set_backend","set_query","settings","status","status_codes","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","value","with_capacity","BackendError","BackendNotInitialized","Error","NetworkError","NonTlsUrl","RequestHeaderError","SetBackendError","UnexpectedStatus","UrlError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","from","from","from","into","into","method","provide","provide","source","status","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url","0","0","0","0","ACCEPT","ACCEPT_ENCODING","AUTHORIZATION","CONTENT_TYPE","ETAG","IF_NONE_MATCH","RETRY_AFTER","USER_AGENT","X_IF_UNMODIFIED_SINCE","X_KEYID","X_LAST_MODIFIED","X_TIMESTAMP","X_WEAVE_BACKOFF","X_WEAVE_NEXT_OFFSET","X_WEAVE_RECORDS","X_WEAVE_TIMESTAMP","GLOBAL_SETTINGS","Settings","addn_allowed_insecure_url","borrow","borrow_mut","connect_timeout","fmt","follow_redirects","from","into","read_timeout","try_from","try_into","type_id","use_caches","ACCEPTED","BAD_GATEWAY","BAD_REQUEST","CONFLICT","CONTINUE","CREATED","EXPECTATION_FAILED","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","INTERNAL_SERVER_ERROR","LENGTH_REQUIRED","METHOD_NOT_ALLOWED","MOVED_PERMANENTLY","MULTIPLE_CHOICES","NONAUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","PARTIAL_CONTENT","PAYMENT_REQUIRED","PRECONDITION_FAILED","PROXY_AUTHENTICATION_REQUIRED","REQUESTED_RANGE_NOT_SATISFIABLE","REQUEST_ENTITY_TOO_LARGE","REQUEST_TIMEOUT","REQUEST_URI_TOO_LONG","RESET_CONTENT","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","UNAUTHORIZED","UNSUPPORTED_MEDIA_TYPE","USE_PROXY","is_client_error_code","is_server_error_code","is_success_code"],"q":["viaductviaduct::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","viaduct::error::Error","","","","viaduct::header_names","","","","","","","","","","","","","","","","viaduct::settings","","","","","","","","","","","","","","","viaduct::status_codes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","A single header. Headers have a name (case insensitive) …","Represents a header name that we know to be both valid and …","A list of headers.","Indicates an invalid header name. Note that we only emit …","HTTP Methods.","","","","","","A response from the server.","","","","","","Set this request’s body.","","The body of the response. Note that responses with binary …","","","","","","","","","","","","","","","Clear this set of headers.","","","","","","","","","","","","","","","","","","","Alias for <code>Request::new(Method::Delete, url)</code>, for …","","","","","","","","","","","","","Add all the headers in the provided iterator to this list …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the value of the header with the provided name.","Alias for <code>Request::new(Method::Get, url)</code>, for convenience.","Get the value of the header with the provided name, and …","Get the header object with the requested name. Usually, …","","","","Add the provided header to the list of headers to send …","","Add all the provided headers to the list of headers to …","","The headers returned with this response.","Insert or update a new header.","Insert or update a header directly. Typically you will …","Insert the provided header unless a header is already …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this list of headers to a Vec","Returns true if the status code is in the interval …","Returns true if <code>len()</code> is zero.","Returns true if the status code is in the interval …","Returns true if the status code is in the interval …","Get an iterator over the headers in no particular order.","Set body to the result of serializing <code>val</code>, and, unless it …","Parse the body as JSON.","Returns the number of headers.","","","","Create a new header. In general you likely want to use …","","Initialize an empty list of headers.","Construct a new request to the given <code>url</code> using the given …","","","","","","Alias for <code>Request::new(Method::Patch, url)</code>, for …","Alias for <code>Request::new(Method::Post, url)</code>, for convenience.","","Alias for <code>Request::new(Method::Put, url)</code>, for convenience.","Append the provided query parameters to the URL","The method used to request this response.","Returns an <code>UnexpectedStatus</code> error if <code>self.is_success()</code> is …","","","","Set the query string of the URL. Note that …","","The HTTP Status code of this response.","A module containing constants for all HTTP status codes.","Get the body as a string. Assumes UTF-8 encoding. Any …","","","","","","","","","","","","Add all the headers in the provided iterator, unless any …","","","","","","","","Get the value of the header with the provided name, and …","","","","","","","","","","","","","","","","The URL of this response.","","Initialize an empty list of headers backed by a vector …","","","","","","","","This error is returned as the <code>Err</code> result from […","Note: we return this if the server returns a bad URL with …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: reqwest allows these only to be specified …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is it a 4xx error?","Is it a 5xx error?","Is it a 2xx status?"],"i":[0,3,3,0,3,3,0,0,0,0,0,3,3,3,3,0,0,3,1,1,1,3,4,4,11,1,9,10,8,3,4,11,1,9,10,8,3,4,11,8,1,9,10,8,3,4,11,1,9,10,8,3,4,11,1,10,3,8,4,1,1,1,1,1,1,1,9,10,8,3,0,8,1,1,9,9,10,10,8,3,3,4,11,1,1,1,1,9,10,8,3,4,11,8,8,4,8,8,1,10,3,4,0,4,4,11,8,8,8,1,9,10,8,3,4,11,8,8,8,11,8,11,11,8,4,11,8,4,9,10,1,10,8,4,10,0,1,10,3,4,4,9,4,4,11,11,26,4,0,4,0,11,0,11,1,9,10,8,3,4,11,1,9,10,3,8,1,9,10,8,3,4,11,8,1,9,10,8,3,4,11,1,9,10,8,3,4,11,4,11,10,8,21,21,0,21,21,21,21,0,21,21,25,21,25,25,25,21,21,25,25,21,21,25,21,25,25,21,25,21,25,25,21,25,21,25,21,25,21,25,25,32,33,34,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1,2],[1,2],[3,2],[[4,[7,[[6,[5]]]]],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[1,1],[9,9],[10,10],[8,8],[3,3],[4,4],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[[10,10],12],[[3,3],12],[[],8],[13,4],[1,2],[[1,14],15],[[1,2],15],[[1,2],15],[[1,16],15],[[1,14],15],[[1,1],15],[[9,9],15],[[10,10],15],[[8,8],15],[[3,3],15],0,[8,8],[[1,17],18],[[1,17],18],[[9,17],18],[[9,17],18],[[10,17],18],[[10,17],18],[[8,17],18],[[3,17],18],[[3,17],18],[[4,17],18],[[11,17],18],[2,1],[14,1],[[[16,[2]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[8,[[19,[2]]]],[13,4],[8,[[19,[20]]]],[8,[[19,[10]]]],[1],[10],[3],[4,[[20,[4,21]]]],0,[4,4],0,0,[8,[[20,[8,21]]]],[[8,10],8],[8,[[20,[8,21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[8,[[6,[10]]]],[11,15],[8,15],[11,15],[11,15],[8],[4,4],[11,[[20,[22]]]],[8,23],0,[9,2],[10,1],[[[7,[[16,[2]]]]],[[20,[1,9]]]],[[],[[20,[10,21]]]],[[],8],[[3,13],4],[1,10],[2],[[1,1],[[19,[12]]]],[[10,10],[[19,[12]]]],[[3,3],[[19,[12]]]],[13,4],[13,4],[24],[13,4],[4,4],0,[11,[[20,[11,25]]]],[4,[[20,[11,21]]]],[4,[[20,[11,21]]]],[26,[[20,[21]]]],[[4,[7,[[19,[2]]]]],4],0,0,0,[11,[[16,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[8,[[20,[8]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[8,19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,[10,2],[23,8],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[25,25],[[]],[[21,17],18],[[21,17],18],[[25,17],18],[[25,17],18],[28,21],[[]],[[]],[[]],[[]],0,[24],[24],[21,[[19,[29]]]],0,[[]],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],27],[[],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[30,17],18],0,[[]],[[]],0,[[],20],[[],20],[[],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,15],[31,15],[31,15]],"p":[[3,"HeaderName"],[15,"str"],[4,"Method"],[3,"Request"],[15,"u8"],[3,"Vec"],[8,"Into"],[3,"Headers"],[3,"InvalidHeaderName"],[3,"Header"],[3,"Response"],[4,"Ordering"],[3,"Url"],[3,"String"],[15,"bool"],[4,"Cow"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[4,"Error"],[3,"Error"],[15,"usize"],[3,"Demand"],[3,"UnexpectedStatus"],[8,"Backend"],[3,"TypeId"],[4,"ParseError"],[8,"Error"],[3,"Settings"],[15,"u16"],[13,"RequestHeaderError"],[13,"BackendError"],[13,"NetworkError"],[13,"UrlError"]]},\
"viaduct_reqwest":{"doc":"","t":[3,11,11,11,11,11,11,11,11,5,5],"n":["ReqwestBackend","borrow","borrow_mut","from","into","send","try_from","try_into","type_id","use_reqwest_backend","viaduct_detect_reqwest_backend"],"q":["viaduct_reqwest","","","","","","","","","",""],"d":["","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A dummy symbol we include so that we can detect whether or …"],"i":[0,1,1,1,1,1,1,1,1,0,0],"f":[0,[[]],[[]],[[]],[[]],[[1,2],[[5,[3,4]]]],[[],5],[[],5],[[],6],[[]],[[]]],"p":[[3,"ReqwestBackend"],[3,"Request"],[3,"Response"],[4,"Error"],[4,"Result"],[3,"TypeId"]]},\
"webext_storage":{"doc":"","t":[3,17,17,17,17,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,0,12,12,12,11,11,11,11,11,11,12,12,12,11,0,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,13,13,13,13,13,13,13,13,4,6,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["MigrationInfo","STORAGE_VERSION","SYNC_MAX_ITEMS","SYNC_QUOTA_BYTES","SYNC_QUOTA_BYTES_PER_ITEM","UsageInfo","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","entries","entries_successful","eq","eq","error","ext_id","extensions","extensions_successful","fmt","fmt","from","from","into","into","num_bytes","num_keys","open_failure","serialize","store","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConnectionAlreadyOpen","Error","ErrorKind","IllegalDatabasePath","IncomingPayloadError","InterruptedError","InvalidConnectionType","IoError","ItemBytes","JsonError","MaxItems","OpenDatabaseError","QuotaError","QuotaReason","Result","SqlError","TotalBytes","Utf8Error","WrongApiForClose","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","kind","provide","provide","source","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","Store","borrow","borrow_mut","bridged_engine","clear","close","from","get","get_bytes_in_use","get_synced_changes","interrupt_handle","into","migrate","new","remove","set","take_migration_info","try_from","try_into","type_id","usage","vzip"],"q":["webext_storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","webext_storage::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","webext_storage::error::ErrorKind","","","","","","","","","webext_storage::store","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Information about the usage of a single extension.","","","","","","","","","","","The number of entries (rows in the original table) we …","The number of records we successfully migrated (equal to …","","","","The extension id.","The number of extensions (distinct extension ids) in the …","The number of extensions we successfully migrated","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of bytes used by the extension. This result is …","The number of keys the extension uses.","True iff we failed to open the source DB at all.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A store is used to access <code>storage.sync</code> data. It manages an …","","","Returns a bridged sync engine for Desktop for this store.","Deletes all key-value pairs for the extension. As with …","Closes the store and its database connection. See the docs …","Returns the argument unchanged.","Returns the values for one or more keys <code>keys</code> can be:","Returns the bytes in use for the specified items (which …","Gets the changes which the current sync applied. Should be …","Returns an interrupt handle for this store.","Calls <code>U::from(self)</code>.","Migrates data from a database in the format of the “old…","Creates a store backed by a database at <code>db_path</code>. The path …","Deletes the values for one or more keys. As with <code>get</code>, <code>keys</code> …","Sets one or more JSON key-value pairs for an extension ID. …","Read-and-delete (e.g. <code>take</code> in rust parlance, see …","","","","Returns information about per-extension usage",""],"i":[0,0,0,0,0,0,1,2,1,2,1,2,1,2,2,2,2,2,1,2,0,1,2,2,1,2,1,2,1,2,1,1,2,2,0,1,2,1,2,1,2,1,2,1,2,12,0,0,12,12,12,12,12,11,12,11,12,12,0,0,12,11,12,12,8,11,12,8,11,12,8,11,12,12,8,8,11,12,12,12,12,12,12,12,12,8,8,8,8,8,8,8,8,8,11,12,8,8,12,8,12,12,8,11,12,8,11,12,8,11,12,8,11,12,8,33,34,35,36,37,38,39,40,41,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],2],[[],[[3,[2]]]],0,0,[[1,1],4],[[2,2],4],0,0,0,0,[[1,5],6],[[2,5],6],[[]],[[]],[[]],[[]],0,0,0,[2,3],0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],7],[[],7],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,[[10,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,5],6],[[12,5],6],[[12,5],6],[[8,5],6],[[8,5],6],[[]],[13,12],[14,12],[15,12],[[]],[16,12],[17,12],[18,12],[19,12],[13,8],[12,8],[17,8],[18,8],[19,8],[[]],[16,8],[14,8],[15,8],[[]],[[]],[[]],[8,12],[20],[20],[12,[[10,[21]]]],[[],22],[[],22],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],7],[[],7],[[],7],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[23,24],[[25,[0]]]],[23,3],[[]],[[23,24,26],[[25,[26]]]],[[23,24,26],[[25,[27]]]],[23,[[25,[[28,[0]]]]]],[23,[[30,[29]]]],[[]],[[23,[32,[31]]],25],[[[32,[31]]],[[25,[23]]]],[[23,24,26],[[25,[0]]]],[[23,24,26],[[25,[0]]]],[23,[[25,[[10,[2]]]]]],[[],3],[[],3],[[],7],[23,[[25,[[28,[1]]]]]],[[]]],"p":[[3,"UsageInfo"],[3,"MigrationInfo"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Error"],[3,"Mutex"],[4,"Option"],[4,"QuotaReason"],[4,"ErrorKind"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"Utf8Error"],[3,"Interrupted"],[3,"Error"],[4,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"Store"],[15,"str"],[6,"Result"],[4,"Value"],[15,"usize"],[3,"Vec"],[3,"SqlInterruptHandle"],[3,"Arc"],[3,"Path"],[8,"AsRef"],[13,"QuotaError"],[13,"JsonError"],[13,"SqlError"],[13,"IoError"],[13,"InterruptedError"],[13,"IllegalDatabasePath"],[13,"Utf8Error"],[13,"OpenDatabaseError"],[13,"IncomingPayloadError"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
